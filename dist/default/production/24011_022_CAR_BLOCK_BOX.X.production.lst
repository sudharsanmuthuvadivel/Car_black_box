

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Nov 21 13:25:03 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,space=0,delta=2
    13                           	psect	clrtext,global,class=CODE,space=0,delta=2
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    18                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=1
    31                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2,group=1
    51                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2,group=1
    52                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2,group=1
    53                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2,group=2
    61                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2,group=2
    62                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2,group=1
    66                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2,group=1
    67                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2,group=1
    68                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	intentry,global,class=CODE,space=0,delta=2
    70                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    72                           	dabs	1,0x7E,2
    73     0000                     
    74                           ; Version 2.40
    75                           ; Generated 17/11/2021 GMT
    76                           ; 
    77                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F877A Definitions
   107                           ; 
   108                           ; SFR Addresses
   109     0004                     fsr             equ	4
   110     0004                     fsr0            equ	4
   111     0000                     indf            equ	0
   112     0000                     indf0           equ	0
   113     0002                     pc              equ	2
   114     0002                     pcl             equ	2
   115     000A                     pclath          equ	10
   116     0003                     status          equ	3
   117     0000                     INDF            equ	0	;# 
   118     0001                     TMR0            equ	1	;# 
   119     0002                     PCL             equ	2	;# 
   120     0003                     STATUS          equ	3	;# 
   121     0004                     FSR             equ	4	;# 
   122     0005                     PORTA           equ	5	;# 
   123     0006                     PORTB           equ	6	;# 
   124     0007                     PORTC           equ	7	;# 
   125     0008                     PORTD           equ	8	;# 
   126     0009                     PORTE           equ	9	;# 
   127     000A                     PCLATH          equ	10	;# 
   128     000B                     INTCON          equ	11	;# 
   129     000C                     PIR1            equ	12	;# 
   130     000D                     PIR2            equ	13	;# 
   131     000E                     TMR1            equ	14	;# 
   132     000E                     TMR1L           equ	14	;# 
   133     000F                     TMR1H           equ	15	;# 
   134     0010                     T1CON           equ	16	;# 
   135     0011                     TMR2            equ	17	;# 
   136     0012                     T2CON           equ	18	;# 
   137     0013                     SSPBUF          equ	19	;# 
   138     0014                     SSPCON          equ	20	;# 
   139     0015                     CCPR1           equ	21	;# 
   140     0015                     CCPR1L          equ	21	;# 
   141     0016                     CCPR1H          equ	22	;# 
   142     0017                     CCP1CON         equ	23	;# 
   143     0018                     RCSTA           equ	24	;# 
   144     0019                     TXREG           equ	25	;# 
   145     001A                     RCREG           equ	26	;# 
   146     001B                     CCPR2           equ	27	;# 
   147     001B                     CCPR2L          equ	27	;# 
   148     001C                     CCPR2H          equ	28	;# 
   149     001D                     CCP2CON         equ	29	;# 
   150     001E                     ADRESH          equ	30	;# 
   151     001F                     ADCON0          equ	31	;# 
   152     0081                     OPTION_REG      equ	129	;# 
   153     0085                     TRISA           equ	133	;# 
   154     0086                     TRISB           equ	134	;# 
   155     0087                     TRISC           equ	135	;# 
   156     0088                     TRISD           equ	136	;# 
   157     0089                     TRISE           equ	137	;# 
   158     008C                     PIE1            equ	140	;# 
   159     008D                     PIE2            equ	141	;# 
   160     008E                     PCON            equ	142	;# 
   161     0091                     SSPCON2         equ	145	;# 
   162     0092                     PR2             equ	146	;# 
   163     0093                     SSPADD          equ	147	;# 
   164     0094                     SSPSTAT         equ	148	;# 
   165     0098                     TXSTA           equ	152	;# 
   166     0099                     SPBRG           equ	153	;# 
   167     009C                     CMCON           equ	156	;# 
   168     009D                     CVRCON          equ	157	;# 
   169     009E                     ADRESL          equ	158	;# 
   170     009F                     ADCON1          equ	159	;# 
   171     010C                     EEDATA          equ	268	;# 
   172     010D                     EEADR           equ	269	;# 
   173     010E                     EEDATH          equ	270	;# 
   174     010F                     EEADRH          equ	271	;# 
   175     018C                     EECON1          equ	396	;# 
   176     018D                     EECON2          equ	397	;# 
   177     0000                     INDF            equ	0	;# 
   178     0001                     TMR0            equ	1	;# 
   179     0002                     PCL             equ	2	;# 
   180     0003                     STATUS          equ	3	;# 
   181     0004                     FSR             equ	4	;# 
   182     0005                     PORTA           equ	5	;# 
   183     0006                     PORTB           equ	6	;# 
   184     0007                     PORTC           equ	7	;# 
   185     0008                     PORTD           equ	8	;# 
   186     0009                     PORTE           equ	9	;# 
   187     000A                     PCLATH          equ	10	;# 
   188     000B                     INTCON          equ	11	;# 
   189     000C                     PIR1            equ	12	;# 
   190     000D                     PIR2            equ	13	;# 
   191     000E                     TMR1            equ	14	;# 
   192     000E                     TMR1L           equ	14	;# 
   193     000F                     TMR1H           equ	15	;# 
   194     0010                     T1CON           equ	16	;# 
   195     0011                     TMR2            equ	17	;# 
   196     0012                     T2CON           equ	18	;# 
   197     0013                     SSPBUF          equ	19	;# 
   198     0014                     SSPCON          equ	20	;# 
   199     0015                     CCPR1           equ	21	;# 
   200     0015                     CCPR1L          equ	21	;# 
   201     0016                     CCPR1H          equ	22	;# 
   202     0017                     CCP1CON         equ	23	;# 
   203     0018                     RCSTA           equ	24	;# 
   204     0019                     TXREG           equ	25	;# 
   205     001A                     RCREG           equ	26	;# 
   206     001B                     CCPR2           equ	27	;# 
   207     001B                     CCPR2L          equ	27	;# 
   208     001C                     CCPR2H          equ	28	;# 
   209     001D                     CCP2CON         equ	29	;# 
   210     001E                     ADRESH          equ	30	;# 
   211     001F                     ADCON0          equ	31	;# 
   212     0081                     OPTION_REG      equ	129	;# 
   213     0085                     TRISA           equ	133	;# 
   214     0086                     TRISB           equ	134	;# 
   215     0087                     TRISC           equ	135	;# 
   216     0088                     TRISD           equ	136	;# 
   217     0089                     TRISE           equ	137	;# 
   218     008C                     PIE1            equ	140	;# 
   219     008D                     PIE2            equ	141	;# 
   220     008E                     PCON            equ	142	;# 
   221     0091                     SSPCON2         equ	145	;# 
   222     0092                     PR2             equ	146	;# 
   223     0093                     SSPADD          equ	147	;# 
   224     0094                     SSPSTAT         equ	148	;# 
   225     0098                     TXSTA           equ	152	;# 
   226     0099                     SPBRG           equ	153	;# 
   227     009C                     CMCON           equ	156	;# 
   228     009D                     CVRCON          equ	157	;# 
   229     009E                     ADRESL          equ	158	;# 
   230     009F                     ADCON1          equ	159	;# 
   231     010C                     EEDATA          equ	268	;# 
   232     010D                     EEADR           equ	269	;# 
   233     010E                     EEDATH          equ	270	;# 
   234     010F                     EEADRH          equ	271	;# 
   235     018C                     EECON1          equ	396	;# 
   236     018D                     EECON2          equ	397	;# 
   237     0000                     INDF            equ	0	;# 
   238     0001                     TMR0            equ	1	;# 
   239     0002                     PCL             equ	2	;# 
   240     0003                     STATUS          equ	3	;# 
   241     0004                     FSR             equ	4	;# 
   242     0005                     PORTA           equ	5	;# 
   243     0006                     PORTB           equ	6	;# 
   244     0007                     PORTC           equ	7	;# 
   245     0008                     PORTD           equ	8	;# 
   246     0009                     PORTE           equ	9	;# 
   247     000A                     PCLATH          equ	10	;# 
   248     000B                     INTCON          equ	11	;# 
   249     000C                     PIR1            equ	12	;# 
   250     000D                     PIR2            equ	13	;# 
   251     000E                     TMR1            equ	14	;# 
   252     000E                     TMR1L           equ	14	;# 
   253     000F                     TMR1H           equ	15	;# 
   254     0010                     T1CON           equ	16	;# 
   255     0011                     TMR2            equ	17	;# 
   256     0012                     T2CON           equ	18	;# 
   257     0013                     SSPBUF          equ	19	;# 
   258     0014                     SSPCON          equ	20	;# 
   259     0015                     CCPR1           equ	21	;# 
   260     0015                     CCPR1L          equ	21	;# 
   261     0016                     CCPR1H          equ	22	;# 
   262     0017                     CCP1CON         equ	23	;# 
   263     0018                     RCSTA           equ	24	;# 
   264     0019                     TXREG           equ	25	;# 
   265     001A                     RCREG           equ	26	;# 
   266     001B                     CCPR2           equ	27	;# 
   267     001B                     CCPR2L          equ	27	;# 
   268     001C                     CCPR2H          equ	28	;# 
   269     001D                     CCP2CON         equ	29	;# 
   270     001E                     ADRESH          equ	30	;# 
   271     001F                     ADCON0          equ	31	;# 
   272     0081                     OPTION_REG      equ	129	;# 
   273     0085                     TRISA           equ	133	;# 
   274     0086                     TRISB           equ	134	;# 
   275     0087                     TRISC           equ	135	;# 
   276     0088                     TRISD           equ	136	;# 
   277     0089                     TRISE           equ	137	;# 
   278     008C                     PIE1            equ	140	;# 
   279     008D                     PIE2            equ	141	;# 
   280     008E                     PCON            equ	142	;# 
   281     0091                     SSPCON2         equ	145	;# 
   282     0092                     PR2             equ	146	;# 
   283     0093                     SSPADD          equ	147	;# 
   284     0094                     SSPSTAT         equ	148	;# 
   285     0098                     TXSTA           equ	152	;# 
   286     0099                     SPBRG           equ	153	;# 
   287     009C                     CMCON           equ	156	;# 
   288     009D                     CVRCON          equ	157	;# 
   289     009E                     ADRESL          equ	158	;# 
   290     009F                     ADCON1          equ	159	;# 
   291     010C                     EEDATA          equ	268	;# 
   292     010D                     EEADR           equ	269	;# 
   293     010E                     EEDATH          equ	270	;# 
   294     010F                     EEADRH          equ	271	;# 
   295     018C                     EECON1          equ	396	;# 
   296     018D                     EECON2          equ	397	;# 
   297     0000                     INDF            equ	0	;# 
   298     0001                     TMR0            equ	1	;# 
   299     0002                     PCL             equ	2	;# 
   300     0003                     STATUS          equ	3	;# 
   301     0004                     FSR             equ	4	;# 
   302     0005                     PORTA           equ	5	;# 
   303     0006                     PORTB           equ	6	;# 
   304     0007                     PORTC           equ	7	;# 
   305     0008                     PORTD           equ	8	;# 
   306     0009                     PORTE           equ	9	;# 
   307     000A                     PCLATH          equ	10	;# 
   308     000B                     INTCON          equ	11	;# 
   309     000C                     PIR1            equ	12	;# 
   310     000D                     PIR2            equ	13	;# 
   311     000E                     TMR1            equ	14	;# 
   312     000E                     TMR1L           equ	14	;# 
   313     000F                     TMR1H           equ	15	;# 
   314     0010                     T1CON           equ	16	;# 
   315     0011                     TMR2            equ	17	;# 
   316     0012                     T2CON           equ	18	;# 
   317     0013                     SSPBUF          equ	19	;# 
   318     0014                     SSPCON          equ	20	;# 
   319     0015                     CCPR1           equ	21	;# 
   320     0015                     CCPR1L          equ	21	;# 
   321     0016                     CCPR1H          equ	22	;# 
   322     0017                     CCP1CON         equ	23	;# 
   323     0018                     RCSTA           equ	24	;# 
   324     0019                     TXREG           equ	25	;# 
   325     001A                     RCREG           equ	26	;# 
   326     001B                     CCPR2           equ	27	;# 
   327     001B                     CCPR2L          equ	27	;# 
   328     001C                     CCPR2H          equ	28	;# 
   329     001D                     CCP2CON         equ	29	;# 
   330     001E                     ADRESH          equ	30	;# 
   331     001F                     ADCON0          equ	31	;# 
   332     0081                     OPTION_REG      equ	129	;# 
   333     0085                     TRISA           equ	133	;# 
   334     0086                     TRISB           equ	134	;# 
   335     0087                     TRISC           equ	135	;# 
   336     0088                     TRISD           equ	136	;# 
   337     0089                     TRISE           equ	137	;# 
   338     008C                     PIE1            equ	140	;# 
   339     008D                     PIE2            equ	141	;# 
   340     008E                     PCON            equ	142	;# 
   341     0091                     SSPCON2         equ	145	;# 
   342     0092                     PR2             equ	146	;# 
   343     0093                     SSPADD          equ	147	;# 
   344     0094                     SSPSTAT         equ	148	;# 
   345     0098                     TXSTA           equ	152	;# 
   346     0099                     SPBRG           equ	153	;# 
   347     009C                     CMCON           equ	156	;# 
   348     009D                     CVRCON          equ	157	;# 
   349     009E                     ADRESL          equ	158	;# 
   350     009F                     ADCON1          equ	159	;# 
   351     010C                     EEDATA          equ	268	;# 
   352     010D                     EEADR           equ	269	;# 
   353     010E                     EEDATH          equ	270	;# 
   354     010F                     EEADRH          equ	271	;# 
   355     018C                     EECON1          equ	396	;# 
   356     018D                     EECON2          equ	397	;# 
   357     0000                     INDF            equ	0	;# 
   358     0001                     TMR0            equ	1	;# 
   359     0002                     PCL             equ	2	;# 
   360     0003                     STATUS          equ	3	;# 
   361     0004                     FSR             equ	4	;# 
   362     0005                     PORTA           equ	5	;# 
   363     0006                     PORTB           equ	6	;# 
   364     0007                     PORTC           equ	7	;# 
   365     0008                     PORTD           equ	8	;# 
   366     0009                     PORTE           equ	9	;# 
   367     000A                     PCLATH          equ	10	;# 
   368     000B                     INTCON          equ	11	;# 
   369     000C                     PIR1            equ	12	;# 
   370     000D                     PIR2            equ	13	;# 
   371     000E                     TMR1            equ	14	;# 
   372     000E                     TMR1L           equ	14	;# 
   373     000F                     TMR1H           equ	15	;# 
   374     0010                     T1CON           equ	16	;# 
   375     0011                     TMR2            equ	17	;# 
   376     0012                     T2CON           equ	18	;# 
   377     0013                     SSPBUF          equ	19	;# 
   378     0014                     SSPCON          equ	20	;# 
   379     0015                     CCPR1           equ	21	;# 
   380     0015                     CCPR1L          equ	21	;# 
   381     0016                     CCPR1H          equ	22	;# 
   382     0017                     CCP1CON         equ	23	;# 
   383     0018                     RCSTA           equ	24	;# 
   384     0019                     TXREG           equ	25	;# 
   385     001A                     RCREG           equ	26	;# 
   386     001B                     CCPR2           equ	27	;# 
   387     001B                     CCPR2L          equ	27	;# 
   388     001C                     CCPR2H          equ	28	;# 
   389     001D                     CCP2CON         equ	29	;# 
   390     001E                     ADRESH          equ	30	;# 
   391     001F                     ADCON0          equ	31	;# 
   392     0081                     OPTION_REG      equ	129	;# 
   393     0085                     TRISA           equ	133	;# 
   394     0086                     TRISB           equ	134	;# 
   395     0087                     TRISC           equ	135	;# 
   396     0088                     TRISD           equ	136	;# 
   397     0089                     TRISE           equ	137	;# 
   398     008C                     PIE1            equ	140	;# 
   399     008D                     PIE2            equ	141	;# 
   400     008E                     PCON            equ	142	;# 
   401     0091                     SSPCON2         equ	145	;# 
   402     0092                     PR2             equ	146	;# 
   403     0093                     SSPADD          equ	147	;# 
   404     0094                     SSPSTAT         equ	148	;# 
   405     0098                     TXSTA           equ	152	;# 
   406     0099                     SPBRG           equ	153	;# 
   407     009C                     CMCON           equ	156	;# 
   408     009D                     CVRCON          equ	157	;# 
   409     009E                     ADRESL          equ	158	;# 
   410     009F                     ADCON1          equ	159	;# 
   411     010C                     EEDATA          equ	268	;# 
   412     010D                     EEADR           equ	269	;# 
   413     010E                     EEDATH          equ	270	;# 
   414     010F                     EEADRH          equ	271	;# 
   415     018C                     EECON1          equ	396	;# 
   416     018D                     EECON2          equ	397	;# 
   417     0000                     INDF            equ	0	;# 
   418     0001                     TMR0            equ	1	;# 
   419     0002                     PCL             equ	2	;# 
   420     0003                     STATUS          equ	3	;# 
   421     0004                     FSR             equ	4	;# 
   422     0005                     PORTA           equ	5	;# 
   423     0006                     PORTB           equ	6	;# 
   424     0007                     PORTC           equ	7	;# 
   425     0008                     PORTD           equ	8	;# 
   426     0009                     PORTE           equ	9	;# 
   427     000A                     PCLATH          equ	10	;# 
   428     000B                     INTCON          equ	11	;# 
   429     000C                     PIR1            equ	12	;# 
   430     000D                     PIR2            equ	13	;# 
   431     000E                     TMR1            equ	14	;# 
   432     000E                     TMR1L           equ	14	;# 
   433     000F                     TMR1H           equ	15	;# 
   434     0010                     T1CON           equ	16	;# 
   435     0011                     TMR2            equ	17	;# 
   436     0012                     T2CON           equ	18	;# 
   437     0013                     SSPBUF          equ	19	;# 
   438     0014                     SSPCON          equ	20	;# 
   439     0015                     CCPR1           equ	21	;# 
   440     0015                     CCPR1L          equ	21	;# 
   441     0016                     CCPR1H          equ	22	;# 
   442     0017                     CCP1CON         equ	23	;# 
   443     0018                     RCSTA           equ	24	;# 
   444     0019                     TXREG           equ	25	;# 
   445     001A                     RCREG           equ	26	;# 
   446     001B                     CCPR2           equ	27	;# 
   447     001B                     CCPR2L          equ	27	;# 
   448     001C                     CCPR2H          equ	28	;# 
   449     001D                     CCP2CON         equ	29	;# 
   450     001E                     ADRESH          equ	30	;# 
   451     001F                     ADCON0          equ	31	;# 
   452     0081                     OPTION_REG      equ	129	;# 
   453     0085                     TRISA           equ	133	;# 
   454     0086                     TRISB           equ	134	;# 
   455     0087                     TRISC           equ	135	;# 
   456     0088                     TRISD           equ	136	;# 
   457     0089                     TRISE           equ	137	;# 
   458     008C                     PIE1            equ	140	;# 
   459     008D                     PIE2            equ	141	;# 
   460     008E                     PCON            equ	142	;# 
   461     0091                     SSPCON2         equ	145	;# 
   462     0092                     PR2             equ	146	;# 
   463     0093                     SSPADD          equ	147	;# 
   464     0094                     SSPSTAT         equ	148	;# 
   465     0098                     TXSTA           equ	152	;# 
   466     0099                     SPBRG           equ	153	;# 
   467     009C                     CMCON           equ	156	;# 
   468     009D                     CVRCON          equ	157	;# 
   469     009E                     ADRESL          equ	158	;# 
   470     009F                     ADCON1          equ	159	;# 
   471     010C                     EEDATA          equ	268	;# 
   472     010D                     EEADR           equ	269	;# 
   473     010E                     EEDATH          equ	270	;# 
   474     010F                     EEADRH          equ	271	;# 
   475     018C                     EECON1          equ	396	;# 
   476     018D                     EECON2          equ	397	;# 
   477     0000                     INDF            equ	0	;# 
   478     0001                     TMR0            equ	1	;# 
   479     0002                     PCL             equ	2	;# 
   480     0003                     STATUS          equ	3	;# 
   481     0004                     FSR             equ	4	;# 
   482     0005                     PORTA           equ	5	;# 
   483     0006                     PORTB           equ	6	;# 
   484     0007                     PORTC           equ	7	;# 
   485     0008                     PORTD           equ	8	;# 
   486     0009                     PORTE           equ	9	;# 
   487     000A                     PCLATH          equ	10	;# 
   488     000B                     INTCON          equ	11	;# 
   489     000C                     PIR1            equ	12	;# 
   490     000D                     PIR2            equ	13	;# 
   491     000E                     TMR1            equ	14	;# 
   492     000E                     TMR1L           equ	14	;# 
   493     000F                     TMR1H           equ	15	;# 
   494     0010                     T1CON           equ	16	;# 
   495     0011                     TMR2            equ	17	;# 
   496     0012                     T2CON           equ	18	;# 
   497     0013                     SSPBUF          equ	19	;# 
   498     0014                     SSPCON          equ	20	;# 
   499     0015                     CCPR1           equ	21	;# 
   500     0015                     CCPR1L          equ	21	;# 
   501     0016                     CCPR1H          equ	22	;# 
   502     0017                     CCP1CON         equ	23	;# 
   503     0018                     RCSTA           equ	24	;# 
   504     0019                     TXREG           equ	25	;# 
   505     001A                     RCREG           equ	26	;# 
   506     001B                     CCPR2           equ	27	;# 
   507     001B                     CCPR2L          equ	27	;# 
   508     001C                     CCPR2H          equ	28	;# 
   509     001D                     CCP2CON         equ	29	;# 
   510     001E                     ADRESH          equ	30	;# 
   511     001F                     ADCON0          equ	31	;# 
   512     0081                     OPTION_REG      equ	129	;# 
   513     0085                     TRISA           equ	133	;# 
   514     0086                     TRISB           equ	134	;# 
   515     0087                     TRISC           equ	135	;# 
   516     0088                     TRISD           equ	136	;# 
   517     0089                     TRISE           equ	137	;# 
   518     008C                     PIE1            equ	140	;# 
   519     008D                     PIE2            equ	141	;# 
   520     008E                     PCON            equ	142	;# 
   521     0091                     SSPCON2         equ	145	;# 
   522     0092                     PR2             equ	146	;# 
   523     0093                     SSPADD          equ	147	;# 
   524     0094                     SSPSTAT         equ	148	;# 
   525     0098                     TXSTA           equ	152	;# 
   526     0099                     SPBRG           equ	153	;# 
   527     009C                     CMCON           equ	156	;# 
   528     009D                     CVRCON          equ	157	;# 
   529     009E                     ADRESL          equ	158	;# 
   530     009F                     ADCON1          equ	159	;# 
   531     010C                     EEDATA          equ	268	;# 
   532     010D                     EEADR           equ	269	;# 
   533     010E                     EEDATH          equ	270	;# 
   534     010F                     EEADRH          equ	271	;# 
   535     018C                     EECON1          equ	396	;# 
   536     018D                     EECON2          equ	397	;# 
   537     0000                     INDF            equ	0	;# 
   538     0001                     TMR0            equ	1	;# 
   539     0002                     PCL             equ	2	;# 
   540     0003                     STATUS          equ	3	;# 
   541     0004                     FSR             equ	4	;# 
   542     0005                     PORTA           equ	5	;# 
   543     0006                     PORTB           equ	6	;# 
   544     0007                     PORTC           equ	7	;# 
   545     0008                     PORTD           equ	8	;# 
   546     0009                     PORTE           equ	9	;# 
   547     000A                     PCLATH          equ	10	;# 
   548     000B                     INTCON          equ	11	;# 
   549     000C                     PIR1            equ	12	;# 
   550     000D                     PIR2            equ	13	;# 
   551     000E                     TMR1            equ	14	;# 
   552     000E                     TMR1L           equ	14	;# 
   553     000F                     TMR1H           equ	15	;# 
   554     0010                     T1CON           equ	16	;# 
   555     0011                     TMR2            equ	17	;# 
   556     0012                     T2CON           equ	18	;# 
   557     0013                     SSPBUF          equ	19	;# 
   558     0014                     SSPCON          equ	20	;# 
   559     0015                     CCPR1           equ	21	;# 
   560     0015                     CCPR1L          equ	21	;# 
   561     0016                     CCPR1H          equ	22	;# 
   562     0017                     CCP1CON         equ	23	;# 
   563     0018                     RCSTA           equ	24	;# 
   564     0019                     TXREG           equ	25	;# 
   565     001A                     RCREG           equ	26	;# 
   566     001B                     CCPR2           equ	27	;# 
   567     001B                     CCPR2L          equ	27	;# 
   568     001C                     CCPR2H          equ	28	;# 
   569     001D                     CCP2CON         equ	29	;# 
   570     001E                     ADRESH          equ	30	;# 
   571     001F                     ADCON0          equ	31	;# 
   572     0081                     OPTION_REG      equ	129	;# 
   573     0085                     TRISA           equ	133	;# 
   574     0086                     TRISB           equ	134	;# 
   575     0087                     TRISC           equ	135	;# 
   576     0088                     TRISD           equ	136	;# 
   577     0089                     TRISE           equ	137	;# 
   578     008C                     PIE1            equ	140	;# 
   579     008D                     PIE2            equ	141	;# 
   580     008E                     PCON            equ	142	;# 
   581     0091                     SSPCON2         equ	145	;# 
   582     0092                     PR2             equ	146	;# 
   583     0093                     SSPADD          equ	147	;# 
   584     0094                     SSPSTAT         equ	148	;# 
   585     0098                     TXSTA           equ	152	;# 
   586     0099                     SPBRG           equ	153	;# 
   587     009C                     CMCON           equ	156	;# 
   588     009D                     CVRCON          equ	157	;# 
   589     009E                     ADRESL          equ	158	;# 
   590     009F                     ADCON1          equ	159	;# 
   591     010C                     EEDATA          equ	268	;# 
   592     010D                     EEADR           equ	269	;# 
   593     010E                     EEDATH          equ	270	;# 
   594     010F                     EEADRH          equ	271	;# 
   595     018C                     EECON1          equ	396	;# 
   596     018D                     EECON2          equ	397	;# 
   597     0000                     INDF            equ	0	;# 
   598     0001                     TMR0            equ	1	;# 
   599     0002                     PCL             equ	2	;# 
   600     0003                     STATUS          equ	3	;# 
   601     0004                     FSR             equ	4	;# 
   602     0005                     PORTA           equ	5	;# 
   603     0006                     PORTB           equ	6	;# 
   604     0007                     PORTC           equ	7	;# 
   605     0008                     PORTD           equ	8	;# 
   606     0009                     PORTE           equ	9	;# 
   607     000A                     PCLATH          equ	10	;# 
   608     000B                     INTCON          equ	11	;# 
   609     000C                     PIR1            equ	12	;# 
   610     000D                     PIR2            equ	13	;# 
   611     000E                     TMR1            equ	14	;# 
   612     000E                     TMR1L           equ	14	;# 
   613     000F                     TMR1H           equ	15	;# 
   614     0010                     T1CON           equ	16	;# 
   615     0011                     TMR2            equ	17	;# 
   616     0012                     T2CON           equ	18	;# 
   617     0013                     SSPBUF          equ	19	;# 
   618     0014                     SSPCON          equ	20	;# 
   619     0015                     CCPR1           equ	21	;# 
   620     0015                     CCPR1L          equ	21	;# 
   621     0016                     CCPR1H          equ	22	;# 
   622     0017                     CCP1CON         equ	23	;# 
   623     0018                     RCSTA           equ	24	;# 
   624     0019                     TXREG           equ	25	;# 
   625     001A                     RCREG           equ	26	;# 
   626     001B                     CCPR2           equ	27	;# 
   627     001B                     CCPR2L          equ	27	;# 
   628     001C                     CCPR2H          equ	28	;# 
   629     001D                     CCP2CON         equ	29	;# 
   630     001E                     ADRESH          equ	30	;# 
   631     001F                     ADCON0          equ	31	;# 
   632     0081                     OPTION_REG      equ	129	;# 
   633     0085                     TRISA           equ	133	;# 
   634     0086                     TRISB           equ	134	;# 
   635     0087                     TRISC           equ	135	;# 
   636     0088                     TRISD           equ	136	;# 
   637     0089                     TRISE           equ	137	;# 
   638     008C                     PIE1            equ	140	;# 
   639     008D                     PIE2            equ	141	;# 
   640     008E                     PCON            equ	142	;# 
   641     0091                     SSPCON2         equ	145	;# 
   642     0092                     PR2             equ	146	;# 
   643     0093                     SSPADD          equ	147	;# 
   644     0094                     SSPSTAT         equ	148	;# 
   645     0098                     TXSTA           equ	152	;# 
   646     0099                     SPBRG           equ	153	;# 
   647     009C                     CMCON           equ	156	;# 
   648     009D                     CVRCON          equ	157	;# 
   649     009E                     ADRESL          equ	158	;# 
   650     009F                     ADCON1          equ	159	;# 
   651     010C                     EEDATA          equ	268	;# 
   652     010D                     EEADR           equ	269	;# 
   653     010E                     EEDATH          equ	270	;# 
   654     010F                     EEADRH          equ	271	;# 
   655     018C                     EECON1          equ	396	;# 
   656     018D                     EECON2          equ	397	;# 
   657     0000                     INDF            equ	0	;# 
   658     0001                     TMR0            equ	1	;# 
   659     0002                     PCL             equ	2	;# 
   660     0003                     STATUS          equ	3	;# 
   661     0004                     FSR             equ	4	;# 
   662     0005                     PORTA           equ	5	;# 
   663     0006                     PORTB           equ	6	;# 
   664     0007                     PORTC           equ	7	;# 
   665     0008                     PORTD           equ	8	;# 
   666     0009                     PORTE           equ	9	;# 
   667     000A                     PCLATH          equ	10	;# 
   668     000B                     INTCON          equ	11	;# 
   669     000C                     PIR1            equ	12	;# 
   670     000D                     PIR2            equ	13	;# 
   671     000E                     TMR1            equ	14	;# 
   672     000E                     TMR1L           equ	14	;# 
   673     000F                     TMR1H           equ	15	;# 
   674     0010                     T1CON           equ	16	;# 
   675     0011                     TMR2            equ	17	;# 
   676     0012                     T2CON           equ	18	;# 
   677     0013                     SSPBUF          equ	19	;# 
   678     0014                     SSPCON          equ	20	;# 
   679     0015                     CCPR1           equ	21	;# 
   680     0015                     CCPR1L          equ	21	;# 
   681     0016                     CCPR1H          equ	22	;# 
   682     0017                     CCP1CON         equ	23	;# 
   683     0018                     RCSTA           equ	24	;# 
   684     0019                     TXREG           equ	25	;# 
   685     001A                     RCREG           equ	26	;# 
   686     001B                     CCPR2           equ	27	;# 
   687     001B                     CCPR2L          equ	27	;# 
   688     001C                     CCPR2H          equ	28	;# 
   689     001D                     CCP2CON         equ	29	;# 
   690     001E                     ADRESH          equ	30	;# 
   691     001F                     ADCON0          equ	31	;# 
   692     0081                     OPTION_REG      equ	129	;# 
   693     0085                     TRISA           equ	133	;# 
   694     0086                     TRISB           equ	134	;# 
   695     0087                     TRISC           equ	135	;# 
   696     0088                     TRISD           equ	136	;# 
   697     0089                     TRISE           equ	137	;# 
   698     008C                     PIE1            equ	140	;# 
   699     008D                     PIE2            equ	141	;# 
   700     008E                     PCON            equ	142	;# 
   701     0091                     SSPCON2         equ	145	;# 
   702     0092                     PR2             equ	146	;# 
   703     0093                     SSPADD          equ	147	;# 
   704     0094                     SSPSTAT         equ	148	;# 
   705     0098                     TXSTA           equ	152	;# 
   706     0099                     SPBRG           equ	153	;# 
   707     009C                     CMCON           equ	156	;# 
   708     009D                     CVRCON          equ	157	;# 
   709     009E                     ADRESL          equ	158	;# 
   710     009F                     ADCON1          equ	159	;# 
   711     010C                     EEDATA          equ	268	;# 
   712     010D                     EEADR           equ	269	;# 
   713     010E                     EEDATH          equ	270	;# 
   714     010F                     EEADRH          equ	271	;# 
   715     018C                     EECON1          equ	396	;# 
   716     018D                     EECON2          equ	397	;# 
   717     0000                     INDF            equ	0	;# 
   718     0001                     TMR0            equ	1	;# 
   719     0002                     PCL             equ	2	;# 
   720     0003                     STATUS          equ	3	;# 
   721     0004                     FSR             equ	4	;# 
   722     0005                     PORTA           equ	5	;# 
   723     0006                     PORTB           equ	6	;# 
   724     0007                     PORTC           equ	7	;# 
   725     0008                     PORTD           equ	8	;# 
   726     0009                     PORTE           equ	9	;# 
   727     000A                     PCLATH          equ	10	;# 
   728     000B                     INTCON          equ	11	;# 
   729     000C                     PIR1            equ	12	;# 
   730     000D                     PIR2            equ	13	;# 
   731     000E                     TMR1            equ	14	;# 
   732     000E                     TMR1L           equ	14	;# 
   733     000F                     TMR1H           equ	15	;# 
   734     0010                     T1CON           equ	16	;# 
   735     0011                     TMR2            equ	17	;# 
   736     0012                     T2CON           equ	18	;# 
   737     0013                     SSPBUF          equ	19	;# 
   738     0014                     SSPCON          equ	20	;# 
   739     0015                     CCPR1           equ	21	;# 
   740     0015                     CCPR1L          equ	21	;# 
   741     0016                     CCPR1H          equ	22	;# 
   742     0017                     CCP1CON         equ	23	;# 
   743     0018                     RCSTA           equ	24	;# 
   744     0019                     TXREG           equ	25	;# 
   745     001A                     RCREG           equ	26	;# 
   746     001B                     CCPR2           equ	27	;# 
   747     001B                     CCPR2L          equ	27	;# 
   748     001C                     CCPR2H          equ	28	;# 
   749     001D                     CCP2CON         equ	29	;# 
   750     001E                     ADRESH          equ	30	;# 
   751     001F                     ADCON0          equ	31	;# 
   752     0081                     OPTION_REG      equ	129	;# 
   753     0085                     TRISA           equ	133	;# 
   754     0086                     TRISB           equ	134	;# 
   755     0087                     TRISC           equ	135	;# 
   756     0088                     TRISD           equ	136	;# 
   757     0089                     TRISE           equ	137	;# 
   758     008C                     PIE1            equ	140	;# 
   759     008D                     PIE2            equ	141	;# 
   760     008E                     PCON            equ	142	;# 
   761     0091                     SSPCON2         equ	145	;# 
   762     0092                     PR2             equ	146	;# 
   763     0093                     SSPADD          equ	147	;# 
   764     0094                     SSPSTAT         equ	148	;# 
   765     0098                     TXSTA           equ	152	;# 
   766     0099                     SPBRG           equ	153	;# 
   767     009C                     CMCON           equ	156	;# 
   768     009D                     CVRCON          equ	157	;# 
   769     009E                     ADRESL          equ	158	;# 
   770     009F                     ADCON1          equ	159	;# 
   771     010C                     EEDATA          equ	268	;# 
   772     010D                     EEADR           equ	269	;# 
   773     010E                     EEDATH          equ	270	;# 
   774     010F                     EEADRH          equ	271	;# 
   775     018C                     EECON1          equ	396	;# 
   776     018D                     EECON2          equ	397	;# 
   777     0000                     INDF            equ	0	;# 
   778     0001                     TMR0            equ	1	;# 
   779     0002                     PCL             equ	2	;# 
   780     0003                     STATUS          equ	3	;# 
   781     0004                     FSR             equ	4	;# 
   782     0005                     PORTA           equ	5	;# 
   783     0006                     PORTB           equ	6	;# 
   784     0007                     PORTC           equ	7	;# 
   785     0008                     PORTD           equ	8	;# 
   786     0009                     PORTE           equ	9	;# 
   787     000A                     PCLATH          equ	10	;# 
   788     000B                     INTCON          equ	11	;# 
   789     000C                     PIR1            equ	12	;# 
   790     000D                     PIR2            equ	13	;# 
   791     000E                     TMR1            equ	14	;# 
   792     000E                     TMR1L           equ	14	;# 
   793     000F                     TMR1H           equ	15	;# 
   794     0010                     T1CON           equ	16	;# 
   795     0011                     TMR2            equ	17	;# 
   796     0012                     T2CON           equ	18	;# 
   797     0013                     SSPBUF          equ	19	;# 
   798     0014                     SSPCON          equ	20	;# 
   799     0015                     CCPR1           equ	21	;# 
   800     0015                     CCPR1L          equ	21	;# 
   801     0016                     CCPR1H          equ	22	;# 
   802     0017                     CCP1CON         equ	23	;# 
   803     0018                     RCSTA           equ	24	;# 
   804     0019                     TXREG           equ	25	;# 
   805     001A                     RCREG           equ	26	;# 
   806     001B                     CCPR2           equ	27	;# 
   807     001B                     CCPR2L          equ	27	;# 
   808     001C                     CCPR2H          equ	28	;# 
   809     001D                     CCP2CON         equ	29	;# 
   810     001E                     ADRESH          equ	30	;# 
   811     001F                     ADCON0          equ	31	;# 
   812     0081                     OPTION_REG      equ	129	;# 
   813     0085                     TRISA           equ	133	;# 
   814     0086                     TRISB           equ	134	;# 
   815     0087                     TRISC           equ	135	;# 
   816     0088                     TRISD           equ	136	;# 
   817     0089                     TRISE           equ	137	;# 
   818     008C                     PIE1            equ	140	;# 
   819     008D                     PIE2            equ	141	;# 
   820     008E                     PCON            equ	142	;# 
   821     0091                     SSPCON2         equ	145	;# 
   822     0092                     PR2             equ	146	;# 
   823     0093                     SSPADD          equ	147	;# 
   824     0094                     SSPSTAT         equ	148	;# 
   825     0098                     TXSTA           equ	152	;# 
   826     0099                     SPBRG           equ	153	;# 
   827     009C                     CMCON           equ	156	;# 
   828     009D                     CVRCON          equ	157	;# 
   829     009E                     ADRESL          equ	158	;# 
   830     009F                     ADCON1          equ	159	;# 
   831     010C                     EEDATA          equ	268	;# 
   832     010D                     EEADR           equ	269	;# 
   833     010E                     EEDATH          equ	270	;# 
   834     010F                     EEADRH          equ	271	;# 
   835     018C                     EECON1          equ	396	;# 
   836     018D                     EECON2          equ	397	;# 
   837                           
   838                           	psect	idataBANK1
   839     11EB                     __pidataBANK1:
   840                           
   841                           ;initializer for main@F1253
   842     11EB  34BB               	retlw	low (STR_1| (0+32768))
   843     11EC  3491               	retlw	high (STR_1| (0+32768))
   844     11ED  34B5               	retlw	low (STR_2| (0+32768))
   845     11EE  3491               	retlw	high (STR_2| (0+32768))
   846     11EF  34A3               	retlw	low (STR_3| (0+32768))
   847     11F0  3491               	retlw	high (STR_3| (0+32768))
   848     11F1  34A6               	retlw	low (STR_4| (0+32768))
   849     11F2  3491               	retlw	high (STR_4| (0+32768))
   850     11F3  34A9               	retlw	low (STR_5| (0+32768))
   851     11F4  3491               	retlw	high (STR_5| (0+32768))
   852     11F5  34AC               	retlw	low (STR_6| (0+32768))
   853     11F6  3491               	retlw	high (STR_6| (0+32768))
   854                           
   855                           ;initializer for _menu
   856     11F7  346C               	retlw	low (STR_15| (0+32768))
   857     11F8  3491               	retlw	high (STR_15| (0+32768))
   858     11F9  344F               	retlw	low (STR_16| (0+32768))
   859     11FA  3491               	retlw	high (STR_16| (0+32768))
   860     11FB  3411               	retlw	low (STR_17| (0+32768))
   861     11FC  3491               	retlw	high (STR_17| (0+32768))
   862     11FD  3463               	retlw	low (STR_18| (0+32768))
   863     11FE  3491               	retlw	high (STR_18| (0+32768))
   864     11FF  34D8               	retlw	low (STR_19| (0+32768))
   865     1200  3490               	retlw	high (STR_19| (0+32768))
   866                           
   867                           ;initializer for main@F1251
   868     1201  344F               	retlw	79
   869     1202  344E               	retlw	78
   870     1203  3400               	retlw	0
   871     0019                     _TXREG          set	25
   872     001A                     _RCREG          set	26
   873     0006                     _PORTB          set	6
   874     001E                     _ADRESH         set	30
   875     0013                     _SSPBUF         set	19
   876     0008                     _PORTD          set	8
   877     0064                     _TXIF           set	100
   878     0065                     _RCIF           set	101
   879     00C4                     _CREN           set	196
   880     00C7                     _SPEN           set	199
   881     0091                     _T2CKPS1        set	145
   882     0090                     _T2CKPS0        set	144
   883     0061                     _TMR2IF         set	97
   884     00FA                     _nDONE          set	250
   885     00FA                     _GO             set	250
   886     00F8                     _ADON           set	248
   887     0092                     _TMR2ON         set	146
   888     005E                     _PEIE           set	94
   889     005F                     _GIE            set	95
   890     00A5                     _SSPEN          set	165
   891     00A3                     _SSPM3          set	163
   892     0049                     _RE1            set	73
   893     004A                     _RE2            set	74
   894     0099                     _SPBRG          set	153
   895     0092                     _PR2            set	146
   896     0086                     _TRISB          set	134
   897     009E                     _ADRESL         set	158
   898     0091                     _SSPCON2        set	145
   899     0093                     _SSPADD         set	147
   900     0088                     _TRISD          set	136
   901     0461                     _TMR2IE         set	1121
   902     04FF                     _ADFM           set	1279
   903     048E                     _ACKSTAT        set	1166
   904     048C                     _ACKEN          set	1164
   905     048D                     _ACKDT          set	1165
   906     048B                     _RCEN           set	1163
   907     048A                     _PEN            set	1162
   908     0488                     _SEN            set	1160
   909     04A2                     _R_nW           set	1186
   910     0449                     _TRISE1         set	1097
   911     044A                     _TRISE2         set	1098
   912                           
   913                           	psect	strings
   914     1800                     __pstrings:
   915     1800                     stringtab:
   916     1800                     __stringtab:
   917                           
   918                           ;	String table - string pointers are 2 bytes each
   919     1800  1BFF               	btfsc	btemp+1,7
   920     1801  280A               	ljmp	stringcode
   921     1802  1383               	bcf	3,7
   922     1803  187F               	btfsc	btemp+1,0
   923     1804  1783               	bsf	3,7
   924     1805  0800               	movf	0,w
   925     1806  0A84               	incf	4,f
   926     1807  1903               	skipnz
   927     1808  0AFF               	incf	btemp+1,f
   928     1809  0008               	return
   929     180A                     stringcode:
   930     180A  087F               	movf	btemp+1,w
   931     180B  397F               	andlw	127
   932     180C  008A               	movwf	10
   933     180D  0804               	movf	4,w
   934     180E  0A84               	incf	4,f
   935     180F  1903               	skipnz
   936     1810  0AFF               	incf	btemp+1,f
   937     1811  0082               	movwf	2
   938     1812                     __stringbase:
   939     1812                     __end_of__stringtab:
   940                           
   941                           	psect	stringtext
   942     1000                     __pstringtext:
   943     1000                     STR_33:
   944     1000  3423               	retlw	35	;'#'
   945     1001  3420               	retlw	32	;' '
   946     1002  3420               	retlw	32	;' '
   947     1003  3420               	retlw	32	;' '
   948     1004  3420               	retlw	32	;' '
   949     1005  3420               	retlw	32	;' '
   950     1006  3454               	retlw	84	;'T'
   951     1007  3469               	retlw	105	;'i'
   952     1008  346D               	retlw	109	;'m'
   953     1009  3465               	retlw	101	;'e'
   954     100A  3420               	retlw	32	;' '
   955     100B  3420               	retlw	32	;' '
   956     100C  3420               	retlw	32	;' '
   957     100D  3420               	retlw	32	;' '
   958     100E  3420               	retlw	32	;' '
   959     100F  3420               	retlw	32	;' '
   960     1010  3420               	retlw	32	;' '
   961     1011  3445               	retlw	69	;'E'
   962     1012  3476               	retlw	118	;'v'
   963     1013  3465               	retlw	101	;'e'
   964     1014  346E               	retlw	110	;'n'
   965     1015  3474               	retlw	116	;'t'
   966     1016  3420               	retlw	32	;' '
   967     1017  3420               	retlw	32	;' '
   968     1018  3420               	retlw	32	;' '
   969     1019  3420               	retlw	32	;' '
   970     101A  3420               	retlw	32	;' '
   971     101B  3453               	retlw	83	;'S'
   972     101C  3470               	retlw	112	;'p'
   973     101D  3465               	retlw	101	;'e'
   974     101E  3465               	retlw	101	;'e'
   975     101F  3464               	retlw	100	;'d'
   976     1020  3400               	retlw	0
   977     1021                     STR_31:
   978     1021  344E               	retlw	78	;'N'
   979     1022  346F               	retlw	111	;'o'
   980     1023  3420               	retlw	32	;' '
   981     1024  344C               	retlw	76	;'L'
   982     1025  346F               	retlw	111	;'o'
   983     1026  3467               	retlw	103	;'g'
   984     1027  3473               	retlw	115	;'s'
   985     1028  3420               	retlw	32	;' '
   986     1029  3441               	retlw	65	;'A'
   987     102A  3476               	retlw	118	;'v'
   988     102B  3461               	retlw	97	;'a'
   989     102C  3469               	retlw	105	;'i'
   990     102D  346C               	retlw	108	;'l'
   991     102E  3461               	retlw	97	;'a'
   992     102F  3462               	retlw	98	;'b'
   993     1030  346C               	retlw	108	;'l'
   994     1031  3465               	retlw	101	;'e'
   995     1032  3420               	retlw	32	;' '
   996     1033  3421               	retlw	33	;'!'
   997     1034  3400               	retlw	0
   998     1035                     STR_46:
   999     1035  3420               	retlw	32	;' '
  1000     1036  3420               	retlw	32	;' '
  1001     1037  3420               	retlw	32	;' '
  1002     1038  3420               	retlw	32	;' '
  1003     1039  3420               	retlw	32	;' '
  1004     103A  3420               	retlw	32	;' '
  1005     103B  3420               	retlw	32	;' '
  1006     103C  3420               	retlw	32	;' '
  1007     103D  3420               	retlw	32	;' '
  1008     103E  3420               	retlw	32	;' '
  1009     103F  3420               	retlw	32	;' '
  1010     1040  3420               	retlw	32	;' '
  1011     1041  3420               	retlw	32	;' '
  1012     1042  3420               	retlw	32	;' '
  1013     1043  3420               	retlw	32	;' '
  1014     1044  3420               	retlw	32	;' '
  1015     1045  3420               	retlw	32	;' '
  1016     1046  3400               	retlw	0
  1017     1047                     STR_44:
  1018     1047  3445               	retlw	69	;'E'
  1019     1048  346E               	retlw	110	;'n'
  1020     1049  3474               	retlw	116	;'t'
  1021     104A  3465               	retlw	101	;'e'
  1022     104B  3472               	retlw	114	;'r'
  1023     104C  3420               	retlw	32	;' '
  1024     104D  346E               	retlw	110	;'n'
  1025     104E  3465               	retlw	101	;'e'
  1026     104F  3477               	retlw	119	;'w'
  1027     1050  3420               	retlw	32	;' '
  1028     1051  3470               	retlw	112	;'p'
  1029     1052  3477               	retlw	119	;'w'
  1030     1053  3464               	retlw	100	;'d'
  1031     1054  343A               	retlw	58	;':'
  1032     1055  3420               	retlw	32	;' '
  1033     1056  3420               	retlw	32	;' '
  1034     1057  3400               	retlw	0
  1035     1058                     STR_48:
  1036     1058  3450               	retlw	80	;'P'
  1037     1059  3461               	retlw	97	;'a'
  1038     105A  3473               	retlw	115	;'s'
  1039     105B  3473               	retlw	115	;'s'
  1040     105C  3477               	retlw	119	;'w'
  1041     105D  346F               	retlw	111	;'o'
  1042     105E  3472               	retlw	114	;'r'
  1043     105F  3464               	retlw	100	;'d'
  1044     1060  3420               	retlw	32	;' '
  1045     1061  3463               	retlw	99	;'c'
  1046     1062  3468               	retlw	104	;'h'
  1047     1063  3461               	retlw	97	;'a'
  1048     1064  346E               	retlw	110	;'n'
  1049     1065  3467               	retlw	103	;'g'
  1050     1066  3465               	retlw	101	;'e'
  1051     1067  3464               	retlw	100	;'d'
  1052     1068  3400               	retlw	0
  1053     1069                     STR_45:
  1054     1069  3452               	retlw	82	;'R'
  1055     106A  3465               	retlw	101	;'e'
  1056     106B  342D               	retlw	45	;'-'
  1057     106C  3465               	retlw	101	;'e'
  1058     106D  346E               	retlw	110	;'n'
  1059     106E  3474               	retlw	116	;'t'
  1060     106F  3465               	retlw	101	;'e'
  1061     1070  3472               	retlw	114	;'r'
  1062     1071  3420               	retlw	32	;' '
  1063     1072  346E               	retlw	110	;'n'
  1064     1073  3465               	retlw	101	;'e'
  1065     1074  3477               	retlw	119	;'w'
  1066     1075  3420               	retlw	32	;' '
  1067     1076  3470               	retlw	112	;'p'
  1068     1077  3477               	retlw	119	;'w'
  1069     1078  3464               	retlw	100	;'d'
  1070     1079  3400               	retlw	0
  1071     107A                     STR_50:
  1072     107A  3450               	retlw	80	;'P'
  1073     107B  3461               	retlw	97	;'a'
  1074     107C  3473               	retlw	115	;'s'
  1075     107D  3473               	retlw	115	;'s'
  1076     107E  3477               	retlw	119	;'w'
  1077     107F  346F               	retlw	111	;'o'
  1078     1080  3472               	retlw	114	;'r'
  1079     1081  3464               	retlw	100	;'d'
  1080     1082  3420               	retlw	32	;' '
  1081     1083  3420               	retlw	32	;' '
  1082     1084  3463               	retlw	99	;'c'
  1083     1085  3468               	retlw	104	;'h'
  1084     1086  3461               	retlw	97	;'a'
  1085     1087  346E               	retlw	110	;'n'
  1086     1088  3467               	retlw	103	;'g'
  1087     1089  3465               	retlw	101	;'e'
  1088     108A  3400               	retlw	0
  1089     108B                     STR_37:
  1090     108B  3454               	retlw	84	;'T'
  1091     108C  3469               	retlw	105	;'i'
  1092     108D  346D               	retlw	109	;'m'
  1093     108E  3465               	retlw	101	;'e'
  1094     108F  3420               	retlw	32	;' '
  1095     1090  343C               	retlw	60	;'<'
  1096     1091  3448               	retlw	72	;'H'
  1097     1092  3448               	retlw	72	;'H'
  1098     1093  343A               	retlw	58	;':'
  1099     1094  344D               	retlw	77	;'M'
  1100     1095  344D               	retlw	77	;'M'
  1101     1096  343A               	retlw	58	;':'
  1102     1097  3453               	retlw	83	;'S'
  1103     1098  3453               	retlw	83	;'S'
  1104     1099  343E               	retlw	62	;'>'
  1105     109A  3400               	retlw	0
  1106     109B                     STR_22:
  1107     109B  3459               	retlw	89	;'Y'
  1108     109C  346F               	retlw	111	;'o'
  1109     109D  3475               	retlw	117	;'u'
  1110     109E  3420               	retlw	32	;' '
  1111     109F  3461               	retlw	97	;'a'
  1112     10A0  3472               	retlw	114	;'r'
  1113     10A1  3465               	retlw	101	;'e'
  1114     10A2  3420               	retlw	32	;' '
  1115     10A3  3462               	retlw	98	;'b'
  1116     10A4  346C               	retlw	108	;'l'
  1117     10A5  346F               	retlw	111	;'o'
  1118     10A6  3463               	retlw	99	;'c'
  1119     10A7  346B               	retlw	107	;'k'
  1120     10A8  3465               	retlw	101	;'e'
  1121     10A9  3464               	retlw	100	;'d'
  1122     10AA  3400               	retlw	0
  1123     10AB                     STR_21:
  1124     10AB  344C               	retlw	76	;'L'
  1125     10AC  346F               	retlw	111	;'o'
  1126     10AD  3467               	retlw	103	;'g'
  1127     10AE  3469               	retlw	105	;'i'
  1128     10AF  346E               	retlw	110	;'n'
  1129     10B0  3420               	retlw	32	;' '
  1130     10B1  3453               	retlw	83	;'S'
  1131     10B2  3475               	retlw	117	;'u'
  1132     10B3  3463               	retlw	99	;'c'
  1133     10B4  3463               	retlw	99	;'c'
  1134     10B5  3465               	retlw	101	;'e'
  1135     10B6  3473               	retlw	115	;'s'
  1136     10B7  3473               	retlw	115	;'s'
  1137     10B8  3421               	retlw	33	;'!'
  1138     10B9  3400               	retlw	0
  1139     10BA                     STR_20:
  1140     10BA  3454               	retlw	84	;'T'
  1141     10BB  3449               	retlw	73	;'I'
  1142     10BC  344D               	retlw	77	;'M'
  1143     10BD  3445               	retlw	69	;'E'
  1144     10BE  3420               	retlw	32	;' '
  1145     10BF  3420               	retlw	32	;' '
  1146     10C0  3420               	retlw	32	;' '
  1147     10C1  3420               	retlw	32	;' '
  1148     10C2  3420               	retlw	32	;' '
  1149     10C3  3445               	retlw	69	;'E'
  1150     10C4  3420               	retlw	32	;' '
  1151     10C5  3420               	retlw	32	;' '
  1152     10C6  3453               	retlw	83	;'S'
  1153     10C7  3450               	retlw	80	;'P'
  1154     10C8  3400               	retlw	0
  1155     10C9                     STR_25:
  1156     10C9  3457               	retlw	87	;'W'
  1157     10CA  3472               	retlw	114	;'r'
  1158     10CB  346F               	retlw	111	;'o'
  1159     10CC  346E               	retlw	110	;'n'
  1160     10CD  3467               	retlw	103	;'g'
  1161     10CE  3420               	retlw	32	;' '
  1162     10CF  3470               	retlw	112	;'p'
  1163     10D0  3461               	retlw	97	;'a'
  1164     10D1  3473               	retlw	115	;'s'
  1165     10D2  3473               	retlw	115	;'s'
  1166     10D3  3477               	retlw	119	;'w'
  1167     10D4  346F               	retlw	111	;'o'
  1168     10D5  3472               	retlw	114	;'r'
  1169     10D6  3464               	retlw	100	;'d'
  1170     10D7  3400               	retlw	0
  1171     10D8                     STR_19:
  1172     10D8  3443               	retlw	67	;'C'
  1173     10D9  3468               	retlw	104	;'h'
  1174     10DA  3461               	retlw	97	;'a'
  1175     10DB  346E               	retlw	110	;'n'
  1176     10DC  3467               	retlw	103	;'g'
  1177     10DD  3465               	retlw	101	;'e'
  1178     10DE  3420               	retlw	32	;' '
  1179     10DF  3470               	retlw	112	;'p'
  1180     10E0  3461               	retlw	97	;'a'
  1181     10E1  3473               	retlw	115	;'s'
  1182     10E2  3473               	retlw	115	;'s'
  1183     10E3  3477               	retlw	119	;'w'
  1184     10E4  3472               	retlw	114	;'r'
  1185     10E5  3464               	retlw	100	;'d'
  1186     10E6  3400               	retlw	0
  1187     10E7                     STR_9:
  1188     10E7  3445               	retlw	69	;'E'
  1189     10E8  346E               	retlw	110	;'n'
  1190     10E9  3474               	retlw	116	;'t'
  1191     10EA  3465               	retlw	101	;'e'
  1192     10EB  3472               	retlw	114	;'r'
  1193     10EC  3420               	retlw	32	;' '
  1194     10ED  3450               	retlw	80	;'P'
  1195     10EE  3461               	retlw	97	;'a'
  1196     10EF  3473               	retlw	115	;'s'
  1197     10F0  3473               	retlw	115	;'s'
  1198     10F1  3477               	retlw	119	;'w'
  1199     10F2  346F               	retlw	111	;'o'
  1200     10F3  3472               	retlw	114	;'r'
  1201     10F4  3464               	retlw	100	;'d'
  1202     10F5  3400               	retlw	0
  1203     10F6                     STR_49:
  1204     10F6  3473               	retlw	115	;'s'
  1205     10F7  3475               	retlw	117	;'u'
  1206     10F8  3463               	retlw	99	;'c'
  1207     10F9  3463               	retlw	99	;'c'
  1208     10FA  3465               	retlw	101	;'e'
  1209     10FB  3473               	retlw	115	;'s'
  1210     10FC  3473               	retlw	115	;'s'
  1211     10FD  3466               	retlw	102	;'f'
  1212     10FE  3475               	retlw	117	;'u'
  1213     10FF  346C               	retlw	108	;'l'
  1214     1100  346C               	retlw	108	;'l'
  1215     1101  3479               	retlw	121	;'y'
  1216     1102  3420               	retlw	32	;' '
  1217     1103  3400               	retlw	0
  1218     1104                     STR_38:
  1219     1104  3454               	retlw	84	;'T'
  1220     1105  3469               	retlw	105	;'i'
  1221     1106  346D               	retlw	109	;'m'
  1222     1107  3465               	retlw	101	;'e'
  1223     1108  3420               	retlw	32	;' '
  1224     1109  3443               	retlw	67	;'C'
  1225     110A  3468               	retlw	104	;'h'
  1226     110B  3461               	retlw	97	;'a'
  1227     110C  346E               	retlw	110	;'n'
  1228     110D  3467               	retlw	103	;'g'
  1229     110E  3465               	retlw	101	;'e'
  1230     110F  3464               	retlw	100	;'d'
  1231     1110  3400               	retlw	0
  1232     1111                     STR_17:
  1233     1111  3444               	retlw	68	;'D'
  1234     1112  346F               	retlw	111	;'o'
  1235     1113  3477               	retlw	119	;'w'
  1236     1114  346E               	retlw	110	;'n'
  1237     1115  346C               	retlw	108	;'l'
  1238     1116  346F               	retlw	111	;'o'
  1239     1117  3461               	retlw	97	;'a'
  1240     1118  3464               	retlw	100	;'d'
  1241     1119  3420               	retlw	32	;' '
  1242     111A  346C               	retlw	108	;'l'
  1243     111B  346F               	retlw	111	;'o'
  1244     111C  3467               	retlw	103	;'g'
  1245     111D  3400               	retlw	0
  1246     111E                     STR_26:
  1247     111E  3461               	retlw	97	;'a'
  1248     111F  3474               	retlw	116	;'t'
  1249     1120  3474               	retlw	116	;'t'
  1250     1121  3465               	retlw	101	;'e'
  1251     1122  346D               	retlw	109	;'m'
  1252     1123  3470               	retlw	112	;'p'
  1253     1124  3474               	retlw	116	;'t'
  1254     1125  3420               	retlw	32	;' '
  1255     1126  346C               	retlw	108	;'l'
  1256     1127  3465               	retlw	101	;'e'
  1257     1128  3466               	retlw	102	;'f'
  1258     1129  3474               	retlw	116	;'t'
  1259     112A  3400               	retlw	0
  1260     112B                     STR_39:
  1261     112B  3453               	retlw	83	;'S'
  1262     112C  3475               	retlw	117	;'u'
  1263     112D  3463               	retlw	99	;'c'
  1264     112E  3463               	retlw	99	;'c'
  1265     112F  3465               	retlw	101	;'e'
  1266     1130  3473               	retlw	115	;'s'
  1267     1131  3473               	retlw	115	;'s'
  1268     1132  3466               	retlw	102	;'f'
  1269     1133  3475               	retlw	117	;'u'
  1270     1134  346C               	retlw	108	;'l'
  1271     1135  346C               	retlw	108	;'l'
  1272     1136  3479               	retlw	121	;'y'
  1273     1137  3400               	retlw	0
  1274     1138                     STR_29:
  1275     1138  344C               	retlw	76	;'L'
  1276     1139  346F               	retlw	111	;'o'
  1277     113A  3467               	retlw	103	;'g'
  1278     113B  3467               	retlw	103	;'g'
  1279     113C  3465               	retlw	101	;'e'
  1280     113D  3464               	retlw	100	;'d'
  1281     113E  3420               	retlw	32	;' '
  1282     113F  3464               	retlw	100	;'d'
  1283     1140  3461               	retlw	97	;'a'
  1284     1141  3474               	retlw	116	;'t'
  1285     1142  3461               	retlw	97	;'a'
  1286     1143  3400               	retlw	0
  1287     1144                     STR_30:
  1288     1144  3463               	retlw	99	;'c'
  1289     1145  346C               	retlw	108	;'l'
  1290     1146  3465               	retlw	101	;'e'
  1291     1147  3461               	retlw	97	;'a'
  1292     1148  3472               	retlw	114	;'r'
  1293     1149  3465               	retlw	101	;'e'
  1294     114A  3464               	retlw	100	;'d'
  1295     114B  342E               	retlw	46	;'.'
  1296     114C  342E               	retlw	46	;'.'
  1297     114D  3421               	retlw	33	;'!'
  1298     114E  3400               	retlw	0
  1299     114F                     STR_16:
  1300     114F  3443               	retlw	67	;'C'
  1301     1150  346C               	retlw	108	;'l'
  1302     1151  3465               	retlw	101	;'e'
  1303     1152  3461               	retlw	97	;'a'
  1304     1153  3472               	retlw	114	;'r'
  1305     1154  3420               	retlw	32	;' '
  1306     1155  346C               	retlw	108	;'l'
  1307     1156  346F               	retlw	111	;'o'
  1308     1157  3467               	retlw	103	;'g'
  1309     1158  3400               	retlw	0
  1310     1159                     STR_28:
  1311     1159  3456               	retlw	86	;'V'
  1312     115A  3469               	retlw	105	;'i'
  1313     115B  3465               	retlw	101	;'e'
  1314     115C  3477               	retlw	119	;'w'
  1315     115D  3420               	retlw	32	;' '
  1316     115E  346C               	retlw	108	;'l'
  1317     115F  346F               	retlw	111	;'o'
  1318     1160  3467               	retlw	103	;'g'
  1319     1161  3473               	retlw	115	;'s'
  1320     1162  3400               	retlw	0
  1321     1163                     STR_18:
  1322     1163  3453               	retlw	83	;'S'
  1323     1164  3465               	retlw	101	;'e'
  1324     1165  3474               	retlw	116	;'t'
  1325     1166  3420               	retlw	32	;' '
  1326     1167  3474               	retlw	116	;'t'
  1327     1168  3469               	retlw	105	;'i'
  1328     1169  346D               	retlw	109	;'m'
  1329     116A  3465               	retlw	101	;'e'
  1330     116B  3400               	retlw	0
  1331     116C                     STR_15:
  1332     116C  3456               	retlw	86	;'V'
  1333     116D  3469               	retlw	105	;'i'
  1334     116E  3465               	retlw	101	;'e'
  1335     116F  3477               	retlw	119	;'w'
  1336     1170  3420               	retlw	32	;' '
  1337     1171  346C               	retlw	108	;'l'
  1338     1172  346F               	retlw	111	;'o'
  1339     1173  3467               	retlw	103	;'g'
  1340     1174  3400               	retlw	0
  1341     1175                     STR_23:
  1342     1175  3457               	retlw	87	;'W'
  1343     1176  3461               	retlw	97	;'a'
  1344     1177  3469               	retlw	105	;'i'
  1345     1178  3474               	retlw	116	;'t'
  1346     1179  3420               	retlw	32	;' '
  1347     117A  3466               	retlw	102	;'f'
  1348     117B  346F               	retlw	111	;'o'
  1349     117C  3472               	retlw	114	;'r'
  1350     117D  3400               	retlw	0
  1351     117E                     STR_13:
  1352     117E  3443               	retlw	67	;'C'
  1353     117F  3475               	retlw	117	;'u'
  1354     1180  3474               	retlw	116	;'t'
  1355     1181  3465               	retlw	101	;'e'
  1356     1182  3463               	retlw	99	;'c'
  1357     1183  346F               	retlw	111	;'o'
  1358     1184  346D               	retlw	109	;'m'
  1359     1185  3400               	retlw	0
  1360     1186                     STR_32:
  1361     1186  344C               	retlw	76	;'L'
  1362     1187  346F               	retlw	111	;'o'
  1363     1188  3467               	retlw	103	;'g'
  1364     1189  3473               	retlw	115	;'s'
  1365     118A  3420               	retlw	32	;' '
  1366     118B  343A               	retlw	58	;':'
  1367     118C  3400               	retlw	0
  1368     118D                     STR_51:
  1369     118D  3466               	retlw	102	;'f'
  1370     118E  3461               	retlw	97	;'a'
  1371     118F  3469               	retlw	105	;'i'
  1372     1190  346C               	retlw	108	;'l'
  1373     1191  3465               	retlw	101	;'e'
  1374     1192  3464               	retlw	100	;'d'
  1375     1193  3400               	retlw	0
  1376     1194                     STR_24:
  1377     1194  3473               	retlw	115	;'s'
  1378     1195  3465               	retlw	101	;'e'
  1379     1196  3463               	retlw	99	;'c'
  1380     1197  3473               	retlw	115	;'s'
  1381     1198  3400               	retlw	0
  1382     1199                     STR_7:
  1383     1199  3431               	retlw	49	;'1'
  1384     119A  3430               	retlw	48	;'0'
  1385     119B  3430               	retlw	48	;'0'
  1386     119C  3431               	retlw	49	;'1'
  1387     119D  3400               	retlw	0
  1388     119E                     STR_12:
  1389     119E  344F               	retlw	79	;'O'
  1390     119F  3470               	retlw	112	;'p'
  1391     11A0  3465               	retlw	101	;'e'
  1392     11A1  346E               	retlw	110	;'n'
  1393     11A2  3400               	retlw	0
  1394     11A3                     STR_3:
  1395     11A3  3447               	retlw	71	;'G'
  1396     11A4  3431               	retlw	49	;'1'
  1397     11A5  3400               	retlw	0
  1398     11A6                     STR_4:
  1399     11A6  3447               	retlw	71	;'G'
  1400     11A7  3432               	retlw	50	;'2'
  1401     11A8  3400               	retlw	0
  1402     11A9                     STR_5:
  1403     11A9  3447               	retlw	71	;'G'
  1404     11AA  3433               	retlw	51	;'3'
  1405     11AB  3400               	retlw	0
  1406     11AC                     STR_6:
  1407     11AC  3447               	retlw	71	;'G'
  1408     11AD  3434               	retlw	52	;'4'
  1409     11AE  3400               	retlw	0
  1410     11AF                     STR_11:
  1411     11AF  3444               	retlw	68	;'D'
  1412     11B0  344C               	retlw	76	;'L'
  1413     11B1  3400               	retlw	0
  1414     11B2                     STR_10:
  1415     11B2  3456               	retlw	86	;'V'
  1416     11B3  344C               	retlw	76	;'L'
  1417     11B4  3400               	retlw	0
  1418     11B5                     STR_2:
  1419     11B5  3447               	retlw	71	;'G'
  1420     11B6  344E               	retlw	78	;'N'
  1421     11B7  3400               	retlw	0
  1422     11B8                     STR_8:
  1423     11B8  3443               	retlw	67	;'C'
  1424     11B9  344F               	retlw	79	;'O'
  1425     11BA  3400               	retlw	0
  1426     11BB                     STR_1:
  1427     11BB  3447               	retlw	71	;'G'
  1428     11BC  3452               	retlw	82	;'R'
  1429     11BD  3400               	retlw	0
  1430     11BE                     STR_14:
  1431     11BE  3453               	retlw	83	;'S'
  1432     11BF  3454               	retlw	84	;'T'
  1433     11C0  3400               	retlw	0
  1434     10E7                     STR_27          equ	STR_9
  1435     1035                     STR_47          equ	STR_46
  1436     103E                     STR_36          equ	STR_46+9
  1437     1040                     STR_35          equ	STR_46+11
  1438     1042                     STR_43          equ	STR_46+13
  1439     1043                     STR_34          equ	STR_46+14
  1440     1044                     STR_40          equ	STR_46+15
  1441     1044                     STR_41          equ	STR_46+15
  1442     1044                     STR_42          equ	STR_46+15
  1443                           
  1444                           	psect	cinit
  1445     000F                     start_initialization:	
  1446                           ; #config settings
  1447                           
  1448     000F                     __initialization:
  1449                           
  1450                           ; Initialize objects allocated to BANK1
  1451     000F  1383               	bcf	3,7	;select IRP bank0
  1452     0010  30E6               	movlw	low (__pdataBANK1+25)
  1453     0011  00FD               	movwf	btemp+-1
  1454     0012  3011               	movlw	high __pidataBANK1
  1455     0013  00FE               	movwf	btemp
  1456     0014  30EB               	movlw	low __pidataBANK1
  1457     0015  00FF               	movwf	btemp+1
  1458     0016  30CD               	movlw	low __pdataBANK1
  1459     0017  0084               	movwf	4
  1460     0018  160A  118A  21C7  120A  118A  	fcall	init_ram0
  1461                           
  1462                           ; Clear objects allocated to BANK1
  1463     001D  30A0               	movlw	low __pbssBANK1
  1464     001E  0084               	movwf	4
  1465     001F  30CD               	movlw	low (__pbssBANK1+45)
  1466     0020  160A  158A  275A  120A  118A  	fcall	clear_ram0
  1467                           
  1468                           ; Clear objects allocated to BANK0
  1469     0025  3052               	movlw	low __pbssBANK0
  1470     0026  0084               	movwf	4
  1471     0027  305C               	movlw	low (__pbssBANK0+10)
  1472     0028  160A  158A  275A  120A  118A  	fcall	clear_ram0
  1473                           
  1474                           ; Clear objects allocated to COMMON
  1475     002D  01FA               	clrf	__pbssCOMMON& (0+127)
  1476     002E  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1477     002F                     end_of_initialization:	
  1478                           ;End of C runtime variable initialization code
  1479                           
  1480     002F                     __end_of__initialization:
  1481     002F  0183               	clrf	3
  1482     0030  120A  118A  2833   	ljmp	_main	;jump to C main() function
  1483                           
  1484                           	psect	bssCOMMON
  1485     007A                     __pbssCOMMON:
  1486     007A                     change_password@pwd_pos:
  1487     007A                     	ds	1
  1488     007B                     read_digital_keypad@once:
  1489     007B                     	ds	1
  1490                           
  1491                           	psect	bssBANK0
  1492     0052                     __pbssBANK0:
  1493     0052                     change_time@new_time:
  1494     0052                     	ds	3
  1495     0055                     view_log@log_pos:
  1496     0055                     	ds	1
  1497     0056                     menu_screen@menu_pos:
  1498     0056                     	ds	1
  1499     0057                     login@i:
  1500     0057                     	ds	1
  1501     0058                     _log_count:
  1502     0058                     	ds	1
  1503     0059                     _sec:
  1504     0059                     	ds	1
  1505     005A                     _return_time:
  1506     005A                     	ds	1
  1507     005B                     read_digital_keypad@long_press:
  1508     005B                     	ds	1
  1509                           
  1510                           	psect	bssBANK1
  1511     00A0                     __pbssBANK1:
  1512     00A0                     _clock_reg:
  1513     00A0                     	ds	3
  1514     00A3                     isr@count:
  1515     00A3                     	ds	2
  1516     00A5                     change_password@blink_delay:
  1517     00A5                     	ds	1
  1518     00A6                     change_password@toggle_cursor:
  1519     00A6                     	ds	1
  1520     00A7                     change_password@pwd_changed:
  1521     00A7                     	ds	1
  1522     00A8                     change_time@done:
  1523     00A8                     	ds	1
  1524     00A9                     change_time@wait:
  1525     00A9                     	ds	1
  1526     00AA                     change_time@blink:
  1527     00AA                     	ds	1
  1528     00AB                     change_time@blink_pos:
  1529     00AB                     	ds	1
  1530     00AC                     login@attempt_left:
  1531     00AC                     	ds	1
  1532     00AD                     read_digital_keypad@pre_key:
  1533     00AD                     	ds	1
  1534     00AE                     _log:
  1535     00AE                     	ds	11
  1536     00B9                     change_password@new_pwd:
  1537     00B9                     	ds	9
  1538     00C2                     _time:
  1539     00C2                     	ds	7
  1540     00C9                     login@user_password:
  1541     00C9                     	ds	4
  1542                           
  1543                           	psect	dataBANK1
  1544     00CD                     __pdataBANK1:
  1545     00CD                     main@F1253:
  1546     00CD                     	ds	12
  1547     00D9                     _menu:
  1548     00D9                     	ds	10
  1549     00E3                     main@F1251:
  1550     00E3                     	ds	3
  1551                           
  1552                           	psect	inittext
  1553     11C3                     init_fetch0:	
  1554                           ;	Called with low address in FSR and high address in W
  1555                           
  1556     11C3  087E               	movf	btemp,w
  1557     11C4  008A               	movwf	10
  1558     11C5  087F               	movf	btemp+1,w
  1559     11C6  0082               	movwf	2
  1560     11C7                     init_ram0:	
  1561                           ;Called with:
  1562                           ;	high address of idata address in btemp 
  1563                           ;	low address of idata address in btemp+1 
  1564                           ;	low address of data in FSR
  1565                           ;	high address + 1 of data in btemp-1
  1566                           
  1567     11C7  160A  118A  21C3  160A  118A  	fcall	init_fetch0
  1568     11CC  0080               	movwf	0
  1569     11CD  0A84               	incf	4,f
  1570     11CE  0804               	movf	4,w
  1571     11CF  067D               	xorwf	btemp+-1,w
  1572     11D0  1903               	btfsc	3,2
  1573     11D1  3400               	retlw	0
  1574     11D2  0AFF               	incf	btemp+1,f
  1575     11D3  1903               	btfsc	3,2
  1576     11D4  0AFE               	incf	btemp,f
  1577     11D5  29C7               	goto	init_ram0
  1578                           
  1579                           	psect	clrtext
  1580     1F5A                     clear_ram0:	
  1581                           ;	Called with FSR containing the base address, and
  1582                           ;	W with the last address+1
  1583                           
  1584     1F5A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1585     1F5B                     clrloop0:
  1586     1F5B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1587     1F5C  0A84               	incf	4,f	;increment pointer
  1588     1F5D  0604               	xorwf	4,w	;XOR with final address
  1589     1F5E  1903               	btfsc	3,2	;have we reached the end yet?
  1590     1F5F  3400               	retlw	0	;all done for this memory range, return
  1591     1F60  0604               	xorwf	4,w	;XOR again to restore value
  1592     1F61  2F5B               	goto	clrloop0	;do the next byte
  1593                           
  1594                           	psect	cstackBANK3
  1595     0190                     __pcstackBANK3:
  1596     0190                     main@gear:
  1597                           
  1598                           ; 12 bytes @ 0x0
  1599     0190                     	ds	12
  1600     019C                     main@long_press:
  1601                           
  1602                           ; 1 bytes @ 0xC
  1603     019C                     	ds	1
  1604     019D                     main@menu_pos:
  1605                           
  1606                           ; 1 bytes @ 0xD
  1607     019D                     	ds	1
  1608     019E                     main@event:
  1609                           
  1610                           ; 3 bytes @ 0xE
  1611     019E                     	ds	3
  1612     01A1                     main@gr:
  1613                           
  1614                           ; 1 bytes @ 0x11
  1615     01A1                     	ds	1
  1616     01A2                     main@reset_flag:
  1617                           
  1618                           ; 1 bytes @ 0x12
  1619     01A2                     	ds	1
  1620     01A3                     main@speed:
  1621                           
  1622                           ; 1 bytes @ 0x13
  1623     01A3                     	ds	1
  1624     01A4                     main@control_flag:
  1625                           
  1626                           ; 1 bytes @ 0x14
  1627     01A4                     	ds	1
  1628     01A5                     main@key:
  1629                           
  1630                           ; 1 bytes @ 0x15
  1631     01A5                     	ds	1
  1632                           
  1633                           	psect	cstackCOMMON
  1634     0070                     __pcstackCOMMON:
  1635     0070                     ?_read_ds1307:
  1636     0070                     ?_i2c_start:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639     0070                     ?_i2c_rep_start:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642     0070                     ?_i2c_read:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645     0070                     ?_i2c_stop:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648     0070                     ?_init_digital_keypad:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651     0070                     ?_init_adc:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654     0070                     ?_init_timer2:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657     0070                     ?_read_digital_keypad:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660     0070                     ?_clear_clcd_screen:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663     0070                     ?_clear_log:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666     0070                     ?_download_log:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669     0070                     ?_read_at24c04:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672     0070                     ?_putchar:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675     0070                     ?_init_display_controller:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678     0070                     ?_init_clcd:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681     0070                     ?_init_ds1307:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684     0070                     ?_i2c_wait_for_idle:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687     0070                     ?_init_config:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690     0070                     ?_main:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693     0070                     ?_get_time:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696     0070                     ?_display_time:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699     0070                     ?_record_log:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702     0070                     ?_isr:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705     0070                     ?_i2c_write:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708     0070                     ??_isr:	
  1709                           ; 2 bytes @ 0x0
  1710                           
  1711                           
  1712                           ; 1 bytes @ 0x0
  1713     0070                     	ds	2
  1714     0072                     ?_strcpy:
  1715     0072                     ?_strncpy:	
  1716                           ; 1 bytes @ 0x2
  1717                           
  1718     0072                     ?_clcd_write:	
  1719                           ; 1 bytes @ 0x2
  1720                           
  1721     0072                     ?___bmul:	
  1722                           ; 1 bytes @ 0x2
  1723                           
  1724     0072                     ?_read_adc:	
  1725                           ; 1 bytes @ 0x2
  1726                           
  1727     0072                     ?_strncmp:	
  1728                           ; 2 bytes @ 0x2
  1729                           
  1730     0072                     ?___awdiv:	
  1731                           ; 2 bytes @ 0x2
  1732                           
  1733     0072                     ?___awmod:	
  1734                           ; 2 bytes @ 0x2
  1735                           
  1736     0072                     ?___lldiv:	
  1737                           ; 2 bytes @ 0x2
  1738                           
  1739     0072                     clcd_write@mode:	
  1740                           ; 4 bytes @ 0x2
  1741                           
  1742     0072                     i2c_read@ack:	
  1743                           ; 1 bytes @ 0x2
  1744                           
  1745     0072                     i2c_write@data:	
  1746                           ; 1 bytes @ 0x2
  1747                           
  1748     0072                     read_digital_keypad@key:	
  1749                           ; 1 bytes @ 0x2
  1750                           
  1751     0072                     putchar@data:	
  1752                           ; 1 bytes @ 0x2
  1753                           
  1754     0072                     ___bmul@multiplicand:	
  1755                           ; 1 bytes @ 0x2
  1756                           
  1757     0072                     strcpy@dest:	
  1758                           ; 1 bytes @ 0x2
  1759                           
  1760     0072                     strncmp@l:	
  1761                           ; 1 bytes @ 0x2
  1762                           
  1763     0072                     strncpy@d:	
  1764                           ; 1 bytes @ 0x2
  1765                           
  1766     0072                     ___awdiv@divisor:	
  1767                           ; 1 bytes @ 0x2
  1768                           
  1769     0072                     ___awmod@divisor:	
  1770                           ; 2 bytes @ 0x2
  1771                           
  1772     0072                     ___lldiv@divisor:	
  1773                           ; 2 bytes @ 0x2
  1774                           
  1775     0072                     ??_i2c_start:	
  1776                           ; 4 bytes @ 0x2
  1777                           
  1778     0072                     ??_i2c_write:	
  1779                           ; 1 bytes @ 0x2
  1780                           
  1781     0072                     ??_i2c_rep_start:	
  1782                           ; 1 bytes @ 0x2
  1783                           
  1784     0072                     ??_i2c_read:	
  1785                           ; 1 bytes @ 0x2
  1786                           
  1787     0072                     ??_i2c_stop:	
  1788                           ; 1 bytes @ 0x2
  1789                           
  1790     0072                     ??_init_digital_keypad:	
  1791                           ; 1 bytes @ 0x2
  1792                           
  1793     0072                     ??_init_adc:	
  1794                           ; 1 bytes @ 0x2
  1795                           
  1796     0072                     ??_init_timer2:	
  1797                           ; 1 bytes @ 0x2
  1798                           
  1799     0072                     ??_read_digital_keypad:	
  1800                           ; 1 bytes @ 0x2
  1801                           
  1802     0072                     ??_putchar:	
  1803                           ; 1 bytes @ 0x2
  1804                           
  1805     0072                     ??_i2c_wait_for_idle:	
  1806                           ; 1 bytes @ 0x2
  1807                           
  1808                           
  1809                           ; 1 bytes @ 0x2
  1810     0072                     	ds	1
  1811     0073                     ?_write_ds1307:
  1812     0073                     ?_puts:	
  1813                           ; 1 bytes @ 0x3
  1814                           
  1815     0073                     ?_write_at24c04:	
  1816                           ; 1 bytes @ 0x3
  1817                           
  1818     0073                     write_ds1307@data:	
  1819                           ; 1 bytes @ 0x3
  1820                           
  1821     0073                     i2c_read@data:	
  1822                           ; 1 bytes @ 0x3
  1823                           
  1824     0073                     write_at24c04@data:	
  1825                           ; 1 bytes @ 0x3
  1826                           
  1827     0073                     ___bmul@product:	
  1828                           ; 1 bytes @ 0x3
  1829                           
  1830     0073                     strncmp@r:	
  1831                           ; 1 bytes @ 0x3
  1832                           
  1833     0073                     puts@s:	
  1834                           ; 1 bytes @ 0x3
  1835                           
  1836     0073                     strcpy@src:	
  1837                           ; 2 bytes @ 0x3
  1838                           
  1839     0073                     strncpy@s:	
  1840                           ; 2 bytes @ 0x3
  1841                           
  1842     0073                     ??_clcd_write:	
  1843                           ; 2 bytes @ 0x3
  1844                           
  1845     0073                     ??___bmul:	
  1846                           ; 1 bytes @ 0x3
  1847                           
  1848                           
  1849                           ; 1 bytes @ 0x3
  1850     0073                     	ds	1
  1851     0074                     read_ds1307@addr:
  1852     0074                     write_ds1307@addr:	
  1853                           ; 1 bytes @ 0x4
  1854                           
  1855     0074                     read_at24c04@addr:	
  1856                           ; 1 bytes @ 0x4
  1857                           
  1858     0074                     ___bmul@multiplier:	
  1859                           ; 1 bytes @ 0x4
  1860                           
  1861     0074                     read_adc@adc_reg_val:	
  1862                           ; 1 bytes @ 0x4
  1863                           
  1864     0074                     ___awdiv@dividend:	
  1865                           ; 2 bytes @ 0x4
  1866                           
  1867     0074                     ___awmod@dividend:	
  1868                           ; 2 bytes @ 0x4
  1869                           
  1870     0074                     strncmp@n:	
  1871                           ; 2 bytes @ 0x4
  1872                           
  1873     0074                     ??_read_ds1307:	
  1874                           ; 2 bytes @ 0x4
  1875                           
  1876     0074                     ??_write_ds1307:	
  1877                           ; 1 bytes @ 0x4
  1878                           
  1879     0074                     ??_read_adc:	
  1880                           ; 1 bytes @ 0x4
  1881                           
  1882     0074                     ??_read_at24c04:	
  1883                           ; 1 bytes @ 0x4
  1884                           
  1885     0074                     ??_write_at24c04:	
  1886                           ; 1 bytes @ 0x4
  1887                           
  1888                           
  1889                           ; 1 bytes @ 0x4
  1890     0074                     	ds	1
  1891     0075                     clcd_write@byte:
  1892     0075                     read_ds1307@data:	
  1893                           ; 1 bytes @ 0x5
  1894                           
  1895     0075                     read_at24c04@data:	
  1896                           ; 1 bytes @ 0x5
  1897                           
  1898     0075                     strncpy@n:	
  1899                           ; 1 bytes @ 0x5
  1900                           
  1901     0075                     ??_strcpy:	
  1902                           ; 2 bytes @ 0x5
  1903                           
  1904     0075                     ??_puts:	
  1905                           ; 1 bytes @ 0x5
  1906                           
  1907                           
  1908                           ; 1 bytes @ 0x5
  1909     0075                     	ds	1
  1910     0076                     ?_clcd_print:
  1911     0076                     ?___xxtofl:	
  1912                           ; 1 bytes @ 0x6
  1913                           
  1914     0076                     init_ds1307@dummy:	
  1915                           ; 4 bytes @ 0x6
  1916                           
  1917     0076                     write_at24c04@addr:	
  1918                           ; 1 bytes @ 0x6
  1919                           
  1920     0076                     ___awdiv@counter:	
  1921                           ; 1 bytes @ 0x6
  1922                           
  1923     0076                     ___awmod@counter:	
  1924                           ; 1 bytes @ 0x6
  1925                           
  1926     0076                     clcd_print@str:	
  1927                           ; 1 bytes @ 0x6
  1928                           
  1929     0076                     ___lldiv@dividend:	
  1930                           ; 2 bytes @ 0x6
  1931                           
  1932     0076                     ___xxtofl@val:	
  1933                           ; 4 bytes @ 0x6
  1934                           
  1935     0076                     ??_clear_clcd_screen:	
  1936                           ; 4 bytes @ 0x6
  1937                           
  1938     0076                     ??_download_log:	
  1939                           ; 1 bytes @ 0x6
  1940                           
  1941     0076                     ??_strncmp:	
  1942                           ; 1 bytes @ 0x6
  1943                           
  1944     0076                     ??_init_display_controller:	
  1945                           ; 1 bytes @ 0x6
  1946                           
  1947     0076                     ??_init_ds1307:	
  1948                           ; 1 bytes @ 0x6
  1949                           
  1950     0076                     ??_get_time:	
  1951                           ; 1 bytes @ 0x6
  1952                           
  1953     0076                     ??___awdiv:	
  1954                           ; 1 bytes @ 0x6
  1955                           
  1956     0076                     ??___awmod:	
  1957                           ; 1 bytes @ 0x6
  1958                           
  1959                           
  1960                           ; 1 bytes @ 0x6
  1961     0076                     	ds	1
  1962     0077                     ?_write_str_at24c04:
  1963     0077                     ___awdiv@sign:	
  1964                           ; 1 bytes @ 0x7
  1965                           
  1966     0077                     ___awmod@sign:	
  1967                           ; 1 bytes @ 0x7
  1968                           
  1969     0077                     strcpy@d:	
  1970                           ; 1 bytes @ 0x7
  1971                           
  1972     0077                     write_str_at24c04@data:	
  1973                           ; 1 bytes @ 0x7
  1974                           
  1975     0077                     ??_strncpy:	
  1976                           ; 2 bytes @ 0x7
  1977                           
  1978                           
  1979                           ; 1 bytes @ 0x7
  1980     0077                     	ds	1
  1981     0078                     clcd_print@addr:
  1982     0078                     ___awdiv@quotient:	
  1983                           ; 1 bytes @ 0x8
  1984                           
  1985     0078                     ??_init_clcd:	
  1986                           ; 2 bytes @ 0x8
  1987                           
  1988                           
  1989                           ; 1 bytes @ 0x8
  1990     0078                     	ds	1
  1991     0079                     write_str_at24c04@addr:
  1992     0079                     strncpy@cp:	
  1993                           ; 1 bytes @ 0x9
  1994                           
  1995     0079                     ??_write_str_at24c04:	
  1996                           ; 1 bytes @ 0x9
  1997                           
  1998     0079                     ??_clcd_print:	
  1999                           ; 1 bytes @ 0x9
  2000                           
  2001                           
  2002                           ; 1 bytes @ 0x9
  2003     0079                     	ds	1
  2004     007A                     ??_clcd_putch:
  2005     007A                     ??_init_config:	
  2006                           ; 1 bytes @ 0xA
  2007                           
  2008     007A                     ??_display_time:	
  2009                           ; 1 bytes @ 0xA
  2010                           
  2011     007A                     ??_record_log:	
  2012                           ; 1 bytes @ 0xA
  2013                           
  2014                           
  2015                           	psect	cstackBANK0
  2016     0020                     __pcstackBANK0:	
  2017                           ; 1 bytes @ 0xA
  2018                           
  2019     0020                     ?_clcd_putch:
  2020     0020                     clcd_putch@addr:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023     0020                     record_log@addr:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026     0020                     download_log@log:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029     0020                     ??_clear_log:	
  2030                           ; 11 bytes @ 0x0
  2031                           
  2032     0020                     ??___lldiv:	
  2033                           ; 1 bytes @ 0x0
  2034                           
  2035     0020                     ??___xxtofl:	
  2036                           ; 1 bytes @ 0x0
  2037                           
  2038                           
  2039                           ; 1 bytes @ 0x0
  2040     0020                     	ds	1
  2041     0021                     ?_log_car_event:
  2042     0021                     clcd_putch@data:	
  2043                           ; 1 bytes @ 0x1
  2044                           
  2045     0021                     log_car_event@event:	
  2046                           ; 1 bytes @ 0x1
  2047                           
  2048     0021                     ___lldiv@quotient:	
  2049                           ; 2 bytes @ 0x1
  2050                           
  2051                           
  2052                           ; 4 bytes @ 0x1
  2053     0021                     	ds	1
  2054     0022                     ?_display_dashboard:
  2055     0022                     ?_login:	
  2056                           ; 1 bytes @ 0x2
  2057                           
  2058     0022                     ?_menu_screen:	
  2059                           ; 1 bytes @ 0x2
  2060                           
  2061     0022                     ?_view_log:	
  2062                           ; 1 bytes @ 0x2
  2063                           
  2064     0022                     ?_change_time:	
  2065                           ; 1 bytes @ 0x2
  2066                           
  2067     0022                     ?_change_password:	
  2068                           ; 1 bytes @ 0x2
  2069                           
  2070     0022                     display_dashboard@event:	
  2071                           ; 1 bytes @ 0x2
  2072                           
  2073     0022                     login@reset_flag:	
  2074                           ; 1 bytes @ 0x2
  2075                           
  2076     0022                     menu_screen@reset_flag:	
  2077                           ; 1 bytes @ 0x2
  2078                           
  2079     0022                     view_log@reset_flag:	
  2080                           ; 1 bytes @ 0x2
  2081                           
  2082     0022                     change_time@reset_flag:	
  2083                           ; 1 bytes @ 0x2
  2084                           
  2085     0022                     change_password@key:	
  2086                           ; 1 bytes @ 0x2
  2087                           
  2088                           
  2089                           ; 2 bytes @ 0x2
  2090     0022                     	ds	1
  2091     0023                     display_dashboard@speed:
  2092     0023                     log_car_event@speed:	
  2093                           ; 1 bytes @ 0x3
  2094                           
  2095     0023                     ??_login:	
  2096                           ; 1 bytes @ 0x3
  2097                           
  2098     0023                     ??_menu_screen:	
  2099                           ; 1 bytes @ 0x3
  2100                           
  2101     0023                     ??_view_log:	
  2102                           ; 1 bytes @ 0x3
  2103                           
  2104     0023                     ??_change_time:	
  2105                           ; 1 bytes @ 0x3
  2106                           
  2107                           
  2108                           ; 1 bytes @ 0x3
  2109     0023                     	ds	1
  2110     0024                     change_password@reset_flag:
  2111     0024                     ___xxtofl@sign:	
  2112                           ; 1 bytes @ 0x4
  2113                           
  2114     0024                     ??_log_car_event:	
  2115                           ; 1 bytes @ 0x4
  2116                           
  2117     0024                     ??_display_dashboard:	
  2118                           ; 1 bytes @ 0x4
  2119                           
  2120                           
  2121                           ; 1 bytes @ 0x4
  2122     0024                     	ds	1
  2123     0025                     menu_screen@key:
  2124     0025                     view_log@addr:	
  2125                           ; 1 bytes @ 0x5
  2126                           
  2127     0025                     ___lldiv@counter:	
  2128                           ; 1 bytes @ 0x5
  2129                           
  2130     0025                     ___xxtofl@exp:	
  2131                           ; 1 bytes @ 0x5
  2132                           
  2133     0025                     ??_change_password:	
  2134                           ; 1 bytes @ 0x5
  2135                           
  2136                           
  2137                           ; 1 bytes @ 0x5
  2138     0025                     	ds	1
  2139     0026                     ?_init_uart:
  2140     0026                     ?_init_i2c:	
  2141                           ; 1 bytes @ 0x6
  2142                           
  2143     0026                     view_log@key:	
  2144                           ; 1 bytes @ 0x6
  2145                           
  2146     0026                     init_i2c@baud:	
  2147                           ; 1 bytes @ 0x6
  2148                           
  2149     0026                     login@stored_pwd:	
  2150                           ; 4 bytes @ 0x6
  2151                           
  2152     0026                     init_uart@baud:	
  2153                           ; 4 bytes @ 0x6
  2154                           
  2155     0026                     ___xxtofl@arg:	
  2156                           ; 4 bytes @ 0x6
  2157                           
  2158                           
  2159                           ; 4 bytes @ 0x6
  2160     0026                     	ds	1
  2161     0027                     view_log@i:
  2162                           
  2163                           ; 1 bytes @ 0x7
  2164     0027                     	ds	3
  2165     002A                     ?___fldiv:
  2166     002A                     login@key:	
  2167                           ; 4 bytes @ 0xA
  2168                           
  2169     002A                     change_time@key:	
  2170                           ; 1 bytes @ 0xA
  2171                           
  2172     002A                     ___fldiv@a:	
  2173                           ; 1 bytes @ 0xA
  2174                           
  2175     002A                     ??_init_uart:	
  2176                           ; 4 bytes @ 0xA
  2177                           
  2178     002A                     ??_init_i2c:	
  2179                           ; 1 bytes @ 0xA
  2180                           
  2181                           
  2182                           ; 1 bytes @ 0xA
  2183     002A                     	ds	1
  2184     002B                     login@j:
  2185     002B                     download_log@addr:	
  2186                           ; 1 bytes @ 0xB
  2187                           
  2188     002B                     change_time@buffer:	
  2189                           ; 1 bytes @ 0xB
  2190                           
  2191                           
  2192                           ; 1 bytes @ 0xB
  2193     002B                     	ds	1
  2194     002C                     download_log@position:
  2195                           
  2196                           ; 1 bytes @ 0xC
  2197     002C                     	ds	1
  2198     002D                     download_log@index:
  2199                           
  2200                           ; 2 bytes @ 0xD
  2201     002D                     	ds	1
  2202     002E                     ___fldiv@b:
  2203                           
  2204                           ; 4 bytes @ 0xE
  2205     002E                     	ds	1
  2206     002F                     download_log@i:
  2207                           
  2208                           ; 1 bytes @ 0xF
  2209     002F                     	ds	3
  2210     0032                     ??___fldiv:
  2211                           
  2212                           ; 1 bytes @ 0x12
  2213     0032                     	ds	5
  2214     0037                     ___fldiv@rem:
  2215                           
  2216                           ; 4 bytes @ 0x17
  2217     0037                     	ds	4
  2218     003B                     ___fldiv@sign:
  2219                           
  2220                           ; 1 bytes @ 0x1B
  2221     003B                     	ds	1
  2222     003C                     ___fldiv@new_exp:
  2223                           
  2224                           ; 2 bytes @ 0x1C
  2225     003C                     	ds	2
  2226     003E                     ___fldiv@grs:
  2227                           
  2228                           ; 4 bytes @ 0x1E
  2229     003E                     	ds	4
  2230     0042                     ___fldiv@bexp:
  2231                           
  2232                           ; 1 bytes @ 0x22
  2233     0042                     	ds	1
  2234     0043                     ___fldiv@aexp:
  2235                           
  2236                           ; 1 bytes @ 0x23
  2237     0043                     	ds	1
  2238     0044                     ?___fltol:
  2239     0044                     ___fltol@f1:	
  2240                           ; 4 bytes @ 0x24
  2241                           
  2242                           
  2243                           ; 4 bytes @ 0x24
  2244     0044                     	ds	4
  2245     0048                     ??___fltol:
  2246                           
  2247                           ; 1 bytes @ 0x28
  2248     0048                     	ds	4
  2249     004C                     ___fltol@sign1:
  2250                           
  2251                           ; 1 bytes @ 0x2C
  2252     004C                     	ds	1
  2253     004D                     ___fltol@exp1:
  2254                           
  2255                           ; 1 bytes @ 0x2D
  2256     004D                     	ds	1
  2257     004E                     ??_main:
  2258                           
  2259                           ; 1 bytes @ 0x2E
  2260     004E                     	ds	4
  2261                           
  2262                           	psect	maintext
  2263     0033                     __pmaintext:	
  2264 ;;
  2265 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2266 ;;
  2267 ;; *************** function _main *****************
  2268 ;; Defined at:
  2269 ;;		line 34 in file "main.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  gear           12    0[BANK3 ] PTR unsigned char [6]
  2274 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(3), 
  2275 ;;		 -> STR_2(3), STR_1(3), 
  2276 ;;  event           3   14[BANK3 ] unsigned char [3]
  2277 ;;  key             1   21[BANK3 ] unsigned char 
  2278 ;;  control_flag    1   20[BANK3 ] unsigned char 
  2279 ;;  speed           1   19[BANK3 ] unsigned char 
  2280 ;;  reset_flag      1   18[BANK3 ] unsigned char 
  2281 ;;  gr              1   17[BANK3 ] unsigned char 
  2282 ;;  menu_pos        1   13[BANK3 ] unsigned char 
  2283 ;;  long_press      1   12[BANK3 ] unsigned char 
  2284 ;;  delay           1    0        unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : B00/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2294 ;;      Params:         0       0       0       0       0
  2295 ;;      Locals:         0       0       0      22       0
  2296 ;;      Temps:          0       4       0       0       0
  2297 ;;      Totals:         0       4       0      22       0
  2298 ;;Total ram usage:       26 bytes
  2299 ;; Hardware stack levels required when called: 8
  2300 ;; This function calls:
  2301 ;;		___fldiv
  2302 ;;		___fltol
  2303 ;;		___xxtofl
  2304 ;;		_change_password
  2305 ;;		_change_time
  2306 ;;		_clcd_print
  2307 ;;		_clcd_write
  2308 ;;		_clear_clcd_screen
  2309 ;;		_clear_log
  2310 ;;		_display_dashboard
  2311 ;;		_download_log
  2312 ;;		_init_config
  2313 ;;		_log_car_event
  2314 ;;		_login
  2315 ;;		_menu_screen
  2316 ;;		_read_adc
  2317 ;;		_read_digital_keypad
  2318 ;;		_strcpy
  2319 ;;		_view_log
  2320 ;;		_write_str_at24c04
  2321 ;; This function is called by:
  2322 ;;		Startup code after reset
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326     0033                     _main:	
  2327                           ;psect for function _main
  2328                           
  2329     0033                     l5305:	
  2330                           ;incstack = 0
  2331                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2332                           
  2333                           
  2334                           ;main.c: 36:     while (1) {
  2335     0033  3001               	movlw	1
  2336     0034  1683               	bsf	3,5	;RP0=1, select bank3
  2337     0035  1703               	bsf	3,6	;RP1=1, select bank3
  2338     0036  00A4               	movwf	main@control_flag^(0+384)
  2339     0037                     l5307:
  2340                           
  2341                           ;main.c: 37: 
  2342     0037  01A3               	clrf	main@speed^(0+384)
  2343     0038  019C               	clrf	main@long_press^(0+384)
  2344     0039                     l5309:
  2345                           
  2346                           ;main.c: 38:         key = read_digital_keypad();
  2347     0039  1683               	bsf	3,5	;RP0=1, select bank1
  2348     003A  1303               	bcf	3,6	;RP1=0, select bank1
  2349     003B  0863               	movf	main@F1251^(0+128),w
  2350     003C  1683               	bsf	3,5	;RP0=1, select bank3
  2351     003D  1703               	bsf	3,6	;RP1=1, select bank3
  2352     003E  009E               	movwf	main@event^(0+384)
  2353     003F  1683               	bsf	3,5	;RP0=1, select bank1
  2354     0040  1303               	bcf	3,6	;RP1=0, select bank1
  2355     0041  0864               	movf	(main@F1251+1)^(0+128),w
  2356     0042  1683               	bsf	3,5	;RP0=1, select bank3
  2357     0043  1703               	bsf	3,6	;RP1=1, select bank3
  2358     0044  009F               	movwf	(main@event+1)^(0+384)
  2359     0045  1683               	bsf	3,5	;RP0=1, select bank1
  2360     0046  1303               	bcf	3,6	;RP1=0, select bank1
  2361     0047  0865               	movf	(main@F1251+2)^(0+128),w
  2362     0048  1683               	bsf	3,5	;RP0=1, select bank3
  2363     0049  1703               	bsf	3,6	;RP1=1, select bank3
  2364     004A  00A0               	movwf	(main@event+2)^(0+384)
  2365     004B                     l5311:
  2366                           
  2367                           ;main.c: 39: 
  2368     004B  30CD               	movlw	main@F1253& (0+255)
  2369     004C  0084               	movwf	4
  2370     004D  3090               	movlw	low main@gear
  2371     004E  1283               	bcf	3,5	;RP0=0, select bank0
  2372     004F  1303               	bcf	3,6	;RP1=0, select bank0
  2373     0050  00CE               	movwf	??_main
  2374     0051  300C               	movlw	12
  2375     0052  00CF               	movwf	??_main+1
  2376     0053                     u5820:
  2377     0053  1383               	bcf	3,7	;select IRP bank1
  2378     0054  0800               	movf	0,w
  2379     0055  00D0               	movwf	??_main+2
  2380     0056  0A04               	incf	4,w
  2381     0057  00D1               	movwf	??_main+3
  2382     0058  084E               	movf	??_main,w
  2383     0059  0084               	movwf	4
  2384     005A  1783               	bsf	3,7	;select IRP bank3
  2385     005B  0850               	movf	??_main+2,w
  2386     005C  0080               	movwf	0
  2387     005D  0A04               	incf	4,w
  2388     005E  00CE               	movwf	??_main
  2389     005F  0851               	movf	??_main+3,w
  2390     0060  0084               	movwf	4
  2391     0061  0BCF               	decfsz	??_main+1,f
  2392     0062  2853               	goto	u5820
  2393     0063                     l5313:
  2394                           
  2395                           ;main.c: 40:         if(key == 0x3E)
  2396     0063  1683               	bsf	3,5	;RP0=1, select bank3
  2397     0064  1703               	bsf	3,6	;RP1=1, select bank3
  2398     0065  01A1               	clrf	main@gr^(0+384)
  2399     0066                     l5315:
  2400                           
  2401                           ;main.c: 41:         {
  2402     0066  160A  118A  2457  120A  118A  	fcall	_init_config
  2403     006B                     l5317:
  2404                           
  2405                           ;main.c: 43:             log_car_event(event, speed);
  2406     006B  309E               	movlw	(low (main@event| (0+256)))& (0+255)
  2407     006C  1283               	bcf	3,5	;RP0=0, select bank0
  2408     006D  1303               	bcf	3,6	;RP1=0, select bank0
  2409     006E  00A1               	movwf	log_car_event@event
  2410     006F  3001               	movlw	1
  2411     0070  00A2               	movwf	log_car_event@event+1
  2412     0071  01A3               	clrf	log_car_event@speed
  2413     0072  160A  118A  2618  120A  118A  	fcall	_log_car_event
  2414     0077                     l5319:
  2415                           
  2416                           ;main.c: 45:         else if(key == 0x3D && gr < 6)
  2417     0077  3099               	movlw	low (STR_7| (0+32768))
  2418     0078  00F7               	movwf	write_str_at24c04@data
  2419     0079  3091               	movlw	high (STR_7| (0+32768))
  2420     007A  00F8               	movwf	write_str_at24c04@data+1
  2421     007B  3000               	movlw	0
  2422     007C  160A  118A  22AC  120A  118A  	fcall	_write_str_at24c04
  2423     0081                     l5321:
  2424                           
  2425                           ;main.c: 49:             log_car_event(event, speed);
  2426     0081  120A  158A  2000  120A  118A  	fcall	_read_digital_keypad
  2427     0086  1683               	bsf	3,5	;RP0=1, select bank3
  2428     0087  1703               	bsf	3,6	;RP1=1, select bank3
  2429     0088  00A5               	movwf	main@key^(0+384)
  2430     0089                     l5323:
  2431                           
  2432                           ;main.c: 51:         else if(key == 0x3B && gr > 0)
  2433     0089  303E               	movlw	62
  2434     008A  0625               	xorwf	main@key^(0+384),w
  2435     008B  1D03               	btfss	3,2
  2436     008C  288E               	goto	u5831
  2437     008D  288F               	goto	u5830
  2438     008E                     u5831:
  2439     008E  28AC               	goto	l5327
  2440     008F                     u5830:
  2441     008F                     l5325:
  2442                           
  2443                           ;main.c: 52:         {;main.c: 53:             gr--;
  2444     008F  309E               	movlw	(low (main@event| (0+256)))& (0+255)
  2445     0090  00F2               	movwf	strcpy@dest
  2446     0091  30B8               	movlw	low (STR_8| (0+32768))
  2447     0092  00F3               	movwf	strcpy@src
  2448     0093  3091               	movlw	high (STR_8| (0+32768))
  2449     0094  00F4               	movwf	strcpy@src+1
  2450     0095  160A  118A  2243  120A  118A  	fcall	_strcpy
  2451                           
  2452                           ;main.c: 54:             strcpy(event, gear[gr]);
  2453     009A  309E               	movlw	(low (main@event| (0+256)))& (0+255)
  2454     009B  1283               	bcf	3,5	;RP0=0, select bank0
  2455     009C  1303               	bcf	3,6	;RP1=0, select bank0
  2456     009D  00A1               	movwf	log_car_event@event
  2457     009E  3001               	movlw	1
  2458     009F  00A2               	movwf	log_car_event@event+1
  2459     00A0  1683               	bsf	3,5	;RP0=1, select bank3
  2460     00A1  1703               	bsf	3,6	;RP1=1, select bank3
  2461     00A2  0823               	movf	main@speed^(0+384),w
  2462     00A3  1283               	bcf	3,5	;RP0=0, select bank0
  2463     00A4  1303               	bcf	3,6	;RP1=0, select bank0
  2464     00A5  00A3               	movwf	log_car_event@speed
  2465     00A6  160A  118A  2618  120A  118A  	fcall	_log_car_event
  2466                           
  2467                           ;main.c: 55:             log_car_event(event, speed);
  2468     00AB  2A1D               	goto	l5447
  2469     00AC                     l5327:
  2470     00AC  303D               	movlw	61
  2471     00AD  0625               	xorwf	main@key^(0+384),w
  2472     00AE  1D03               	btfss	3,2
  2473     00AF  28B1               	goto	u5841
  2474     00B0  28B2               	goto	u5840
  2475     00B1                     u5841:
  2476     00B1  28E3               	goto	l5337
  2477     00B2                     u5840:
  2478     00B2                     l5329:
  2479     00B2  3006               	movlw	6
  2480     00B3  0221               	subwf	main@gr^(0+384),w
  2481     00B4  1803               	skipnc
  2482     00B5  28B7               	goto	u5851
  2483     00B6  28B8               	goto	u5850
  2484     00B7                     u5851:
  2485     00B7  28E3               	goto	l5337
  2486     00B8                     u5850:
  2487     00B8                     l5331:
  2488                           
  2489                           ;main.c: 57: ;main.c: 58:         else if((key == 0x37 || key == 0x2F) && control_flag =
      +                          = 0x01 )
  2490     00B8  309E               	movlw	(low (main@event| (0+256)))& (0+255)
  2491     00B9  00F2               	movwf	strcpy@dest
  2492     00BA  0821               	movf	main@gr^(0+384),w
  2493     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  2494     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  2495     00BD  00CE               	movwf	??_main
  2496     00BE  074E               	addwf	??_main,w
  2497     00BF  3E90               	addlw	(low (main@gear| (0+256)))& (0+255)
  2498     00C0  0084               	movwf	4
  2499     00C1  1783               	bsf	3,7	;select IRP bank3
  2500     00C2  0800               	movf	0,w
  2501     00C3  00F3               	movwf	strcpy@src
  2502     00C4  0A84               	incf	4,f
  2503     00C5  0800               	movf	0,w
  2504     00C6  0384               	decf	4,f
  2505     00C7  00F4               	movwf	strcpy@src+1
  2506     00C8  160A  118A  2243  120A  118A  	fcall	_strcpy
  2507     00CD                     l5333:
  2508                           
  2509                           ;main.c: 59:         {
  2510     00CD  3001               	movlw	1
  2511     00CE  1683               	bsf	3,5	;RP0=1, select bank3
  2512     00CF  1703               	bsf	3,6	;RP1=1, select bank3
  2513     00D0  07A1               	addwf	main@gr^(0+384),f
  2514     00D1                     l5335:
  2515                           
  2516                           ;main.c: 60:             control_flag = 0x02;
  2517     00D1  309E               	movlw	(low (main@event| (0+256)))& (0+255)
  2518     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  2519     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  2520     00D4  00A1               	movwf	log_car_event@event
  2521     00D5  3001               	movlw	1
  2522     00D6  00A2               	movwf	log_car_event@event+1
  2523     00D7  1683               	bsf	3,5	;RP0=1, select bank3
  2524     00D8  1703               	bsf	3,6	;RP1=1, select bank3
  2525     00D9  0823               	movf	main@speed^(0+384),w
  2526     00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2527     00DB  1303               	bcf	3,6	;RP1=0, select bank0
  2528     00DC  00A3               	movwf	log_car_event@speed
  2529     00DD  160A  118A  2618  120A  118A  	fcall	_log_car_event
  2530                           
  2531                           ;main.c: 61:             reset_flag = 0x11;
  2532     00E2  2A1D               	goto	l5447
  2533     00E3                     l5337:
  2534     00E3  303B               	movlw	59
  2535     00E4  0625               	xorwf	main@key^(0+384),w
  2536     00E5  1D03               	btfss	3,2
  2537     00E6  28E8               	goto	u5861
  2538     00E7  28E9               	goto	u5860
  2539     00E8                     u5861:
  2540     00E8  2906               	goto	l5347
  2541     00E9                     u5860:
  2542     00E9                     l5339:
  2543     00E9  0821               	movf	main@gr^(0+384),w
  2544     00EA  1903               	btfsc	3,2
  2545     00EB  28ED               	goto	u5871
  2546     00EC  28EE               	goto	u5870
  2547     00ED                     u5871:
  2548     00ED  2906               	goto	l5347
  2549     00EE                     u5870:
  2550     00EE                     l5341:
  2551                           
  2552                           ;main.c: 63:             clcd_print("Enter Password", (0x80 + 1));;main.c: 64: 
  2553     00EE  3001               	movlw	1
  2554     00EF  02A1               	subwf	main@gr^(0+384),f
  2555     00F0                     l5343:
  2556                           
  2557                           ;main.c: 65:             clcd_write((0xC0 + 4), 0);
  2558     00F0  309E               	movlw	(low (main@event| (0+256)))& (0+255)
  2559     00F1  00F2               	movwf	strcpy@dest
  2560     00F2  0821               	movf	main@gr^(0+384),w
  2561     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  2562     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  2563     00F5  00CE               	movwf	??_main
  2564     00F6  074E               	addwf	??_main,w
  2565     00F7  3E90               	addlw	(low (main@gear| (0+256)))& (0+255)
  2566     00F8  0084               	movwf	4
  2567     00F9  1783               	bsf	3,7	;select IRP bank3
  2568     00FA  0800               	movf	0,w
  2569     00FB  00F3               	movwf	strcpy@src
  2570     00FC  0A84               	incf	4,f
  2571     00FD  0800               	movf	0,w
  2572     00FE  0384               	decf	4,f
  2573     00FF  00F4               	movwf	strcpy@src+1
  2574     0100  160A  118A  2243  120A  118A  	fcall	_strcpy
  2575     0105  28D1               	goto	l5335
  2576     0106                     l5347:
  2577     0106  3037               	movlw	55
  2578     0107  0625               	xorwf	main@key^(0+384),w
  2579     0108  1903               	btfsc	3,2
  2580     0109  290B               	goto	u5881
  2581     010A  290C               	goto	u5880
  2582     010B                     u5881:
  2583     010B  2912               	goto	l5351
  2584     010C                     u5880:
  2585     010C                     l5349:
  2586     010C  302F               	movlw	47
  2587     010D  0625               	xorwf	main@key^(0+384),w
  2588     010E  1D03               	btfss	3,2
  2589     010F  2911               	goto	u5891
  2590     0110  2912               	goto	u5890
  2591     0111                     u5891:
  2592     0111  2944               	goto	l5367
  2593     0112                     u5890:
  2594     0112                     l5351:
  2595     0112  0324               	decf	main@control_flag^(0+384),w
  2596     0113  1D03               	btfss	3,2
  2597     0114  2916               	goto	u5901
  2598     0115  2917               	goto	u5900
  2599     0116                     u5901:
  2600     0116  2944               	goto	l5367
  2601     0117                     u5900:
  2602     0117                     l5353:
  2603                           
  2604                           ;main.c: 70: ;main.c: 71:         else if(key == 0x80 && control_flag == 0x03)
  2605     0117  3002               	movlw	2
  2606     0118  00A4               	movwf	main@control_flag^(0+384)
  2607                           
  2608                           ;main.c: 72:         {
  2609     0119  3011               	movlw	17
  2610     011A  00A2               	movwf	main@reset_flag^(0+384)
  2611     011B                     l5355:
  2612                           
  2613                           ;main.c: 73:             switch(menu_pos)
  2614     011B  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  2615     0120                     l5357:
  2616                           
  2617                           ;main.c: 74:             {
  2618     0120  30E7               	movlw	low (STR_9| (0+32768))
  2619     0121  00F6               	movwf	clcd_print@str
  2620     0122  3090               	movlw	high (STR_9| (0+32768))
  2621     0123  00F7               	movwf	clcd_print@str+1
  2622     0124  3081               	movlw	129
  2623     0125  00F8               	movwf	clcd_print@addr
  2624     0126  160A  118A  235A  120A  118A  	fcall	_clcd_print
  2625     012B                     l5359:
  2626                           
  2627                           ;main.c: 76:                     clear_clcd_screen();
  2628     012B  01F2               	clrf	clcd_write@mode
  2629     012C  30C4               	movlw	196
  2630     012D  160A  118A  2421  120A  118A  	fcall	_clcd_write
  2631     0132                     l5361:
  2632                           
  2633                           ;main.c: 77:                     log_car_event("VL", speed);
  2634     0132  01F2               	clrf	clcd_write@mode
  2635     0133  300F               	movlw	15
  2636     0134  160A  118A  2421  120A  118A  	fcall	_clcd_write
  2637     0139                     l5363:
  2638                           
  2639                           ;main.c: 78:                     control_flag = 0x05;
  2640     0139  30A5               	movlw	165
  2641     013A  1283               	bcf	3,5	;RP0=0, select bank0
  2642     013B  1303               	bcf	3,6	;RP1=0, select bank0
  2643     013C  00CE               	movwf	??_main
  2644     013D                     u6017:
  2645     013D  0BCE               	decfsz	??_main,f
  2646     013E  293D               	goto	u6017
  2647     013F  2940               	nop2
  2648     0140                     l5365:
  2649                           
  2650                           ;main.c: 79:                     reset_flag = 0x23;
  2651     0140  1283               	bcf	3,5	;RP0=0, select bank0
  2652     0141  1303               	bcf	3,6	;RP1=0, select bank0
  2653     0142  1512               	bsf	18,2	;volatile
  2654                           
  2655                           ;main.c: 80: 
  2656     0143  2A1D               	goto	l5447
  2657     0144                     l5367:
  2658     0144  3080               	movlw	128
  2659     0145  0625               	xorwf	main@key^(0+384),w
  2660     0146  1D03               	btfss	3,2
  2661     0147  2949               	goto	u5911
  2662     0148  294A               	goto	u5910
  2663     0149                     u5911:
  2664     0149  29DF               	goto	l5413
  2665     014A                     u5910:
  2666     014A                     l5369:
  2667     014A  3003               	movlw	3
  2668     014B  0624               	xorwf	main@control_flag^(0+384),w
  2669     014C  1D03               	btfss	3,2
  2670     014D  294F               	goto	u5921
  2671     014E  2950               	goto	u5920
  2672     014F                     u5921:
  2673     014F  29DF               	goto	l5413
  2674     0150                     u5920:
  2675     0150  29CE               	goto	l5411
  2676     0151                     l5373:
  2677                           
  2678                           ;main.c: 87:                 case 2:
  2679     0151  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  2680     0156                     l5375:
  2681                           
  2682                           ;main.c: 88:                     clear_clcd_screen();
  2683     0156  30B2               	movlw	low (STR_10| (0+32768))
  2684     0157  1283               	bcf	3,5	;RP0=0, select bank0
  2685     0158  1303               	bcf	3,6	;RP1=0, select bank0
  2686     0159  00A1               	movwf	log_car_event@event
  2687     015A  3091               	movlw	high (STR_10| (0+32768))
  2688     015B  00A2               	movwf	log_car_event@event+1
  2689     015C  1683               	bsf	3,5	;RP0=1, select bank3
  2690     015D  1703               	bsf	3,6	;RP1=1, select bank3
  2691     015E  0823               	movf	main@speed^(0+384),w
  2692     015F  1283               	bcf	3,5	;RP0=0, select bank0
  2693     0160  1303               	bcf	3,6	;RP1=0, select bank0
  2694     0161  00A3               	movwf	log_car_event@speed
  2695     0162  160A  118A  2618  120A  118A  	fcall	_log_car_event
  2696     0167                     l5377:
  2697                           
  2698                           ;main.c: 89:                     log_car_event("DL", speed);
  2699     0167  3005               	movlw	5
  2700     0168  1683               	bsf	3,5	;RP0=1, select bank3
  2701     0169  1703               	bsf	3,6	;RP1=1, select bank3
  2702     016A  00A4               	movwf	main@control_flag^(0+384)
  2703     016B                     l5379:
  2704                           
  2705                           ;main.c: 90:                     clcd_print("Open", (0x80 + 5));
  2706     016B  3023               	movlw	35
  2707     016C  00A2               	movwf	main@reset_flag^(0+384)
  2708     016D  2940               	goto	l5365
  2709     016E                     l188:	
  2710                           ;main.c: 94:                 case 3:
  2711                           
  2712                           
  2713                           ;main.c: 95:                     clear_clcd_screen();
  2714     016E  3006               	movlw	6
  2715     016F  00A4               	movwf	main@control_flag^(0+384)
  2716     0170                     l5383:
  2717                           
  2718                           ;main.c: 96:                     log_car_event("ST", speed);
  2719     0170  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  2720                           
  2721                           ;main.c: 97:                     control_flag = 0x08;
  2722     0175  2A1D               	goto	l5447
  2723     0176                     l5385:
  2724                           
  2725                           ;main.c: 99:                     TMR2ON = 1;
  2726     0176  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  2727     017B                     l5387:
  2728                           
  2729                           ;main.c: 100:                     break;
  2730     017B  30AF               	movlw	low (STR_11| (0+32768))
  2731     017C  1283               	bcf	3,5	;RP0=0, select bank0
  2732     017D  1303               	bcf	3,6	;RP1=0, select bank0
  2733     017E  00A1               	movwf	log_car_event@event
  2734     017F  3091               	movlw	high (STR_11| (0+32768))
  2735     0180  00A2               	movwf	log_car_event@event+1
  2736     0181  1683               	bsf	3,5	;RP0=1, select bank3
  2737     0182  1703               	bsf	3,6	;RP1=1, select bank3
  2738     0183  0823               	movf	main@speed^(0+384),w
  2739     0184  1283               	bcf	3,5	;RP0=0, select bank0
  2740     0185  1303               	bcf	3,6	;RP1=0, select bank0
  2741     0186  00A3               	movwf	log_car_event@speed
  2742     0187  160A  118A  2618  120A  118A  	fcall	_log_car_event
  2743     018C                     l5389:
  2744                           
  2745                           ;main.c: 101:                 case 4:
  2746     018C  309E               	movlw	low (STR_12| (0+32768))
  2747     018D  00F6               	movwf	clcd_print@str
  2748     018E  3091               	movlw	high (STR_12| (0+32768))
  2749     018F  00F7               	movwf	clcd_print@str+1
  2750     0190  3085               	movlw	133
  2751     0191  00F8               	movwf	clcd_print@addr
  2752     0192  160A  118A  235A  120A  118A  	fcall	_clcd_print
  2753     0197                     l5391:
  2754                           
  2755                           ;main.c: 102:                     control_flag = 0x09;
  2756     0197  307E               	movlw	low (STR_13| (0+32768))
  2757     0198  00F6               	movwf	clcd_print@str
  2758     0199  3091               	movlw	high (STR_13| (0+32768))
  2759     019A  00F7               	movwf	clcd_print@str+1
  2760     019B  30C4               	movlw	196
  2761     019C  00F8               	movwf	clcd_print@addr
  2762     019D  160A  118A  235A  120A  118A  	fcall	_clcd_print
  2763     01A2                     l5393:
  2764                           
  2765                           ;main.c: 103:                     reset_flag = 0x11;
  2766     01A2  3007               	movlw	7
  2767     01A3  1683               	bsf	3,5	;RP0=1, select bank3
  2768     01A4  1703               	bsf	3,6	;RP1=1, select bank3
  2769     01A5  00A4               	movwf	main@control_flag^(0+384)
  2770                           
  2771                           ;main.c: 104:                     clear_clcd_screen();
  2772     01A6  2A1D               	goto	l5447
  2773     01A7                     l5395:
  2774                           
  2775                           ;main.c: 106:                     break;
  2776     01A7  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  2777     01AC                     l5397:
  2778                           
  2779                           ;main.c: 107: 
  2780     01AC  30BE               	movlw	low (STR_14| (0+32768))
  2781     01AD  1283               	bcf	3,5	;RP0=0, select bank0
  2782     01AE  1303               	bcf	3,6	;RP1=0, select bank0
  2783     01AF  00A1               	movwf	log_car_event@event
  2784     01B0  3091               	movlw	high (STR_14| (0+32768))
  2785     01B1  00A2               	movwf	log_car_event@event+1
  2786     01B2  1683               	bsf	3,5	;RP0=1, select bank3
  2787     01B3  1703               	bsf	3,6	;RP1=1, select bank3
  2788     01B4  0823               	movf	main@speed^(0+384),w
  2789     01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2790     01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2791     01B7  00A3               	movwf	log_car_event@speed
  2792     01B8  160A  118A  2618  120A  118A  	fcall	_log_car_event
  2793     01BD                     l5399:
  2794                           
  2795                           ;main.c: 108:             }
  2796     01BD  3008               	movlw	8
  2797     01BE  1683               	bsf	3,5	;RP0=1, select bank3
  2798     01BF  1703               	bsf	3,6	;RP1=1, select bank3
  2799     01C0  00A4               	movwf	main@control_flag^(0+384)
  2800     01C1                     l5401:
  2801                           
  2802                           ;main.c: 109:         }
  2803     01C1  3024               	movlw	36
  2804     01C2  00A2               	movwf	main@reset_flag^(0+384)
  2805     01C3  2940               	goto	l5365
  2806     01C4                     l191:	
  2807                           ;main.c: 112:             clear_clcd_screen();
  2808                           
  2809                           
  2810                           ;main.c: 113:             control_flag = 0x03;
  2811     01C4  3009               	movlw	9
  2812     01C5  00A4               	movwf	main@control_flag^(0+384)
  2813                           
  2814                           ;main.c: 114:             reset_flag = 0x55;
  2815     01C6  3011               	movlw	17
  2816     01C7  00A2               	movwf	main@reset_flag^(0+384)
  2817     01C8                     l5405:
  2818                           
  2819                           ;main.c: 115:             TMR2ON = 1;
  2820     01C8  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  2821     01CD  2940               	goto	l5365
  2822     01CE                     l5411:
  2823     01CE  081D               	movf	main@menu_pos^(0+384),w
  2824                           
  2825                           ; Switch size 1, requested type "simple"
  2826                           ; Number of cases is 5, Range of values is 0 to 4
  2827                           ; switch strategies available:
  2828                           ; Name         Instructions Cycles
  2829                           ; simple_byte           16     9 (average)
  2830                           ; direct_byte           23     8 (fixed)
  2831                           ; jumptable            260     6 (fixed)
  2832                           ;	Chosen strategy is simple_byte
  2833     01CF  3A00               	xorlw	0	; case 0
  2834     01D0  1903               	skipnz
  2835     01D1  2951               	goto	l5373
  2836     01D2  3A01               	xorlw	1	; case 1
  2837     01D3  1903               	skipnz
  2838     01D4  296E               	goto	l188
  2839     01D5  3A03               	xorlw	3	; case 2
  2840     01D6  1903               	skipnz
  2841     01D7  2976               	goto	l5385
  2842     01D8  3A01               	xorlw	1	; case 3
  2843     01D9  1903               	skipnz
  2844     01DA  29A7               	goto	l5395
  2845     01DB  3A07               	xorlw	7	; case 4
  2846     01DC  1903               	skipnz
  2847     01DD  29C4               	goto	l191
  2848     01DE  2A1D               	goto	l5447
  2849     01DF                     l5413:
  2850     01DF  3080               	movlw	128
  2851     01E0  0625               	xorwf	main@key^(0+384),w
  2852     01E1  1D03               	btfss	3,2
  2853     01E2  29E4               	goto	u5931
  2854     01E3  29E5               	goto	u5930
  2855     01E4                     u5931:
  2856     01E4  29F7               	goto	l5425
  2857     01E5                     u5930:
  2858     01E5                     l5415:
  2859     01E5  3005               	movlw	5
  2860     01E6  0624               	xorwf	main@control_flag^(0+384),w
  2861     01E7  1D03               	btfss	3,2
  2862     01E8  29EA               	goto	u5941
  2863     01E9  29EB               	goto	u5940
  2864     01EA                     u5941:
  2865     01EA  29F7               	goto	l5425
  2866     01EB                     u5940:
  2867     01EB                     l5417:
  2868                           
  2869                           ;main.c: 122:             TMR2ON = 1;;main.c: 123:         }
  2870     01EB  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  2871     01F0                     l5419:
  2872                           
  2873                           ;main.c: 124:         else if(key == 0x90 && control_flag == 0x03)
  2874     01F0  3003               	movlw	3
  2875     01F1  1683               	bsf	3,5	;RP0=1, select bank3
  2876     01F2  1703               	bsf	3,6	;RP1=1, select bank3
  2877     01F3  00A4               	movwf	main@control_flag^(0+384)
  2878     01F4                     l5421:
  2879                           
  2880                           ;main.c: 125:         {
  2881     01F4  3055               	movlw	85
  2882     01F5  00A2               	movwf	main@reset_flag^(0+384)
  2883     01F6  2940               	goto	l5365
  2884     01F7                     l5425:
  2885     01F7  3080               	movlw	128
  2886     01F8  0625               	xorwf	main@key^(0+384),w
  2887     01F9  1D03               	btfss	3,2
  2888     01FA  29FC               	goto	u5951
  2889     01FB  29FD               	goto	u5950
  2890     01FC                     u5951:
  2891     01FC  2A04               	goto	l5437
  2892     01FD                     u5950:
  2893     01FD                     l5427:
  2894     01FD  3009               	movlw	9
  2895     01FE  0624               	xorwf	main@control_flag^(0+384),w
  2896     01FF  1D03               	btfss	3,2
  2897     0200  2A02               	goto	u5961
  2898     0201  2A03               	goto	u5960
  2899     0202                     u5961:
  2900     0202  2A04               	goto	l5437
  2901     0203                     u5960:
  2902     0203  29EB               	goto	l5417
  2903     0204                     l5437:
  2904     0204  3090               	movlw	144
  2905     0205  0625               	xorwf	main@key^(0+384),w
  2906     0206  1D03               	btfss	3,2
  2907     0207  2A09               	goto	u5971
  2908     0208  2A0A               	goto	u5970
  2909     0209                     u5971:
  2910     0209  2A1D               	goto	l183
  2911     020A                     u5970:
  2912     020A                     l5439:
  2913     020A  3003               	movlw	3
  2914     020B  0624               	xorwf	main@control_flag^(0+384),w
  2915     020C  1D03               	btfss	3,2
  2916     020D  2A0F               	goto	u5981
  2917     020E  2A10               	goto	u5980
  2918     020F                     u5981:
  2919     020F  2A1D               	goto	l183
  2920     0210                     u5980:
  2921     0210                     l5441:
  2922                           
  2923                           ;main.c: 136: ;main.c: 137:         switch(control_flag)
  2924     0210  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  2925     0215                     l5443:
  2926                           
  2927                           ;main.c: 138:         {
  2928     0215  3001               	movlw	1
  2929     0216  1683               	bsf	3,5	;RP0=1, select bank3
  2930     0217  1703               	bsf	3,6	;RP1=1, select bank3
  2931     0218  00A4               	movwf	main@control_flag^(0+384)
  2932     0219                     l5445:
  2933                           
  2934                           ;main.c: 139:             case 0x01:
  2935     0219  1283               	bcf	3,5	;RP0=0, select bank0
  2936     021A  1303               	bcf	3,6	;RP1=0, select bank0
  2937     021B  1112               	bcf	18,2	;volatile
  2938     021C  2A1D               	goto	l5447
  2939     021D                     l183:
  2940     021D                     l5447:
  2941                           
  2942                           ;main.c: 143:             case 0x02:
  2943     021D  160A  158A  27DB  120A  118A  	fcall	_read_adc
  2944     0222  0872               	movf	?_read_adc,w
  2945     0223  1283               	bcf	3,5	;RP0=0, select bank0
  2946     0224  1303               	bcf	3,6	;RP1=0, select bank0
  2947     0225  00CE               	movwf	??_main
  2948     0226  0873               	movf	?_read_adc+1,w
  2949     0227  00CF               	movwf	??_main+1
  2950     0228  01D0               	clrf	??_main+2
  2951     0229  01D1               	clrf	??_main+3
  2952     022A  0851               	movf	??_main+3,w
  2953     022B  00F9               	movwf	___xxtofl@val+3
  2954     022C  0850               	movf	??_main+2,w
  2955     022D  00F8               	movwf	___xxtofl@val+2
  2956     022E  084F               	movf	??_main+1,w
  2957     022F  00F7               	movwf	___xxtofl@val+1
  2958     0230  084E               	movf	??_main,w
  2959     0231  00F6               	movwf	___xxtofl@val
  2960     0232  3000               	movlw	0
  2961     0233  120A  158A  20E1  120A  118A  	fcall	___xxtofl
  2962     0238  0879               	movf	?___xxtofl+3,w
  2963     0239  1283               	bcf	3,5	;RP0=0, select bank0
  2964     023A  1303               	bcf	3,6	;RP1=0, select bank0
  2965     023B  00B1               	movwf	___fldiv@b+3
  2966     023C  0878               	movf	?___xxtofl+2,w
  2967     023D  00B0               	movwf	___fldiv@b+2
  2968     023E  0877               	movf	?___xxtofl+1,w
  2969     023F  00AF               	movwf	___fldiv@b+1
  2970     0240  0876               	movf	?___xxtofl,w
  2971     0241  00AE               	movwf	___fldiv@b
  2972     0242  3041               	movlw	65
  2973     0243  00AD               	movwf	___fldiv@a+3
  2974     0244  3024               	movlw	36
  2975     0245  00AC               	movwf	___fldiv@a+2
  2976     0246  3000               	movlw	0
  2977     0247  00AB               	movwf	___fldiv@a+1
  2978     0248  3000               	movlw	0
  2979     0249  00AA               	movwf	___fldiv@a
  2980     024A  120A  158A  2467  120A  118A  	fcall	___fldiv
  2981     024F  1283               	bcf	3,5	;RP0=0, select bank0
  2982     0250  1303               	bcf	3,6	;RP1=0, select bank0
  2983     0251  082D               	movf	?___fldiv+3,w
  2984     0252  00C7               	movwf	___fltol@f1+3
  2985     0253  082C               	movf	?___fldiv+2,w
  2986     0254  00C6               	movwf	___fltol@f1+2
  2987     0255  082B               	movf	?___fldiv+1,w
  2988     0256  00C5               	movwf	___fltol@f1+1
  2989     0257  082A               	movf	?___fldiv,w
  2990     0258  00C4               	movwf	___fltol@f1
  2991     0259  120A  158A  206B  120A  118A  	fcall	___fltol
  2992     025E  1283               	bcf	3,5	;RP0=0, select bank0
  2993     025F  1303               	bcf	3,6	;RP1=0, select bank0
  2994     0260  0844               	movf	?___fltol,w
  2995     0261  1683               	bsf	3,5	;RP0=1, select bank3
  2996     0262  1703               	bsf	3,6	;RP1=1, select bank3
  2997     0263  00A3               	movwf	main@speed^(0+384)
  2998                           
  2999                           ;main.c: 148:                         clear_clcd_screen();
  3000     0264  2B5E               	goto	l5537
  3001     0265                     l5449:
  3002                           
  3003                           ;main.c: 151:                         TMR2ON = 0;
  3004     0265  309E               	movlw	(low (main@event| (0+256)))& (0+255)
  3005     0266  1283               	bcf	3,5	;RP0=0, select bank0
  3006     0267  1303               	bcf	3,6	;RP1=0, select bank0
  3007     0268  00A2               	movwf	display_dashboard@event
  3008     0269  1683               	bsf	3,5	;RP0=1, select bank3
  3009     026A  1703               	bsf	3,6	;RP1=1, select bank3
  3010     026B  0823               	movf	main@speed^(0+384),w
  3011     026C  1283               	bcf	3,5	;RP0=0, select bank0
  3012     026D  1303               	bcf	3,6	;RP1=0, select bank0
  3013     026E  00A3               	movwf	display_dashboard@speed
  3014     026F  160A  118A  256D  120A  118A  	fcall	_display_dashboard
  3015                           
  3016                           ;main.c: 152:                         break;
  3017     0274  2B78               	goto	l5539
  3018     0275                     l203:	
  3019                           ;main.c: 156:                         clcd_write(0x0C, 0);;main.c: 157:                 
      +                                  _delay((unsigned long)((100)*(20000000/4000000.0)));
  3020                           
  3021                           
  3022                           ;main.c: 158:                         reset_flag = 0x55;
  3023     0275  3001               	movlw	1
  3024     0276  1683               	bsf	3,5	;RP0=1, select bank3
  3025     0277  1703               	bsf	3,6	;RP1=1, select bank3
  3026     0278  00A4               	movwf	main@control_flag^(0+384)
  3027     0279                     l5451:
  3028                           
  3029                           ;main.c: 159:                         TMR2ON = 1;
  3030     0279  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  3031                           
  3032                           ;main.c: 160:                         continue;
  3033     027E  01F2               	clrf	clcd_write@mode
  3034     027F  300C               	movlw	12
  3035     0280  160A  118A  2421  120A  118A  	fcall	_clcd_write
  3036     0285                     l5453:
  3037                           
  3038                           ;main.c: 161:                 }
  3039     0285  30A5               	movlw	165
  3040     0286  1283               	bcf	3,5	;RP0=0, select bank0
  3041     0287  1303               	bcf	3,6	;RP1=0, select bank0
  3042     0288  00CE               	movwf	??_main
  3043     0289                     u6027:
  3044     0289  0BCE               	decfsz	??_main,f
  3045     028A  2A89               	goto	u6027
  3046     028B  2A8C               	nop2
  3047     028C                     l5455:
  3048                           
  3049                           ;main.c: 162:                 break;
  3050     028C  1283               	bcf	3,5	;RP0=0, select bank0
  3051     028D  1303               	bcf	3,6	;RP1=0, select bank0
  3052     028E  1112               	bcf	18,2	;volatile
  3053                           
  3054                           ;main.c: 163:             case 0x03:
  3055     028F  2B78               	goto	l5539
  3056     0290                     l205:	
  3057                           ;main.c: 165:                  if(menu_pos == 0x33)
  3058                           
  3059                           
  3060                           ;main.c: 166:                 {
  3061     0290  3003               	movlw	3
  3062     0291  1683               	bsf	3,5	;RP0=1, select bank3
  3063     0292  1703               	bsf	3,6	;RP1=1, select bank3
  3064     0293  00A4               	movwf	main@control_flag^(0+384)
  3065     0294                     l5457:
  3066                           
  3067                           ;main.c: 167:                     clear_clcd_screen();
  3068     0294  01F2               	clrf	clcd_write@mode
  3069     0295  300C               	movlw	12
  3070     0296  160A  118A  2421  120A  118A  	fcall	_clcd_write
  3071     029B                     l5459:
  3072                           
  3073                           ;main.c: 168:                     control_flag = 0x01;
  3074     029B  30A5               	movlw	165
  3075     029C  1283               	bcf	3,5	;RP0=0, select bank0
  3076     029D  1303               	bcf	3,6	;RP1=0, select bank0
  3077     029E  00CE               	movwf	??_main
  3078     029F                     u6037:
  3079     029F  0BCE               	decfsz	??_main,f
  3080     02A0  2A9F               	goto	u6037
  3081     02A1  2AA2               	nop2
  3082     02A2                     l5461:
  3083                           
  3084                           ;main.c: 169:                     TMR2ON = 0;
  3085     02A2  3055               	movlw	85
  3086     02A3  1683               	bsf	3,5	;RP0=1, select bank3
  3087     02A4  1703               	bsf	3,6	;RP1=1, select bank3
  3088     02A5  00A2               	movwf	main@reset_flag^(0+384)
  3089     02A6                     l5463:
  3090                           
  3091                           ;main.c: 170:                 }
  3092     02A6  1283               	bcf	3,5	;RP0=0, select bank0
  3093     02A7  1303               	bcf	3,6	;RP1=0, select bank0
  3094     02A8  1512               	bsf	18,2	;volatile
  3095                           
  3096                           ;main.c: 171:                 break;
  3097     02A9  2881               	goto	l5321
  3098     02AA                     l5467:
  3099     02AA  0822               	movf	main@reset_flag^(0+384),w
  3100     02AB  1283               	bcf	3,5	;RP0=0, select bank0
  3101     02AC  1303               	bcf	3,6	;RP1=0, select bank0
  3102     02AD  00A2               	movwf	login@reset_flag
  3103     02AE  1683               	bsf	3,5	;RP0=1, select bank3
  3104     02AF  1703               	bsf	3,6	;RP1=1, select bank3
  3105     02B0  0825               	movf	main@key^(0+384),w
  3106     02B1  120A  158A  2631  120A  118A  	fcall	_login
  3107                           
  3108                           ; Switch size 1, requested type "simple"
  3109                           ; Number of cases is 2, Range of values is 51 to 68
  3110                           ; switch strategies available:
  3111                           ; Name         Instructions Cycles
  3112                           ; simple_byte            7     4 (average)
  3113                           ; direct_byte           65    11 (fixed)
  3114                           ; jumptable            263     9 (fixed)
  3115                           ;	Chosen strategy is simple_byte
  3116     02B6  3A33               	xorlw	51	; case 51
  3117     02B7  1903               	skipnz
  3118     02B8  2A75               	goto	l203
  3119     02B9  3A77               	xorlw	119	; case 68
  3120     02BA  1903               	skipnz
  3121     02BB  2A90               	goto	l205
  3122     02BC  2B78               	goto	l5539
  3123     02BD                     l5469:
  3124                           
  3125                           ;main.c: 175:                 if(view_log(key, reset_flag) == 0x33)
  3126     02BD  0822               	movf	main@reset_flag^(0+384),w
  3127     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  3128     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  3129     02C0  00A2               	movwf	menu_screen@reset_flag
  3130     02C1  1683               	bsf	3,5	;RP0=1, select bank3
  3131     02C2  1703               	bsf	3,6	;RP1=1, select bank3
  3132     02C3  0825               	movf	main@key^(0+384),w
  3133     02C4  120A  158A  2197  120A  118A  	fcall	_menu_screen
  3134     02C9  1683               	bsf	3,5	;RP0=1, select bank3
  3135     02CA  1703               	bsf	3,6	;RP1=1, select bank3
  3136     02CB  009D               	movwf	main@menu_pos^(0+384)
  3137     02CC                     l5471:
  3138                           
  3139                           ;main.c: 176:                 {
  3140     02CC  3033               	movlw	51
  3141     02CD  061D               	xorwf	main@menu_pos^(0+384),w
  3142     02CE  1D03               	btfss	3,2
  3143     02CF  2AD1               	goto	u5991
  3144     02D0  2AD2               	goto	u5990
  3145     02D1                     u5991:
  3146     02D1  2B78               	goto	l5539
  3147     02D2                     u5990:
  3148     02D2                     l5473:
  3149                           
  3150                           ;main.c: 177:                     control_flag = 0x01;;main.c: 178:                     
      +                          clear_clcd_screen();
  3151     02D2  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  3152     02D7                     l5475:
  3153                           
  3154                           ;main.c: 179:                     TMR2ON = 0;
  3155     02D7  3001               	movlw	1
  3156     02D8  1683               	bsf	3,5	;RP0=1, select bank3
  3157     02D9  1703               	bsf	3,6	;RP1=1, select bank3
  3158     02DA  00A4               	movwf	main@control_flag^(0+384)
  3159     02DB  2A8C               	goto	l5455
  3160     02DC                     l5479:
  3161                           
  3162                           ;main.c: 186:                 break;
  3163     02DC  0822               	movf	main@reset_flag^(0+384),w
  3164     02DD  1283               	bcf	3,5	;RP0=0, select bank0
  3165     02DE  1303               	bcf	3,6	;RP1=0, select bank0
  3166     02DF  00A2               	movwf	view_log@reset_flag
  3167     02E0  1683               	bsf	3,5	;RP0=1, select bank3
  3168     02E1  1703               	bsf	3,6	;RP1=1, select bank3
  3169     02E2  0825               	movf	main@key^(0+384),w
  3170     02E3  120A  158A  2356  120A  118A  	fcall	_view_log
  3171     02E8  3A33               	xorlw	51
  3172     02E9  1D03               	skipz
  3173     02EA  2AEC               	goto	u6001
  3174     02EB  2AED               	goto	u6000
  3175     02EC                     u6001:
  3176     02EC  2B78               	goto	l5539
  3177     02ED                     u6000:
  3178     02ED                     l5481:
  3179                           
  3180                           ;main.c: 187: ;main.c: 188:             case 0x07:
  3181     02ED  3001               	movlw	1
  3182     02EE  1683               	bsf	3,5	;RP0=1, select bank3
  3183     02EF  1703               	bsf	3,6	;RP1=1, select bank3
  3184     02F0  00A4               	movwf	main@control_flag^(0+384)
  3185     02F1                     l5483:
  3186                           
  3187                           ;main.c: 189:                 download_log();
  3188     02F1  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  3189     02F6  2A8C               	goto	l5455
  3190     02F7                     l5487:
  3191                           
  3192                           ;main.c: 194:                 continue;
  3193     02F7  160A  118A  232D  120A  118A  	fcall	_clear_log
  3194     02FC                     l5489:
  3195                           
  3196                           ;main.c: 195: 
  3197     02FC  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  3198     0301                     l5491:
  3199                           
  3200                           ;main.c: 196:             case 0x08:
  3201     0301  3001               	movlw	1
  3202     0302  1683               	bsf	3,5	;RP0=1, select bank3
  3203     0303  1703               	bsf	3,6	;RP1=1, select bank3
  3204     0304  00A4               	movwf	main@control_flag^(0+384)
  3205                           
  3206                           ;main.c: 197:                 switch(change_time(key, reset_flag))
  3207     0305  2B78               	goto	l5539
  3208     0306                     l5493:
  3209                           
  3210                           ;main.c: 200:                         control_flag = 0x03;
  3211     0306  120A  158A  2253  120A  118A  	fcall	_download_log
  3212     030B                     l5495:
  3213                           
  3214                           ;main.c: 201:                         reset_flag = 0x55;
  3215     030B  3033               	movlw	51
  3216     030C  1283               	bcf	3,5	;RP0=0, select bank0
  3217     030D  1303               	bcf	3,6	;RP1=0, select bank0
  3218     030E  00D0               	movwf	??_main+2
  3219     030F  30BB               	movlw	187
  3220     0310  00CF               	movwf	??_main+1
  3221     0311  30DF               	movlw	223
  3222     0312  00CE               	movwf	??_main
  3223     0313                     u6047:
  3224     0313  0BCE               	decfsz	??_main,f
  3225     0314  2B13               	goto	u6047
  3226     0315  0BCF               	decfsz	??_main+1,f
  3227     0316  2B13               	goto	u6047
  3228     0317  0BD0               	decfsz	??_main+2,f
  3229     0318  2B13               	goto	u6047
  3230     0319                     l5497:
  3231                           
  3232                           ;main.c: 202:                         clear_clcd_screen();
  3233     0319  3003               	movlw	3
  3234     031A  1683               	bsf	3,5	;RP0=1, select bank3
  3235     031B  1703               	bsf	3,6	;RP1=1, select bank3
  3236     031C  00A4               	movwf	main@control_flag^(0+384)
  3237     031D  2AA2               	goto	l5461
  3238     031E                     l215:	
  3239                           ;main.c: 209:                         break;;main.c: 210:                 }
  3240                           
  3241                           
  3242                           ;main.c: 211:                 break;
  3243     031E  3003               	movlw	3
  3244     031F  1683               	bsf	3,5	;RP0=1, select bank3
  3245     0320  1703               	bsf	3,6	;RP1=1, select bank3
  3246     0321  00A4               	movwf	main@control_flag^(0+384)
  3247                           
  3248                           ;main.c: 212: 
  3249     0322  3055               	movlw	85
  3250     0323  00A2               	movwf	main@reset_flag^(0+384)
  3251     0324                     l5503:
  3252                           
  3253                           ;main.c: 213:             case 0x09:
  3254     0324  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  3255     0329  2AA6               	goto	l5463
  3256     032A                     l5515:
  3257     032A  0822               	movf	main@reset_flag^(0+384),w
  3258     032B  1283               	bcf	3,5	;RP0=0, select bank0
  3259     032C  1303               	bcf	3,6	;RP1=0, select bank0
  3260     032D  00A2               	movwf	change_time@reset_flag
  3261     032E  1683               	bsf	3,5	;RP0=1, select bank3
  3262     032F  1703               	bsf	3,6	;RP1=1, select bank3
  3263     0330  0825               	movf	main@key^(0+384),w
  3264     0331  120A  118A  237F  120A  118A  	fcall	_change_time
  3265                           
  3266                           ; Switch size 1, requested type "simple"
  3267                           ; Number of cases is 2, Range of values is 51 to 119
  3268                           ; switch strategies available:
  3269                           ; Name         Instructions Cycles
  3270                           ; simple_byte            7     4 (average)
  3271                           ; direct_byte          218    11 (fixed)
  3272                           ; jumptable            263     9 (fixed)
  3273                           ;	Chosen strategy is simple_byte
  3274     0336  3A33               	xorlw	51	; case 51
  3275     0337  1903               	skipnz
  3276     0338  2AD2               	goto	l5473
  3277     0339  3A44               	xorlw	68	; case 119
  3278     033A  1903               	skipnz
  3279     033B  2B1E               	goto	l215
  3280     033C  2B78               	goto	l5539
  3281     033D                     l5523:
  3282                           
  3283                           ;main.c: 235:     }
  3284     033D  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  3285     0342  2B19               	goto	l5497
  3286     0343                     l5533:
  3287     0343  0825               	movf	main@key^(0+384),w
  3288     0344  1283               	bcf	3,5	;RP0=0, select bank0
  3289     0345  1303               	bcf	3,6	;RP1=0, select bank0
  3290     0346  00CE               	movwf	??_main
  3291     0347  01CF               	clrf	??_main+1
  3292     0348  084E               	movf	??_main,w
  3293     0349  00A2               	movwf	change_password@key
  3294     034A  084F               	movf	??_main+1,w
  3295     034B  00A3               	movwf	change_password@key+1
  3296     034C  1683               	bsf	3,5	;RP0=1, select bank3
  3297     034D  1703               	bsf	3,6	;RP1=1, select bank3
  3298     034E  0822               	movf	main@reset_flag^(0+384),w
  3299     034F  1283               	bcf	3,5	;RP0=0, select bank0
  3300     0350  1303               	bcf	3,6	;RP1=0, select bank0
  3301     0351  00A4               	movwf	change_password@reset_flag
  3302     0352  120A  118A  2659  120A  118A  	fcall	_change_password
  3303                           
  3304                           ; Switch size 1, requested type "simple"
  3305                           ; Number of cases is 2, Range of values is 51 to 119
  3306                           ; switch strategies available:
  3307                           ; Name         Instructions Cycles
  3308                           ; simple_byte            7     4 (average)
  3309                           ; direct_byte          218    11 (fixed)
  3310                           ; jumptable            263     9 (fixed)
  3311                           ;	Chosen strategy is simple_byte
  3312     0357  3A33               	xorlw	51	; case 51
  3313     0358  1903               	skipnz
  3314     0359  2AD2               	goto	l5473
  3315     035A  3A44               	xorlw	68	; case 119
  3316     035B  1903               	skipnz
  3317     035C  2B3D               	goto	l5523
  3318     035D  2B78               	goto	l5539
  3319     035E                     l5537:
  3320     035E  0824               	movf	main@control_flag^(0+384),w
  3321                           
  3322                           ; Switch size 1, requested type "simple"
  3323                           ; Number of cases is 8, Range of values is 1 to 9
  3324                           ; switch strategies available:
  3325                           ; Name         Instructions Cycles
  3326                           ; simple_byte           25    13 (average)
  3327                           ; direct_byte           38    11 (fixed)
  3328                           ; jumptable            263     9 (fixed)
  3329                           ;	Chosen strategy is simple_byte
  3330     035F  3A01               	xorlw	1	; case 1
  3331     0360  1903               	skipnz
  3332     0361  2A65               	goto	l5449
  3333     0362  3A03               	xorlw	3	; case 2
  3334     0363  1903               	skipnz
  3335     0364  2AAA               	goto	l5467
  3336     0365  3A01               	xorlw	1	; case 3
  3337     0366  1903               	skipnz
  3338     0367  2ABD               	goto	l5469
  3339     0368  3A06               	xorlw	6	; case 5
  3340     0369  1903               	skipnz
  3341     036A  2ADC               	goto	l5479
  3342     036B  3A03               	xorlw	3	; case 6
  3343     036C  1903               	skipnz
  3344     036D  2AF7               	goto	l5487
  3345     036E  3A01               	xorlw	1	; case 7
  3346     036F  1903               	skipnz
  3347     0370  2B06               	goto	l5493
  3348     0371  3A0F               	xorlw	15	; case 8
  3349     0372  1903               	skipnz
  3350     0373  2B2A               	goto	l5515
  3351     0374  3A01               	xorlw	1	; case 9
  3352     0375  1903               	skipnz
  3353     0376  2B43               	goto	l5533
  3354     0377  2B78               	goto	l5539
  3355     0378                     l5539:
  3356     0378  1683               	bsf	3,5	;RP0=1, select bank3
  3357     0379  1703               	bsf	3,6	;RP1=1, select bank3
  3358     037A  01A2               	clrf	main@reset_flag^(0+384)
  3359     037B  2881               	goto	l5321
  3360     037C  120A  118A  280C   	ljmp	start
  3361     037F                     __end_of_main:
  3362                           
  3363                           	psect	text1
  3364     0B56                     __ptext1:	
  3365 ;; *************** function _view_log *****************
  3366 ;; Defined at:
  3367 ;;		line 237 in file "car_block_box_def.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  key             1    wreg     unsigned char 
  3370 ;;  reset_flag      1    2[BANK0 ] unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  key             1    6[BANK0 ] unsigned char 
  3373 ;;  i               1    7[BANK0 ] unsigned char 
  3374 ;;  addr            1    5[BANK0 ] unsigned char 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      unsigned char 
  3377 ;; Registers used:
  3378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3384 ;;      Params:         0       1       0       0       0
  3385 ;;      Locals:         0       3       0       0       0
  3386 ;;      Temps:          0       2       0       0       0
  3387 ;;      Totals:         0       6       0       0       0
  3388 ;;Total ram usage:        6 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; Hardware stack levels required when called: 5
  3391 ;; This function calls:
  3392 ;;		___awmod
  3393 ;;		___bmul
  3394 ;;		_clcd_print
  3395 ;;		_clcd_putch
  3396 ;;		_read_at24c04
  3397 ;; This function is called by:
  3398 ;;		_main
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402     0B56                     _view_log:	
  3403                           ;psect for function _view_log
  3404                           
  3405                           
  3406                           ;incstack = 0
  3407                           ; Regs used in _view_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3408                           ;view_log@key stored from wreg
  3409     0B56  1283               	bcf	3,5	;RP0=0, select bank0
  3410     0B57  1303               	bcf	3,6	;RP1=0, select bank0
  3411     0B58  00A6               	movwf	view_log@key
  3412     0B59                     l4711:
  3413                           
  3414                           ;car_block_box_def.c: 237: unsigned char view_log(unsigned char key, unsigned char reset
      +                          _flag);car_block_box_def.c: 238: {;car_block_box_def.c: 240:     clcd_print("View logs",
      +                           (0x80 + 4));
  3415     0B59  3059               	movlw	low (STR_28| (0+32768))
  3416     0B5A  00F6               	movwf	clcd_print@str
  3417     0B5B  3091               	movlw	high (STR_28| (0+32768))
  3418     0B5C  00F7               	movwf	clcd_print@str+1
  3419     0B5D  3084               	movlw	132
  3420     0B5E  00F8               	movwf	clcd_print@addr
  3421     0B5F  160A  118A  235A  120A  158A  	fcall	_clcd_print
  3422     0B64                     l4713:
  3423                           
  3424                           ;car_block_box_def.c: 241:     static unsigned char log_pos = 0;;car_block_box_def.c: 24
      +                          4:     if(reset_flag == 0x23)
  3425     0B64  3023               	movlw	35
  3426     0B65  1283               	bcf	3,5	;RP0=0, select bank0
  3427     0B66  1303               	bcf	3,6	;RP1=0, select bank0
  3428     0B67  0622               	xorwf	view_log@reset_flag,w
  3429     0B68  1D03               	btfss	3,2
  3430     0B69  2B6B               	goto	u4901
  3431     0B6A  2B6C               	goto	u4900
  3432     0B6B                     u4901:
  3433     0B6B  2B6F               	goto	l4719
  3434     0B6C                     u4900:
  3435     0B6C                     l4715:
  3436                           
  3437                           ;car_block_box_def.c: 245:     {;car_block_box_def.c: 246:         log_pos = 0;
  3438     0B6C  01D5               	clrf	view_log@log_pos
  3439     0B6D                     l4717:
  3440                           
  3441                           ;car_block_box_def.c: 247:         return_time = 5;
  3442     0B6D  3005               	movlw	5
  3443     0B6E  00DA               	movwf	_return_time
  3444     0B6F                     l4719:
  3445                           
  3446                           ;car_block_box_def.c: 250:     if(return_time == 0)
  3447     0B6F  085A               	movf	_return_time,w
  3448     0B70  1D03               	btfss	3,2
  3449     0B71  2B73               	goto	u4911
  3450     0B72  2B74               	goto	u4910
  3451     0B73                     u4911:
  3452     0B73  2B76               	goto	l4725
  3453     0B74                     u4910:
  3454     0B74                     l4721:
  3455                           
  3456                           ;car_block_box_def.c: 251:         return 0x33;
  3457     0B74  3033               	movlw	51
  3458     0B75  2C66               	goto	l370
  3459     0B76                     l4725:
  3460                           
  3461                           ;car_block_box_def.c: 253:     if(key == 0x37 )
  3462     0B76  3037               	movlw	55
  3463     0B77  0626               	xorwf	view_log@key,w
  3464     0B78  1D03               	btfss	3,2
  3465     0B79  2B7B               	goto	u4921
  3466     0B7A  2B7C               	goto	u4920
  3467     0B7B                     u4921:
  3468     0B7B  2B8E               	goto	l4735
  3469     0B7C                     u4920:
  3470     0B7C                     l4727:
  3471                           
  3472                           ;car_block_box_def.c: 254:     {;car_block_box_def.c: 255:         return_time = 5;
  3473     0B7C  3005               	movlw	5
  3474     0B7D  00DA               	movwf	_return_time
  3475     0B7E                     l4729:
  3476                           
  3477                           ;car_block_box_def.c: 256:         ++log_pos;
  3478     0B7E  3001               	movlw	1
  3479     0B7F  07D5               	addwf	view_log@log_pos,f
  3480                           
  3481                           ;car_block_box_def.c: 257:         if(log_pos == 10 || log_pos == log_count)
  3482     0B80  300A               	movlw	10
  3483     0B81  0655               	xorwf	view_log@log_pos,w
  3484     0B82  1903               	btfsc	3,2
  3485     0B83  2B85               	goto	u4931
  3486     0B84  2B86               	goto	u4930
  3487     0B85                     u4931:
  3488     0B85  2B8C               	goto	l4733
  3489     0B86                     u4930:
  3490     0B86                     l4731:
  3491     0B86  0855               	movf	view_log@log_pos,w
  3492     0B87  0658               	xorwf	_log_count,w
  3493     0B88  1D03               	skipz
  3494     0B89  2B8B               	goto	u4941
  3495     0B8A  2B8C               	goto	u4940
  3496     0B8B                     u4941:
  3497     0B8B  2B9D               	goto	l4743
  3498     0B8C                     u4940:
  3499     0B8C                     l4733:
  3500                           
  3501                           ;car_block_box_def.c: 258:             log_pos = 0;
  3502     0B8C  01D5               	clrf	view_log@log_pos
  3503     0B8D  2B9D               	goto	l4743
  3504     0B8E                     l4735:
  3505     0B8E  302F               	movlw	47
  3506     0B8F  0626               	xorwf	view_log@key,w
  3507     0B90  1D03               	btfss	3,2
  3508     0B91  2B93               	goto	u4951
  3509     0B92  2B94               	goto	u4950
  3510     0B93                     u4951:
  3511     0B93  2B9D               	goto	l4743
  3512     0B94                     u4950:
  3513     0B94                     l4737:
  3514     0B94  0855               	movf	view_log@log_pos,w
  3515     0B95  1903               	btfsc	3,2
  3516     0B96  2B98               	goto	u4961
  3517     0B97  2B99               	goto	u4960
  3518     0B98                     u4961:
  3519     0B98  2B9D               	goto	l4743
  3520     0B99                     u4960:
  3521     0B99                     l4739:
  3522                           
  3523                           ;car_block_box_def.c: 262:     {;car_block_box_def.c: 263:         return_time = 5;
  3524     0B99  3005               	movlw	5
  3525     0B9A  00DA               	movwf	_return_time
  3526     0B9B                     l4741:
  3527                           
  3528                           ;car_block_box_def.c: 264:         log_pos--;
  3529     0B9B  3001               	movlw	1
  3530     0B9C  02D5               	subwf	view_log@log_pos,f
  3531     0B9D                     l4743:
  3532                           
  3533                           ;car_block_box_def.c: 269:     unsigned char addr = 0x05 + (log_pos * 10);
  3534     0B9D  300A               	movlw	10
  3535     0B9E  00F2               	movwf	___bmul@multiplicand
  3536     0B9F  0855               	movf	view_log@log_pos,w
  3537     0BA0  160A  158A  27ED  120A  158A  	fcall	___bmul
  3538     0BA5  3E05               	addlw	5
  3539     0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  3540     0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  3541     0BA8  00A5               	movwf	view_log@addr
  3542     0BA9                     l4745:
  3543                           
  3544                           ;car_block_box_def.c: 270:     for(unsigned char i = 0; i < 11; i++)
  3545     0BA9  01A7               	clrf	view_log@i
  3546     0BAA                     l4751:
  3547                           
  3548                           ;car_block_box_def.c: 271:         log[i] = read_at24c04(addr + i);
  3549     0BAA  0827               	movf	view_log@i,w
  3550     0BAB  3EAE               	addlw	(low (_log| 0))& (0+255)
  3551     0BAC  0084               	movwf	4
  3552     0BAD  0827               	movf	view_log@i,w
  3553     0BAE  0725               	addwf	view_log@addr,w
  3554     0BAF  160A  118A  2302  120A  158A  	fcall	_read_at24c04
  3555     0BB4  1383               	bcf	3,7	;select IRP bank1
  3556     0BB5  0080               	movwf	0
  3557     0BB6                     l4753:
  3558     0BB6  3001               	movlw	1
  3559     0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  3560     0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  3561     0BB9  07A7               	addwf	view_log@i,f
  3562     0BBA                     l4755:
  3563     0BBA  300B               	movlw	11
  3564     0BBB  0227               	subwf	view_log@i,w
  3565     0BBC  1C03               	skipc
  3566     0BBD  2BBF               	goto	u4971
  3567     0BBE  2BC0               	goto	u4970
  3568     0BBF                     u4971:
  3569     0BBF  2BAA               	goto	l4751
  3570     0BC0                     u4970:
  3571     0BC0                     l4757:
  3572                           
  3573                           ;car_block_box_def.c: 275:     clcd_putch(log_pos % 10 + '0', (0xC0 + 0));
  3574     0BC0  30C0               	movlw	192
  3575     0BC1  00A0               	movwf	clcd_putch@addr
  3576     0BC2  300A               	movlw	10
  3577     0BC3  00F2               	movwf	___awmod@divisor
  3578     0BC4  3000               	movlw	0
  3579     0BC5  00F3               	movwf	___awmod@divisor+1
  3580     0BC6  0855               	movf	view_log@log_pos,w
  3581     0BC7  00A3               	movwf	??_view_log
  3582     0BC8  01A4               	clrf	??_view_log+1
  3583     0BC9  0823               	movf	??_view_log,w
  3584     0BCA  00F4               	movwf	___awmod@dividend
  3585     0BCB  0824               	movf	??_view_log+1,w
  3586     0BCC  00F5               	movwf	___awmod@dividend+1
  3587     0BCD  160A  118A  25C1  120A  158A  	fcall	___awmod
  3588     0BD2  0872               	movf	?___awmod,w
  3589     0BD3  3E30               	addlw	48
  3590     0BD4  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  3591                           
  3592                           ;car_block_box_def.c: 276:     clcd_putch(log[0], (0xC0 + 2));
  3593     0BD9  30C2               	movlw	194
  3594     0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  3595     0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  3596     0BDC  00A0               	movwf	clcd_putch@addr
  3597     0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  3598     0BDE  1303               	bcf	3,6	;RP1=0, select bank1
  3599     0BDF  082E               	movf	_log^(0+128),w
  3600     0BE0  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  3601                           
  3602                           ;car_block_box_def.c: 277:     clcd_putch(log[1], (0xC0 + 3));
  3603     0BE5  30C3               	movlw	195
  3604     0BE6  1283               	bcf	3,5	;RP0=0, select bank0
  3605     0BE7  1303               	bcf	3,6	;RP1=0, select bank0
  3606     0BE8  00A0               	movwf	clcd_putch@addr
  3607     0BE9  1683               	bsf	3,5	;RP0=1, select bank1
  3608     0BEA  1303               	bcf	3,6	;RP1=0, select bank1
  3609     0BEB  082F               	movf	(_log^(0+128)+1),w
  3610     0BEC  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  3611                           
  3612                           ;car_block_box_def.c: 278:     clcd_putch(':', (0xC0 + 4));
  3613     0BF1  30C4               	movlw	196
  3614     0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  3615     0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  3616     0BF4  00A0               	movwf	clcd_putch@addr
  3617     0BF5  303A               	movlw	58
  3618     0BF6  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  3619                           
  3620                           ;car_block_box_def.c: 280:     clcd_putch(log[2], (0xC0 + 5));
  3621     0BFB  30C5               	movlw	197
  3622     0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  3623     0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  3624     0BFE  00A0               	movwf	clcd_putch@addr
  3625     0BFF  1683               	bsf	3,5	;RP0=1, select bank1
  3626     0C00  1303               	bcf	3,6	;RP1=0, select bank1
  3627     0C01  0830               	movf	(_log^(0+128)+2),w
  3628     0C02  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  3629                           
  3630                           ;car_block_box_def.c: 281:     clcd_putch(log[3], (0xC0 + 6));
  3631     0C07  30C6               	movlw	198
  3632     0C08  1283               	bcf	3,5	;RP0=0, select bank0
  3633     0C09  1303               	bcf	3,6	;RP1=0, select bank0
  3634     0C0A  00A0               	movwf	clcd_putch@addr
  3635     0C0B  1683               	bsf	3,5	;RP0=1, select bank1
  3636     0C0C  1303               	bcf	3,6	;RP1=0, select bank1
  3637     0C0D  0831               	movf	(_log^(0+128)+3),w
  3638     0C0E  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  3639                           
  3640                           ;car_block_box_def.c: 282:     clcd_putch(':', (0xC0 + 7));
  3641     0C13  30C7               	movlw	199
  3642     0C14  1283               	bcf	3,5	;RP0=0, select bank0
  3643     0C15  1303               	bcf	3,6	;RP1=0, select bank0
  3644     0C16  00A0               	movwf	clcd_putch@addr
  3645     0C17  303A               	movlw	58
  3646     0C18  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  3647                           
  3648                           ;car_block_box_def.c: 284:     clcd_putch(log[4], (0xC0 + 8));
  3649     0C1D  30C8               	movlw	200
  3650     0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  3651     0C1F  1303               	bcf	3,6	;RP1=0, select bank0
  3652     0C20  00A0               	movwf	clcd_putch@addr
  3653     0C21  1683               	bsf	3,5	;RP0=1, select bank1
  3654     0C22  1303               	bcf	3,6	;RP1=0, select bank1
  3655     0C23  0832               	movf	(_log^(0+128)+4),w
  3656     0C24  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  3657                           
  3658                           ;car_block_box_def.c: 285:     clcd_putch(log[5], (0xC0 + 9));
  3659     0C29  30C9               	movlw	201
  3660     0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  3661     0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  3662     0C2C  00A0               	movwf	clcd_putch@addr
  3663     0C2D  1683               	bsf	3,5	;RP0=1, select bank1
  3664     0C2E  1303               	bcf	3,6	;RP1=0, select bank1
  3665     0C2F  0833               	movf	(_log^(0+128)+5),w
  3666     0C30  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  3667                           
  3668                           ;car_block_box_def.c: 287:     clcd_putch(log[6], (0xC0 + 11));
  3669     0C35  30CB               	movlw	203
  3670     0C36  1283               	bcf	3,5	;RP0=0, select bank0
  3671     0C37  1303               	bcf	3,6	;RP1=0, select bank0
  3672     0C38  00A0               	movwf	clcd_putch@addr
  3673     0C39  1683               	bsf	3,5	;RP0=1, select bank1
  3674     0C3A  1303               	bcf	3,6	;RP1=0, select bank1
  3675     0C3B  0834               	movf	(_log^(0+128)+6),w
  3676     0C3C  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  3677                           
  3678                           ;car_block_box_def.c: 288:     clcd_putch(log[7], (0xC0 + 12));
  3679     0C41  30CC               	movlw	204
  3680     0C42  1283               	bcf	3,5	;RP0=0, select bank0
  3681     0C43  1303               	bcf	3,6	;RP1=0, select bank0
  3682     0C44  00A0               	movwf	clcd_putch@addr
  3683     0C45  1683               	bsf	3,5	;RP0=1, select bank1
  3684     0C46  1303               	bcf	3,6	;RP1=0, select bank1
  3685     0C47  0835               	movf	(_log^(0+128)+7),w
  3686     0C48  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  3687                           
  3688                           ;car_block_box_def.c: 290:     clcd_putch(log[8], (0xC0 + 14));
  3689     0C4D  30CE               	movlw	206
  3690     0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  3691     0C4F  1303               	bcf	3,6	;RP1=0, select bank0
  3692     0C50  00A0               	movwf	clcd_putch@addr
  3693     0C51  1683               	bsf	3,5	;RP0=1, select bank1
  3694     0C52  1303               	bcf	3,6	;RP1=0, select bank1
  3695     0C53  0836               	movf	(_log^(0+128)+8),w
  3696     0C54  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  3697                           
  3698                           ;car_block_box_def.c: 291:     clcd_putch(log[9], (0xC0 + 15));
  3699     0C59  30CF               	movlw	207
  3700     0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  3701     0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  3702     0C5C  00A0               	movwf	clcd_putch@addr
  3703     0C5D  1683               	bsf	3,5	;RP0=1, select bank1
  3704     0C5E  1303               	bcf	3,6	;RP1=0, select bank1
  3705     0C5F  0837               	movf	(_log^(0+128)+9),w
  3706     0C60  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  3707     0C65                     l4759:
  3708                           
  3709                           ;car_block_box_def.c: 293:     return 0x32;
  3710     0C65  3032               	movlw	50
  3711     0C66                     l370:
  3712     0C66  0008               	return
  3713     0C67                     __end_of_view_log:
  3714                           
  3715                           	psect	text2
  3716     1243                     __ptext2:	
  3717 ;; *************** function _strcpy *****************
  3718 ;; Defined at:
  3719 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  dest            1    2[COMMON] PTR unsigned char 
  3722 ;;		 -> main@event(3), 
  3723 ;;  src             2    3[COMMON] PTR const unsigned char 
  3724 ;;		 -> STR_8(3), STR_6(3), STR_5(3), STR_4(3), 
  3725 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  d               1    7[COMMON] PTR unsigned char 
  3728 ;;		 -> main@event(3), 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    2[COMMON] PTR unsigned char 
  3731 ;; Registers used:
  3732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3738 ;;      Params:         3       0       0       0       0
  3739 ;;      Locals:         1       0       0       0       0
  3740 ;;      Temps:          2       0       0       0       0
  3741 ;;      Totals:         6       0       0       0       0
  3742 ;;Total ram usage:        6 bytes
  3743 ;; Hardware stack levels used: 2
  3744 ;; Hardware stack levels required when called: 1
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_main
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752     1243                     _strcpy:	
  3753                           ;psect for function _strcpy
  3754                           
  3755     1243                     l4525:	
  3756                           ;incstack = 0
  3757                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3758                           
  3759     1243  0872               	movf	strcpy@dest,w
  3760     1244  00F7               	movwf	strcpy@d
  3761     1245                     l4527:
  3762     1245  0874               	movf	strcpy@src+1,w
  3763     1246  00F6               	movwf	??_strcpy+1
  3764     1247  0873               	movf	strcpy@src,w
  3765     1248  00F5               	movwf	??_strcpy
  3766     1249  0AF3               	incf	strcpy@src,f
  3767     124A  1903               	skipnz
  3768     124B  0AF4               	incf	strcpy@src+1,f
  3769     124C  0876               	movf	??_strcpy+1,w
  3770     124D  1283               	bcf	3,5	;RP0=0, select bank0
  3771     124E  1303               	bcf	3,6	;RP1=0, select bank0
  3772     124F  00FF               	movwf	btemp+1
  3773     1250  0875               	movf	??_strcpy,w
  3774     1251  0084               	movwf	4
  3775     1252  160A  158A  2000  160A  118A  	fcall	stringtab
  3776     1257  00FF               	movwf	btemp+1
  3777     1258  0877               	movf	strcpy@d,w
  3778     1259  0AF7               	incf	strcpy@d,f
  3779     125A  0084               	movwf	4
  3780     125B  087F               	movf	btemp+1,w
  3781     125C  1783               	bsf	3,7	;select IRP bank2
  3782     125D  0080               	movwf	0
  3783     125E  0800               	movf	0,w
  3784     125F  1D03               	btfss	3,2
  3785     1260  2A62               	goto	u4691
  3786     1261  2A63               	goto	u4690
  3787     1262                     u4691:
  3788     1262  2A45               	goto	l4527
  3789     1263                     u4690:
  3790     1263                     l1096:
  3791     1263  0008               	return
  3792     1264                     __end_of_strcpy:
  3793                           
  3794                           	psect	text3
  3795     0800                     __ptext3:	
  3796 ;; *************** function _read_digital_keypad *****************
  3797 ;; Defined at:
  3798 ;;		line 16 in file "digital_keypad.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  key             1    2[COMMON] unsigned char 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      unsigned char 
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3812 ;;      Params:         0       0       0       0       0
  3813 ;;      Locals:         1       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0
  3815 ;;      Totals:         1       0       0       0       0
  3816 ;;Total ram usage:        1 bytes
  3817 ;; Hardware stack levels used: 1
  3818 ;; Hardware stack levels required when called: 1
  3819 ;; This function calls:
  3820 ;;		Nothing
  3821 ;; This function is called by:
  3822 ;;		_main
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826     0800                     _read_digital_keypad:	
  3827                           ;psect for function _read_digital_keypad
  3828                           
  3829     0800                     l4463:	
  3830                           ;incstack = 0
  3831                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
  3832                           
  3833                           
  3834                           ;digital_keypad.c: 18:     static unsigned char once, pre_key, long_press;;digital_keypa
      +                          d.c: 19:     unsigned char key = PORTB & 0x3F;
  3835     0800  1283               	bcf	3,5	;RP0=0, select bank0
  3836     0801  1303               	bcf	3,6	;RP1=0, select bank0
  3837     0802  0806               	movf	6,w	;volatile
  3838     0803  00F2               	movwf	read_digital_keypad@key
  3839     0804                     l4465:
  3840     0804  303F               	movlw	63
  3841     0805  05F2               	andwf	read_digital_keypad@key,f
  3842     0806                     l4467:
  3843                           
  3844                           ;digital_keypad.c: 21:     if(key != 0x3F && once == 0)
  3845     0806  303F               	movlw	63
  3846     0807  0672               	xorwf	read_digital_keypad@key,w
  3847     0808  1903               	btfsc	3,2
  3848     0809  280B               	goto	u4561
  3849     080A  280C               	goto	u4560
  3850     080B                     u4561:
  3851     080B  281B               	goto	l4477
  3852     080C                     u4560:
  3853     080C                     l4469:
  3854     080C  087B               	movf	read_digital_keypad@once,w
  3855     080D  1D03               	btfss	3,2
  3856     080E  2810               	goto	u4571
  3857     080F  2811               	goto	u4570
  3858     0810                     u4571:
  3859     0810  281B               	goto	l4477
  3860     0811                     u4570:
  3861     0811                     l4471:
  3862                           
  3863                           ;digital_keypad.c: 22:     {;digital_keypad.c: 23:         once = 1;
  3864     0811  3001               	movlw	1
  3865     0812  00FB               	movwf	read_digital_keypad@once
  3866     0813                     l4473:
  3867                           
  3868                           ;digital_keypad.c: 24:         pre_key = key;
  3869     0813  0872               	movf	read_digital_keypad@key,w
  3870     0814  1683               	bsf	3,5	;RP0=1, select bank1
  3871     0815  1303               	bcf	3,6	;RP1=0, select bank1
  3872     0816  00AD               	movwf	read_digital_keypad@pre_key^(0+128)
  3873     0817                     l4475:
  3874                           
  3875                           ;digital_keypad.c: 25:         long_press = 0;
  3876     0817  1283               	bcf	3,5	;RP0=0, select bank0
  3877     0818  1303               	bcf	3,6	;RP1=0, select bank0
  3878     0819  01DB               	clrf	read_digital_keypad@long_press
  3879                           
  3880                           ;digital_keypad.c: 26:     }
  3881     081A  2831               	goto	l4489
  3882     081B                     l4477:
  3883     081B  303F               	movlw	63
  3884     081C  0672               	xorwf	read_digital_keypad@key,w
  3885     081D  1D03               	btfss	3,2
  3886     081E  2820               	goto	u4581
  3887     081F  2821               	goto	u4580
  3888     0820                     u4581:
  3889     0820  2831               	goto	l4489
  3890     0821                     u4580:
  3891     0821                     l4479:
  3892     0821  037B               	decf	read_digital_keypad@once,w
  3893     0822  1D03               	btfss	3,2
  3894     0823  2825               	goto	u4591
  3895     0824  2826               	goto	u4590
  3896     0825                     u4591:
  3897     0825  2831               	goto	l4489
  3898     0826                     u4590:
  3899     0826                     l4481:
  3900                           
  3901                           ;digital_keypad.c: 28:     {;digital_keypad.c: 29:         once = 0;
  3902     0826  01FB               	clrf	read_digital_keypad@once
  3903     0827                     l4483:
  3904                           
  3905                           ;digital_keypad.c: 30:         if(long_press < 15)
  3906     0827  300F               	movlw	15
  3907     0828  025B               	subwf	read_digital_keypad@long_press,w
  3908     0829  1803               	skipnc
  3909     082A  282C               	goto	u4601
  3910     082B  282D               	goto	u4600
  3911     082C                     u4601:
  3912     082C  2831               	goto	l4489
  3913     082D                     u4600:
  3914     082D                     l4485:
  3915                           
  3916                           ;digital_keypad.c: 31:             return pre_key;
  3917     082D  1683               	bsf	3,5	;RP0=1, select bank1
  3918     082E  1303               	bcf	3,6	;RP1=0, select bank1
  3919     082F  082D               	movf	read_digital_keypad@pre_key^(0+128),w
  3920     0830  286A               	goto	l265
  3921     0831                     l4489:
  3922                           
  3923                           ;digital_keypad.c: 35:     if(once == 1 && long_press < 16)
  3924     0831  037B               	decf	read_digital_keypad@once,w
  3925     0832  1D03               	btfss	3,2
  3926     0833  2835               	goto	u4611
  3927     0834  2836               	goto	u4610
  3928     0835                     u4611:
  3929     0835  283F               	goto	l4495
  3930     0836                     u4610:
  3931     0836                     l4491:
  3932     0836  3010               	movlw	16
  3933     0837  025B               	subwf	read_digital_keypad@long_press,w
  3934     0838  1803               	skipnc
  3935     0839  283B               	goto	u4621
  3936     083A  283C               	goto	u4620
  3937     083B                     u4621:
  3938     083B  283F               	goto	l4495
  3939     083C                     u4620:
  3940     083C                     l4493:
  3941                           
  3942                           ;digital_keypad.c: 36:         long_press++;
  3943     083C  3001               	movlw	1
  3944     083D  07DB               	addwf	read_digital_keypad@long_press,f
  3945     083E  2869               	goto	l4521
  3946     083F                     l4495:
  3947     083F  037B               	decf	read_digital_keypad@once,w
  3948     0840  1D03               	btfss	3,2
  3949     0841  2843               	goto	u4631
  3950     0842  2844               	goto	u4630
  3951     0843                     u4631:
  3952     0843  2854               	goto	l4509
  3953     0844                     u4630:
  3954     0844                     l4497:
  3955     0844  3010               	movlw	16
  3956     0845  065B               	xorwf	read_digital_keypad@long_press,w
  3957     0846  1D03               	btfss	3,2
  3958     0847  2849               	goto	u4641
  3959     0848  284A               	goto	u4640
  3960     0849                     u4641:
  3961     0849  2854               	goto	l4509
  3962     084A                     u4640:
  3963     084A                     l4499:
  3964     084A  3037               	movlw	55
  3965     084B  0672               	xorwf	read_digital_keypad@key,w
  3966     084C  1D03               	btfss	3,2
  3967     084D  284F               	goto	u4651
  3968     084E  2850               	goto	u4650
  3969     084F                     u4651:
  3970     084F  2854               	goto	l4509
  3971     0850                     u4650:
  3972     0850                     l4501:
  3973                           
  3974                           ;digital_keypad.c: 39:     {;digital_keypad.c: 40:         long_press++;
  3975     0850  3001               	movlw	1
  3976     0851  07DB               	addwf	read_digital_keypad@long_press,f
  3977     0852                     l4503:
  3978                           
  3979                           ;digital_keypad.c: 41:         return 0x80;
  3980     0852  3080               	movlw	128
  3981     0853  286A               	goto	l265
  3982     0854                     l4509:
  3983     0854  037B               	decf	read_digital_keypad@once,w
  3984     0855  1D03               	btfss	3,2
  3985     0856  2858               	goto	u4661
  3986     0857  2859               	goto	u4660
  3987     0858                     u4661:
  3988     0858  2869               	goto	l4521
  3989     0859                     u4660:
  3990     0859                     l4511:
  3991     0859  3010               	movlw	16
  3992     085A  065B               	xorwf	read_digital_keypad@long_press,w
  3993     085B  1D03               	btfss	3,2
  3994     085C  285E               	goto	u4671
  3995     085D  285F               	goto	u4670
  3996     085E                     u4671:
  3997     085E  2869               	goto	l4521
  3998     085F                     u4670:
  3999     085F                     l4513:
  4000     085F  302F               	movlw	47
  4001     0860  0672               	xorwf	read_digital_keypad@key,w
  4002     0861  1D03               	btfss	3,2
  4003     0862  2864               	goto	u4681
  4004     0863  2865               	goto	u4680
  4005     0864                     u4681:
  4006     0864  2869               	goto	l4521
  4007     0865                     u4680:
  4008     0865                     l4515:
  4009                           
  4010                           ;digital_keypad.c: 44:     {;digital_keypad.c: 45:         long_press++;
  4011     0865  3001               	movlw	1
  4012     0866  07DB               	addwf	read_digital_keypad@long_press,f
  4013     0867                     l4517:
  4014                           
  4015                           ;digital_keypad.c: 46:         return 0x90;
  4016     0867  3090               	movlw	144
  4017     0868  286A               	goto	l265
  4018     0869                     l4521:
  4019                           
  4020                           ;digital_keypad.c: 49:     return 0x3F;
  4021     0869  303F               	movlw	63
  4022     086A                     l265:
  4023     086A  0008               	return
  4024     086B                     __end_of_read_digital_keypad:
  4025                           
  4026                           	psect	text4
  4027     1FDB                     __ptext4:	
  4028 ;; *************** function _read_adc *****************
  4029 ;; Defined at:
  4030 ;;		line 12 in file "adc.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  adc_reg_val     2    4[COMMON] unsigned short 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  2    2[COMMON] unsigned short 
  4037 ;; Registers used:
  4038 ;;		wreg
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4044 ;;      Params:         2       0       0       0       0
  4045 ;;      Locals:         2       0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0
  4047 ;;      Totals:         4       0       0       0       0
  4048 ;;Total ram usage:        4 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; Hardware stack levels required when called: 1
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058     1FDB                     _read_adc:	
  4059                           ;psect for function _read_adc
  4060                           
  4061     1FDB                     l4529:	
  4062                           ;incstack = 0
  4063                           ; Regs used in _read_adc: [wreg]
  4064                           
  4065                           
  4066                           ;adc.c: 14:     unsigned short adc_reg_val;;adc.c: 17:     GO = 1;
  4067     1FDB  1283               	bcf	3,5	;RP0=0, select bank0
  4068     1FDC  1303               	bcf	3,6	;RP1=0, select bank0
  4069     1FDD  151F               	bsf	31,2	;volatile
  4070     1FDE                     l242:	
  4071                           ;adc.c: 20:     while (nDONE);
  4072                           
  4073     1FDE  191F               	btfsc	31,2	;volatile
  4074     1FDF  2FE1               	goto	u4701
  4075     1FE0  2FE2               	goto	u4700
  4076     1FE1                     u4701:
  4077     1FE1  2FDE               	goto	l242
  4078     1FE2                     u4700:
  4079     1FE2                     l4531:
  4080                           
  4081                           ;adc.c: 23:     adc_reg_val = (unsigned short)((ADRESH << 8) | ADRESL);
  4082     1FE2  081E               	movf	30,w	;volatile
  4083     1FE3  00F5               	movwf	read_adc@adc_reg_val+1
  4084     1FE4  1683               	bsf	3,5	;RP0=1, select bank1
  4085     1FE5  1303               	bcf	3,6	;RP1=0, select bank1
  4086     1FE6  081E               	movf	30,w	;volatile
  4087     1FE7  00F4               	movwf	read_adc@adc_reg_val
  4088                           
  4089                           ;adc.c: 25:     return adc_reg_val;
  4090     1FE8  0875               	movf	read_adc@adc_reg_val+1,w
  4091     1FE9  00F3               	movwf	?_read_adc+1
  4092     1FEA  0874               	movf	read_adc@adc_reg_val,w
  4093     1FEB  00F2               	movwf	?_read_adc
  4094     1FEC                     l245:
  4095     1FEC  0008               	return
  4096     1FED                     __end_of_read_adc:
  4097                           
  4098                           	psect	text5
  4099     0997                     __ptext5:	
  4100 ;; *************** function _menu_screen *****************
  4101 ;; Defined at:
  4102 ;;		line 193 in file "car_block_box_def.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  key             1    wreg     unsigned char 
  4105 ;;  reset_flag      1    2[BANK0 ] unsigned char 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  key             1    5[BANK0 ] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      unsigned char 
  4110 ;; Registers used:
  4111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4117 ;;      Params:         0       1       0       0       0
  4118 ;;      Locals:         0       1       0       0       0
  4119 ;;      Temps:          0       2       0       0       0
  4120 ;;      Totals:         0       4       0       0       0
  4121 ;;Total ram usage:        4 bytes
  4122 ;; Hardware stack levels used: 1
  4123 ;; Hardware stack levels required when called: 3
  4124 ;; This function calls:
  4125 ;;		_clcd_print
  4126 ;;		_clcd_putch
  4127 ;;		_clear_clcd_screen
  4128 ;; This function is called by:
  4129 ;;		_main
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133     0997                     _menu_screen:	
  4134                           ;psect for function _menu_screen
  4135                           
  4136                           
  4137                           ;incstack = 0
  4138                           ; Regs used in _menu_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4139                           ;menu_screen@key stored from wreg
  4140     0997  1283               	bcf	3,5	;RP0=0, select bank0
  4141     0998  1303               	bcf	3,6	;RP1=0, select bank0
  4142     0999  00A5               	movwf	menu_screen@key
  4143     099A                     l4659:
  4144                           
  4145                           ;car_block_box_def.c: 193: unsigned char menu_screen(unsigned char key, unsigned char re
      +                          set_flag);car_block_box_def.c: 194: {;car_block_box_def.c: 195:     static unsigned char
      +                           menu_pos;;car_block_box_def.c: 197:     if(reset_flag == 0x55)
  4146     099A  3055               	movlw	85
  4147     099B  0622               	xorwf	menu_screen@reset_flag,w
  4148     099C  1D03               	btfss	3,2
  4149     099D  299F               	goto	u4821
  4150     099E  29A0               	goto	u4820
  4151     099F                     u4821:
  4152     099F  29AA               	goto	l4667
  4153     09A0                     u4820:
  4154     09A0                     l4661:
  4155                           
  4156                           ;car_block_box_def.c: 198:     {;car_block_box_def.c: 199:         clear_clcd_screen();
  4157     09A0  160A  158A  27B8  120A  158A  	fcall	_clear_clcd_screen
  4158     09A5                     l4663:
  4159                           
  4160                           ;car_block_box_def.c: 200:         menu_pos = 0;
  4161     09A5  1283               	bcf	3,5	;RP0=0, select bank0
  4162     09A6  1303               	bcf	3,6	;RP1=0, select bank0
  4163     09A7  01D6               	clrf	menu_screen@menu_pos
  4164     09A8                     l4665:
  4165                           
  4166                           ;car_block_box_def.c: 201:         return_time = 6;
  4167     09A8  3006               	movlw	6
  4168     09A9  00DA               	movwf	_return_time
  4169     09AA                     l4667:
  4170                           
  4171                           ;car_block_box_def.c: 203:     if(return_time == 0)
  4172     09AA  085A               	movf	_return_time,w
  4173     09AB  1D03               	btfss	3,2
  4174     09AC  29AE               	goto	u4831
  4175     09AD  29AF               	goto	u4830
  4176     09AE                     u4831:
  4177     09AE  29B1               	goto	l4673
  4178     09AF                     u4830:
  4179     09AF                     l4669:
  4180                           
  4181                           ;car_block_box_def.c: 204:         return 0x33;
  4182     09AF  3033               	movlw	51
  4183     09B0  2A52               	goto	l357
  4184     09B1                     l4673:
  4185                           
  4186                           ;car_block_box_def.c: 206:     if(key == 0x37 && menu_pos > 0)
  4187     09B1  3037               	movlw	55
  4188     09B2  0625               	xorwf	menu_screen@key,w
  4189     09B3  1D03               	btfss	3,2
  4190     09B4  29B6               	goto	u4841
  4191     09B5  29B7               	goto	u4840
  4192     09B6                     u4841:
  4193     09B6  29C8               	goto	l4683
  4194     09B7                     u4840:
  4195     09B7                     l4675:
  4196     09B7  0856               	movf	menu_screen@menu_pos,w
  4197     09B8  1903               	btfsc	3,2
  4198     09B9  29BB               	goto	u4851
  4199     09BA  29BC               	goto	u4850
  4200     09BB                     u4851:
  4201     09BB  29C8               	goto	l4683
  4202     09BC                     u4850:
  4203     09BC                     l4677:
  4204                           
  4205                           ;car_block_box_def.c: 207:     {;car_block_box_def.c: 208:         clear_clcd_screen();
  4206     09BC  160A  158A  27B8  120A  158A  	fcall	_clear_clcd_screen
  4207     09C1                     l4679:
  4208                           
  4209                           ;car_block_box_def.c: 209:         menu_pos--;
  4210     09C1  3001               	movlw	1
  4211     09C2  1283               	bcf	3,5	;RP0=0, select bank0
  4212     09C3  1303               	bcf	3,6	;RP1=0, select bank0
  4213     09C4  02D6               	subwf	menu_screen@menu_pos,f
  4214     09C5                     l4681:
  4215                           
  4216                           ;car_block_box_def.c: 210:         return_time = 5;
  4217     09C5  3005               	movlw	5
  4218     09C6  00DA               	movwf	_return_time
  4219                           
  4220                           ;car_block_box_def.c: 211:     }
  4221     09C7  29DE               	goto	l4693
  4222     09C8                     l4683:
  4223     09C8  302F               	movlw	47
  4224     09C9  0625               	xorwf	menu_screen@key,w
  4225     09CA  1D03               	btfss	3,2
  4226     09CB  29CD               	goto	u4861
  4227     09CC  29CE               	goto	u4860
  4228     09CD                     u4861:
  4229     09CD  29DE               	goto	l4693
  4230     09CE                     u4860:
  4231     09CE                     l4685:
  4232     09CE  3004               	movlw	4
  4233     09CF  0256               	subwf	menu_screen@menu_pos,w
  4234     09D0  1803               	skipnc
  4235     09D1  29D3               	goto	u4871
  4236     09D2  29D4               	goto	u4870
  4237     09D3                     u4871:
  4238     09D3  29DE               	goto	l4693
  4239     09D4                     u4870:
  4240     09D4                     l4687:
  4241                           
  4242                           ;car_block_box_def.c: 213:     {;car_block_box_def.c: 214:         clear_clcd_screen();
  4243     09D4  160A  158A  27B8  120A  158A  	fcall	_clear_clcd_screen
  4244     09D9                     l4689:
  4245                           
  4246                           ;car_block_box_def.c: 215:         menu_pos++;
  4247     09D9  3001               	movlw	1
  4248     09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4249     09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4250     09DC  07D6               	addwf	menu_screen@menu_pos,f
  4251     09DD  29C5               	goto	l4681
  4252     09DE                     l4693:
  4253                           
  4254                           ;car_block_box_def.c: 220:     if (menu_pos < 4)
  4255     09DE  3004               	movlw	4
  4256     09DF  0256               	subwf	menu_screen@menu_pos,w
  4257     09E0  1803               	skipnc
  4258     09E1  29E3               	goto	u4881
  4259     09E2  29E4               	goto	u4880
  4260     09E3                     u4881:
  4261     09E3  2A17               	goto	l4701
  4262     09E4                     u4880:
  4263     09E4                     l4695:
  4264                           
  4265                           ;car_block_box_def.c: 221:     {;car_block_box_def.c: 222:         clcd_putch('*', (0x80
      +                           + 0));
  4266     09E4  3080               	movlw	128
  4267     09E5  00A0               	movwf	clcd_putch@addr
  4268     09E6  302A               	movlw	42
  4269     09E7  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  4270     09EC                     l4697:
  4271                           
  4272                           ;car_block_box_def.c: 223:         clcd_print(menu[menu_pos], (0x80 + 2));
  4273     09EC  1283               	bcf	3,5	;RP0=0, select bank0
  4274     09ED  1303               	bcf	3,6	;RP1=0, select bank0
  4275     09EE  0856               	movf	menu_screen@menu_pos,w
  4276     09EF  00A3               	movwf	??_menu_screen
  4277     09F0  0723               	addwf	??_menu_screen,w
  4278     09F1  3ED9               	addlw	(low (_menu| 0))& (0+255)
  4279     09F2  0084               	movwf	4
  4280     09F3  1383               	bcf	3,7	;select IRP bank1
  4281     09F4  0800               	movf	0,w
  4282     09F5  00F6               	movwf	clcd_print@str
  4283     09F6  0A84               	incf	4,f
  4284     09F7  0800               	movf	0,w
  4285     09F8  0384               	decf	4,f
  4286     09F9  00F7               	movwf	clcd_print@str+1
  4287     09FA  3082               	movlw	130
  4288     09FB  00F8               	movwf	clcd_print@addr
  4289     09FC  160A  118A  235A  120A  158A  	fcall	_clcd_print
  4290     0A01                     l4699:
  4291                           
  4292                           ;car_block_box_def.c: 224:         clcd_print(menu[menu_pos + 1], (0xC0 + 2));
  4293     0A01  1283               	bcf	3,5	;RP0=0, select bank0
  4294     0A02  1303               	bcf	3,6	;RP1=0, select bank0
  4295     0A03  0856               	movf	menu_screen@menu_pos,w
  4296     0A04  00A3               	movwf	??_menu_screen
  4297     0A05  0723               	addwf	??_menu_screen,w
  4298     0A06  3EDB               	addlw	(low ((_menu| 0+2)))& (0+255)
  4299     0A07  0084               	movwf	4
  4300     0A08  1383               	bcf	3,7	;select IRP bank1
  4301     0A09  0800               	movf	0,w
  4302     0A0A  00F6               	movwf	clcd_print@str
  4303     0A0B  0A84               	incf	4,f
  4304     0A0C  0800               	movf	0,w
  4305     0A0D  0384               	decf	4,f
  4306     0A0E  00F7               	movwf	clcd_print@str+1
  4307     0A0F  30C2               	movlw	194
  4308     0A10  00F8               	movwf	clcd_print@addr
  4309     0A11  160A  118A  235A  120A  158A  	fcall	_clcd_print
  4310                           
  4311                           ;car_block_box_def.c: 225:     }
  4312     0A16  2A4F               	goto	l4707
  4313     0A17                     l4701:
  4314     0A17  3004               	movlw	4
  4315     0A18  0656               	xorwf	menu_screen@menu_pos,w
  4316     0A19  1D03               	btfss	3,2
  4317     0A1A  2A1C               	goto	u4891
  4318     0A1B  2A1D               	goto	u4890
  4319     0A1C                     u4891:
  4320     0A1C  2A4F               	goto	l4707
  4321     0A1D                     u4890:
  4322     0A1D                     l4703:
  4323                           
  4324                           ;car_block_box_def.c: 227:     {;car_block_box_def.c: 229:         clcd_print(menu[menu_
      +                          pos - 1], (0x80 + 2));
  4325     0A1D  0856               	movf	menu_screen@menu_pos,w
  4326     0A1E  00A3               	movwf	??_menu_screen
  4327     0A1F  0723               	addwf	??_menu_screen,w
  4328     0A20  3ED7               	addlw	(low ((_menu| 0+254)))& (0+255)
  4329     0A21  0084               	movwf	4
  4330     0A22  1383               	bcf	3,7	;select IRP bank1
  4331     0A23  0800               	movf	0,w
  4332     0A24  00F6               	movwf	clcd_print@str
  4333     0A25  0A84               	incf	4,f
  4334     0A26  0800               	movf	0,w
  4335     0A27  0384               	decf	4,f
  4336     0A28  00F7               	movwf	clcd_print@str+1
  4337     0A29  3082               	movlw	130
  4338     0A2A  00F8               	movwf	clcd_print@addr
  4339     0A2B  160A  118A  235A  120A  158A  	fcall	_clcd_print
  4340                           
  4341                           ;car_block_box_def.c: 230:         clcd_print(menu[menu_pos], (0xC0 + 2));
  4342     0A30  1283               	bcf	3,5	;RP0=0, select bank0
  4343     0A31  1303               	bcf	3,6	;RP1=0, select bank0
  4344     0A32  0856               	movf	menu_screen@menu_pos,w
  4345     0A33  00A3               	movwf	??_menu_screen
  4346     0A34  0723               	addwf	??_menu_screen,w
  4347     0A35  3ED9               	addlw	(low (_menu| 0))& (0+255)
  4348     0A36  0084               	movwf	4
  4349     0A37  1383               	bcf	3,7	;select IRP bank1
  4350     0A38  0800               	movf	0,w
  4351     0A39  00F6               	movwf	clcd_print@str
  4352     0A3A  0A84               	incf	4,f
  4353     0A3B  0800               	movf	0,w
  4354     0A3C  0384               	decf	4,f
  4355     0A3D  00F7               	movwf	clcd_print@str+1
  4356     0A3E  30C2               	movlw	194
  4357     0A3F  00F8               	movwf	clcd_print@addr
  4358     0A40  160A  118A  235A  120A  158A  	fcall	_clcd_print
  4359     0A45                     l4705:
  4360                           
  4361                           ;car_block_box_def.c: 231:         clcd_putch('*', (0xC0 + 0));
  4362     0A45  30C0               	movlw	192
  4363     0A46  1283               	bcf	3,5	;RP0=0, select bank0
  4364     0A47  1303               	bcf	3,6	;RP1=0, select bank0
  4365     0A48  00A0               	movwf	clcd_putch@addr
  4366     0A49  302A               	movlw	42
  4367     0A4A  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  4368     0A4F                     l4707:
  4369                           
  4370                           ;car_block_box_def.c: 233:     return menu_pos;
  4371     0A4F  1283               	bcf	3,5	;RP0=0, select bank0
  4372     0A50  1303               	bcf	3,6	;RP1=0, select bank0
  4373     0A51  0856               	movf	menu_screen@menu_pos,w
  4374     0A52                     l357:
  4375     0A52  0008               	return
  4376     0A53                     __end_of_menu_screen:
  4377                           
  4378                           	psect	text6
  4379     0E31                     __ptext6:	
  4380 ;; *************** function _login *****************
  4381 ;; Defined at:
  4382 ;;		line 91 in file "car_block_box_def.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  key             1    wreg     unsigned char 
  4385 ;;  reset_flag      1    2[BANK0 ] unsigned char 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  key             1   10[BANK0 ] unsigned char 
  4388 ;;  j               1   11[BANK0 ] unsigned char 
  4389 ;;  stored_pwd      4    6[BANK0 ] unsigned char [4]
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      unsigned char 
  4392 ;; Registers used:
  4393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4399 ;;      Params:         0       1       0       0       0
  4400 ;;      Locals:         0       6       0       0       0
  4401 ;;      Temps:          0       3       0       0       0
  4402 ;;      Totals:         0      10       0       0       0
  4403 ;;Total ram usage:       10 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; Hardware stack levels required when called: 5
  4406 ;; This function calls:
  4407 ;;		___awdiv
  4408 ;;		___awmod
  4409 ;;		_clcd_print
  4410 ;;		_clcd_putch
  4411 ;;		_clcd_write
  4412 ;;		_clear_clcd_screen
  4413 ;;		_read_at24c04
  4414 ;;		_strncmp
  4415 ;; This function is called by:
  4416 ;;		_main
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420     0E31                     _login:	
  4421                           ;psect for function _login
  4422                           
  4423                           
  4424                           ;incstack = 0
  4425                           ; Regs used in _login: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4426                           ;login@key stored from wreg
  4427     0E31  1283               	bcf	3,5	;RP0=0, select bank0
  4428     0E32  1303               	bcf	3,6	;RP1=0, select bank0
  4429     0E33  00AA               	movwf	login@key
  4430     0E34                     l4541:
  4431                           
  4432                           ;car_block_box_def.c: 91: unsigned char login(unsigned char key, unsigned char reset_fla
      +                          g);car_block_box_def.c: 92: {;car_block_box_def.c: 93:     static char user_password[4];
      +                          ;car_block_box_def.c: 94:     static unsigned char i, attempt_left;;car_block_box_def.c:
      +                           96:     if(reset_flag == 0x11)
  4433     0E34  3011               	movlw	17
  4434     0E35  0622               	xorwf	login@reset_flag,w
  4435     0E36  1D03               	btfss	3,2
  4436     0E37  2E39               	goto	u4711
  4437     0E38  2E3A               	goto	u4710
  4438     0E39                     u4711:
  4439     0E39  2E49               	goto	l4549
  4440     0E3A                     u4710:
  4441     0E3A                     l4543:
  4442                           
  4443                           ;car_block_box_def.c: 97:     {;car_block_box_def.c: 98:         key = 0x3F;
  4444     0E3A  303F               	movlw	63
  4445     0E3B  00AA               	movwf	login@key
  4446                           
  4447                           ;car_block_box_def.c: 99:         attempt_left = 3;
  4448     0E3C  3003               	movlw	3
  4449     0E3D  1683               	bsf	3,5	;RP0=1, select bank1
  4450     0E3E  1303               	bcf	3,6	;RP1=0, select bank1
  4451     0E3F  00AC               	movwf	login@attempt_left^(0+128)
  4452     0E40                     l4545:
  4453                           
  4454                           ;car_block_box_def.c: 101:         user_password[0] = '\0';
  4455     0E40  01C9               	clrf	login@user_password^(0+128)
  4456                           
  4457                           ;car_block_box_def.c: 102:         user_password[1] = '\0';
  4458     0E41  01CA               	clrf	(login@user_password^(0+128)+1)
  4459                           
  4460                           ;car_block_box_def.c: 103:         user_password[2] = '\0';
  4461     0E42  01CB               	clrf	(login@user_password^(0+128)+2)
  4462                           
  4463                           ;car_block_box_def.c: 104:         user_password[3] = '\0';
  4464     0E43  01CC               	clrf	(login@user_password^(0+128)+3)
  4465                           
  4466                           ;car_block_box_def.c: 105:         i = 0;
  4467     0E44  1283               	bcf	3,5	;RP0=0, select bank0
  4468     0E45  1303               	bcf	3,6	;RP1=0, select bank0
  4469     0E46  01D7               	clrf	login@i
  4470     0E47                     l4547:
  4471                           
  4472                           ;car_block_box_def.c: 106:         return_time = 5;
  4473     0E47  3005               	movlw	5
  4474     0E48  00DA               	movwf	_return_time
  4475     0E49                     l4549:
  4476                           
  4477                           ;car_block_box_def.c: 108:     if(return_time == 0)
  4478     0E49  085A               	movf	_return_time,w
  4479     0E4A  1D03               	btfss	3,2
  4480     0E4B  2E4D               	goto	u4721
  4481     0E4C  2E4E               	goto	u4720
  4482     0E4D                     u4721:
  4483     0E4D  2E50               	goto	l4555
  4484     0E4E                     u4720:
  4485     0E4E                     l4551:
  4486                           
  4487                           ;car_block_box_def.c: 109:     {;car_block_box_def.c: 110:         return 0x33;
  4488     0E4E  3033               	movlw	51
  4489     0E4F  2FFF               	goto	l337
  4490     0E50                     l4555:
  4491                           
  4492                           ;car_block_box_def.c: 113:     _delay((unsigned long)((50)*(20000000/4000.0)));
  4493     0E50  3002               	movlw	2
  4494     0E51  1283               	bcf	3,5	;RP0=0, select bank0
  4495     0E52  1303               	bcf	3,6	;RP1=0, select bank0
  4496     0E53  00A5               	movwf	??_login+2
  4497     0E54  3045               	movlw	69
  4498     0E55  00A4               	movwf	??_login+1
  4499     0E56  30A9               	movlw	169
  4500     0E57  00A3               	movwf	??_login
  4501     0E58                     u6057:
  4502     0E58  0BA3               	decfsz	??_login,f
  4503     0E59  2E58               	goto	u6057
  4504     0E5A  0BA4               	decfsz	??_login+1,f
  4505     0E5B  2E58               	goto	u6057
  4506     0E5C  0BA5               	decfsz	??_login+2,f
  4507     0E5D  2E58               	goto	u6057
  4508     0E5E                     l4557:
  4509                           
  4510                           ;car_block_box_def.c: 114:     if(key == 0x37 && i < 4)
  4511     0E5E  3037               	movlw	55
  4512     0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  4513     0E60  1303               	bcf	3,6	;RP1=0, select bank0
  4514     0E61  062A               	xorwf	login@key,w
  4515     0E62  1D03               	btfss	3,2
  4516     0E63  2E65               	goto	u4731
  4517     0E64  2E66               	goto	u4730
  4518     0E65                     u4731:
  4519     0E65  2E82               	goto	l4569
  4520     0E66                     u4730:
  4521     0E66                     l4559:
  4522     0E66  3004               	movlw	4
  4523     0E67  0257               	subwf	login@i,w
  4524     0E68  1803               	skipnc
  4525     0E69  2E6B               	goto	u4741
  4526     0E6A  2E6C               	goto	u4740
  4527     0E6B                     u4741:
  4528     0E6B  2E82               	goto	l4569
  4529     0E6C                     u4740:
  4530     0E6C                     l4561:
  4531                           
  4532                           ;car_block_box_def.c: 115:     {;car_block_box_def.c: 116:         clcd_putch('*', (0xC0
      +                           + 4 + i));
  4533     0E6C  0857               	movf	login@i,w
  4534     0E6D  3EC4               	addlw	196
  4535     0E6E  00A0               	movwf	clcd_putch@addr
  4536     0E6F  302A               	movlw	42
  4537     0E70  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  4538     0E75                     l4563:
  4539                           
  4540                           ;car_block_box_def.c: 117:         user_password[i] = '1';
  4541     0E75  1283               	bcf	3,5	;RP0=0, select bank0
  4542     0E76  1303               	bcf	3,6	;RP1=0, select bank0
  4543     0E77  0857               	movf	login@i,w
  4544     0E78  3EC9               	addlw	(low (login@user_password| 0))& (0+255)
  4545     0E79  0084               	movwf	4
  4546     0E7A  3031               	movlw	49
  4547     0E7B  1383               	bcf	3,7	;select IRP bank1
  4548     0E7C  0080               	movwf	0
  4549     0E7D                     l4565:
  4550                           
  4551                           ;car_block_box_def.c: 118:         i++;
  4552     0E7D  3001               	movlw	1
  4553     0E7E  07D7               	addwf	login@i,f
  4554     0E7F                     l4567:
  4555                           
  4556                           ;car_block_box_def.c: 119:         return_time = 5;
  4557     0E7F  3005               	movlw	5
  4558     0E80  00DA               	movwf	_return_time
  4559                           
  4560                           ;car_block_box_def.c: 120:     }
  4561     0E81  2EA0               	goto	l4581
  4562     0E82                     l4569:
  4563     0E82  302F               	movlw	47
  4564     0E83  062A               	xorwf	login@key,w
  4565     0E84  1D03               	btfss	3,2
  4566     0E85  2E87               	goto	u4751
  4567     0E86  2E88               	goto	u4750
  4568     0E87                     u4751:
  4569     0E87  2EA0               	goto	l4581
  4570     0E88                     u4750:
  4571     0E88                     l4571:
  4572     0E88  3004               	movlw	4
  4573     0E89  0257               	subwf	login@i,w
  4574     0E8A  1803               	skipnc
  4575     0E8B  2E8D               	goto	u4761
  4576     0E8C  2E8E               	goto	u4760
  4577     0E8D                     u4761:
  4578     0E8D  2EA0               	goto	l4581
  4579     0E8E                     u4760:
  4580     0E8E                     l4573:
  4581                           
  4582                           ;car_block_box_def.c: 122:     {;car_block_box_def.c: 123:         clcd_putch('*', (0xC0
      +                           + 4 + i));
  4583     0E8E  0857               	movf	login@i,w
  4584     0E8F  3EC4               	addlw	196
  4585     0E90  00A0               	movwf	clcd_putch@addr
  4586     0E91  302A               	movlw	42
  4587     0E92  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  4588     0E97                     l4575:
  4589                           
  4590                           ;car_block_box_def.c: 124:         user_password[i] = '0';
  4591     0E97  1283               	bcf	3,5	;RP0=0, select bank0
  4592     0E98  1303               	bcf	3,6	;RP1=0, select bank0
  4593     0E99  0857               	movf	login@i,w
  4594     0E9A  3EC9               	addlw	(low (login@user_password| 0))& (0+255)
  4595     0E9B  0084               	movwf	4
  4596     0E9C  3030               	movlw	48
  4597     0E9D  1383               	bcf	3,7	;select IRP bank1
  4598     0E9E  0080               	movwf	0
  4599     0E9F  2E7D               	goto	l4565
  4600     0EA0                     l4581:
  4601                           
  4602                           ;car_block_box_def.c: 129:     if(i == 4)
  4603     0EA0  3004               	movlw	4
  4604     0EA1  0657               	xorwf	login@i,w
  4605     0EA2  1D03               	btfss	3,2
  4606     0EA3  2EA5               	goto	u4771
  4607     0EA4  2EA6               	goto	u4770
  4608     0EA5                     u4771:
  4609     0EA5  2FFE               	goto	l4655
  4610     0EA6                     u4770:
  4611     0EA6                     l4583:
  4612                           
  4613                           ;car_block_box_def.c: 130:     {;car_block_box_def.c: 131:         _delay((unsigned long
      +                          )((1000)*(20000000/4000.0)));
  4614     0EA6  301A               	movlw	26
  4615     0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  4616     0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  4617     0EA9  00A5               	movwf	??_login+2
  4618     0EAA  305E               	movlw	94
  4619     0EAB  00A4               	movwf	??_login+1
  4620     0EAC  306D               	movlw	109
  4621     0EAD  00A3               	movwf	??_login
  4622     0EAE                     u6067:
  4623     0EAE  0BA3               	decfsz	??_login,f
  4624     0EAF  2EAE               	goto	u6067
  4625     0EB0  0BA4               	decfsz	??_login+1,f
  4626     0EB1  2EAE               	goto	u6067
  4627     0EB2  0BA5               	decfsz	??_login+2,f
  4628     0EB3  2EAE               	goto	u6067
  4629     0EB4  2EB5               	nop2
  4630     0EB5                     l4585:
  4631                           
  4632                           ;car_block_box_def.c: 132:         char stored_pwd[4];;car_block_box_def.c: 134:        
      +                           for(unsigned char j = 0; j < 4; j++)
  4633     0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  4634     0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  4635     0EB7  01AB               	clrf	login@j
  4636     0EB8                     l4591:
  4637                           
  4638                           ;car_block_box_def.c: 135:             stored_pwd[j] = read_at24c04(j);
  4639     0EB8  082B               	movf	login@j,w
  4640     0EB9  3E26               	addlw	(low (login@stored_pwd| 0))& (0+255)
  4641     0EBA  0084               	movwf	4
  4642     0EBB  082B               	movf	login@j,w
  4643     0EBC  160A  118A  2302  120A  158A  	fcall	_read_at24c04
  4644     0EC1  1383               	bcf	3,7	;select IRP bank0
  4645     0EC2  0080               	movwf	0
  4646     0EC3                     l4593:
  4647     0EC3  3001               	movlw	1
  4648     0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  4649     0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  4650     0EC6  07AB               	addwf	login@j,f
  4651     0EC7                     l4595:
  4652     0EC7  3004               	movlw	4
  4653     0EC8  022B               	subwf	login@j,w
  4654     0EC9  1C03               	skipc
  4655     0ECA  2ECC               	goto	u4781
  4656     0ECB  2ECD               	goto	u4780
  4657     0ECC                     u4781:
  4658     0ECC  2EB8               	goto	l4591
  4659     0ECD                     u4780:
  4660     0ECD                     l4597:
  4661                           
  4662                           ;car_block_box_def.c: 137:         if(strncmp(stored_pwd, user_password, 4) == 0)
  4663     0ECD  3026               	movlw	(low (login@stored_pwd| 0))& (0+255)
  4664     0ECE  00F2               	movwf	strncmp@l
  4665     0ECF  30C9               	movlw	(low (login@user_password| 0))& (0+255)
  4666     0ED0  00F3               	movwf	strncmp@r
  4667     0ED1  3004               	movlw	4
  4668     0ED2  00F4               	movwf	strncmp@n
  4669     0ED3  3000               	movlw	0
  4670     0ED4  00F5               	movwf	strncmp@n+1
  4671     0ED5  160A  118A  24D5  120A  158A  	fcall	_strncmp
  4672     0EDA  0872               	movf	?_strncmp,w
  4673     0EDB  0473               	iorwf	?_strncmp+1,w
  4674     0EDC  1D03               	btfss	3,2
  4675     0EDD  2EDF               	goto	u4791
  4676     0EDE  2EE0               	goto	u4790
  4677     0EDF                     u4791:
  4678     0EDF  2F0E               	goto	l4613
  4679     0EE0                     u4790:
  4680     0EE0                     l4599:
  4681                           
  4682                           ;car_block_box_def.c: 138:         {;car_block_box_def.c: 139:             clear_clcd_sc
      +                          reen();
  4683     0EE0  160A  158A  27B8  120A  158A  	fcall	_clear_clcd_screen
  4684                           
  4685                           ;car_block_box_def.c: 140:             clcd_write(0x0C, 0);
  4686     0EE5  01F2               	clrf	clcd_write@mode
  4687     0EE6  300C               	movlw	12
  4688     0EE7  160A  118A  2421  120A  158A  	fcall	_clcd_write
  4689     0EEC                     l4601:
  4690                           
  4691                           ;car_block_box_def.c: 141:             _delay((unsigned long)((100)*(20000000/4000000.0)
      +                          ));
  4692     0EEC  30A5               	movlw	165
  4693     0EED  1283               	bcf	3,5	;RP0=0, select bank0
  4694     0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  4695     0EEF  00A3               	movwf	??_login
  4696     0EF0                     u6077:
  4697     0EF0  0BA3               	decfsz	??_login,f
  4698     0EF1  2EF0               	goto	u6077
  4699     0EF2  2EF3               	nop2
  4700     0EF3                     l4603:
  4701                           
  4702                           ;car_block_box_def.c: 142:             clcd_print("Login Success!", (0x80 + 1));
  4703     0EF3  30AB               	movlw	low (STR_21| (0+32768))
  4704     0EF4  00F6               	movwf	clcd_print@str
  4705     0EF5  3090               	movlw	high (STR_21| (0+32768))
  4706     0EF6  00F7               	movwf	clcd_print@str+1
  4707     0EF7  3081               	movlw	129
  4708     0EF8  00F8               	movwf	clcd_print@addr
  4709     0EF9  160A  118A  235A  120A  158A  	fcall	_clcd_print
  4710     0EFE                     l4605:
  4711                           
  4712                           ;car_block_box_def.c: 143:             _delay((unsigned long)((2000)*(20000000/4000.0)))
      +                          ;
  4713     0EFE  3033               	movlw	51
  4714     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4715     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4716     0F01  00A5               	movwf	??_login+2
  4717     0F02  30BB               	movlw	187
  4718     0F03  00A4               	movwf	??_login+1
  4719     0F04  30DF               	movlw	223
  4720     0F05  00A3               	movwf	??_login
  4721     0F06                     u6087:
  4722     0F06  0BA3               	decfsz	??_login,f
  4723     0F07  2F06               	goto	u6087
  4724     0F08  0BA4               	decfsz	??_login+1,f
  4725     0F09  2F06               	goto	u6087
  4726     0F0A  0BA5               	decfsz	??_login+2,f
  4727     0F0B  2F06               	goto	u6087
  4728     0F0C                     l4607:
  4729                           
  4730                           ;car_block_box_def.c: 144:             return 0x44;
  4731     0F0C  3044               	movlw	68
  4732     0F0D  2FFF               	goto	l337
  4733     0F0E                     l4613:
  4734                           
  4735                           ;car_block_box_def.c: 147:         {;car_block_box_def.c: 148:             attempt_left-
      +                          -;
  4736     0F0E  3001               	movlw	1
  4737     0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  4738     0F10  1303               	bcf	3,6	;RP1=0, select bank1
  4739     0F11  02AC               	subwf	login@attempt_left^(0+128),f
  4740                           
  4741                           ;car_block_box_def.c: 150:             if(attempt_left == 0)
  4742     0F12  082C               	movf	login@attempt_left^(0+128),w
  4743     0F13  1D03               	btfss	3,2
  4744     0F14  2F16               	goto	u4801
  4745     0F15  2F17               	goto	u4800
  4746     0F16                     u4801:
  4747     0F16  2F90               	goto	l4631
  4748     0F17                     u4800:
  4749     0F17                     l4615:
  4750                           
  4751                           ;car_block_box_def.c: 151:             {;car_block_box_def.c: 152:                 clear
      +                          _clcd_screen();
  4752     0F17  160A  158A  27B8  120A  158A  	fcall	_clear_clcd_screen
  4753                           
  4754                           ;car_block_box_def.c: 153:                 clcd_write(0x0C, 0);
  4755     0F1C  01F2               	clrf	clcd_write@mode
  4756     0F1D  300C               	movlw	12
  4757     0F1E  160A  118A  2421  120A  158A  	fcall	_clcd_write
  4758     0F23                     l4617:
  4759                           
  4760                           ;car_block_box_def.c: 154:                 _delay((unsigned long)((100)*(20000000/400000
      +                          0.0)));
  4761     0F23  30A5               	movlw	165
  4762     0F24  1283               	bcf	3,5	;RP0=0, select bank0
  4763     0F25  1303               	bcf	3,6	;RP1=0, select bank0
  4764     0F26  00A3               	movwf	??_login
  4765     0F27                     u6097:
  4766     0F27  0BA3               	decfsz	??_login,f
  4767     0F28  2F27               	goto	u6097
  4768     0F29  2F2A               	nop2
  4769     0F2A                     l4619:
  4770                           
  4771                           ;car_block_box_def.c: 155:                 clcd_print("You are blocked", (0x80 + 0));
  4772     0F2A  309B               	movlw	low (STR_22| (0+32768))
  4773     0F2B  00F6               	movwf	clcd_print@str
  4774     0F2C  3090               	movlw	high (STR_22| (0+32768))
  4775     0F2D  00F7               	movwf	clcd_print@str+1
  4776     0F2E  3080               	movlw	128
  4777     0F2F  00F8               	movwf	clcd_print@addr
  4778     0F30  160A  118A  235A  120A  158A  	fcall	_clcd_print
  4779     0F35                     l4621:
  4780                           
  4781                           ;car_block_box_def.c: 156:                 clcd_print("Wait for", (0xC0 + 0));
  4782     0F35  3075               	movlw	low (STR_23| (0+32768))
  4783     0F36  00F6               	movwf	clcd_print@str
  4784     0F37  3091               	movlw	high (STR_23| (0+32768))
  4785     0F38  00F7               	movwf	clcd_print@str+1
  4786     0F39  30C0               	movlw	192
  4787     0F3A  00F8               	movwf	clcd_print@addr
  4788     0F3B  160A  118A  235A  120A  158A  	fcall	_clcd_print
  4789     0F40                     l4623:
  4790                           
  4791                           ;car_block_box_def.c: 157:                 clcd_print("secs", (0xC0 + 12));
  4792     0F40  3094               	movlw	low (STR_24| (0+32768))
  4793     0F41  00F6               	movwf	clcd_print@str
  4794     0F42  3091               	movlw	high (STR_24| (0+32768))
  4795     0F43  00F7               	movwf	clcd_print@str+1
  4796     0F44  30CC               	movlw	204
  4797     0F45  00F8               	movwf	clcd_print@addr
  4798     0F46  160A  118A  235A  120A  158A  	fcall	_clcd_print
  4799     0F4B                     l4625:
  4800                           
  4801                           ;car_block_box_def.c: 160:                 sec = 60;
  4802     0F4B  303C               	movlw	60
  4803     0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  4804     0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  4805     0F4E  00D9               	movwf	_sec
  4806                           
  4807                           ;car_block_box_def.c: 161:                 while(sec)
  4808     0F4F  2F84               	goto	l4629
  4809     0F50                     l4627:
  4810                           
  4811                           ;car_block_box_def.c: 162:                 {;car_block_box_def.c: 163:                  
      +                             clcd_putch(sec/10 + '0', (0xC0 + 9));
  4812     0F50  30C9               	movlw	201
  4813     0F51  00A0               	movwf	clcd_putch@addr
  4814     0F52  300A               	movlw	10
  4815     0F53  00F2               	movwf	___awdiv@divisor
  4816     0F54  3000               	movlw	0
  4817     0F55  00F3               	movwf	___awdiv@divisor+1
  4818     0F56  0859               	movf	_sec,w
  4819     0F57  00A3               	movwf	??_login
  4820     0F58  01A4               	clrf	??_login+1
  4821     0F59  0823               	movf	??_login,w
  4822     0F5A  00F4               	movwf	___awdiv@dividend
  4823     0F5B  0824               	movf	??_login+1,w
  4824     0F5C  00F5               	movwf	___awdiv@dividend+1
  4825     0F5D  160A  118A  26D4  120A  158A  	fcall	___awdiv
  4826     0F62  0872               	movf	?___awdiv,w
  4827     0F63  3E30               	addlw	48
  4828     0F64  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  4829                           
  4830                           ;car_block_box_def.c: 164:                     clcd_putch(sec%10 + '0', (0xC0 + 10));
  4831     0F69  30CA               	movlw	202
  4832     0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  4833     0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  4834     0F6C  00A0               	movwf	clcd_putch@addr
  4835     0F6D  300A               	movlw	10
  4836     0F6E  00F2               	movwf	___awmod@divisor
  4837     0F6F  3000               	movlw	0
  4838     0F70  00F3               	movwf	___awmod@divisor+1
  4839     0F71  0859               	movf	_sec,w
  4840     0F72  00A3               	movwf	??_login
  4841     0F73  01A4               	clrf	??_login+1
  4842     0F74  0823               	movf	??_login,w
  4843     0F75  00F4               	movwf	___awmod@dividend
  4844     0F76  0824               	movf	??_login+1,w
  4845     0F77  00F5               	movwf	___awmod@dividend+1
  4846     0F78  160A  118A  25C1  120A  158A  	fcall	___awmod
  4847     0F7D  0872               	movf	?___awmod,w
  4848     0F7E  3E30               	addlw	48
  4849     0F7F  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  4850     0F84                     l4629:
  4851                           
  4852                           ;car_block_box_def.c: 161:                 while(sec)
  4853     0F84  1283               	bcf	3,5	;RP0=0, select bank0
  4854     0F85  1303               	bcf	3,6	;RP1=0, select bank0
  4855     0F86  0859               	movf	_sec,w
  4856     0F87  1D03               	btfss	3,2
  4857     0F88  2F8A               	goto	u4811
  4858     0F89  2F8B               	goto	u4810
  4859     0F8A                     u4811:
  4860     0F8A  2F50               	goto	l4627
  4861     0F8B                     u4810:
  4862     0F8B                     l349:
  4863                           
  4864                           ;car_block_box_def.c: 166:                 attempt_left = 3;
  4865     0F8B  3003               	movlw	3
  4866     0F8C  1683               	bsf	3,5	;RP0=1, select bank1
  4867     0F8D  1303               	bcf	3,6	;RP1=0, select bank1
  4868     0F8E  00AC               	movwf	login@attempt_left^(0+128)
  4869                           
  4870                           ;car_block_box_def.c: 167:             }
  4871     0F8F  2FD4               	goto	l4641
  4872     0F90                     l4631:
  4873                           
  4874                           ;car_block_box_def.c: 169:             {;car_block_box_def.c: 170:                 clear
      +                          _clcd_screen();
  4875     0F90  160A  158A  27B8  120A  158A  	fcall	_clear_clcd_screen
  4876                           
  4877                           ;car_block_box_def.c: 171:                 clcd_write(0x0C, 0);
  4878     0F95  01F2               	clrf	clcd_write@mode
  4879     0F96  300C               	movlw	12
  4880     0F97  160A  118A  2421  120A  158A  	fcall	_clcd_write
  4881     0F9C                     l4633:
  4882                           
  4883                           ;car_block_box_def.c: 172:                 _delay((unsigned long)((100)*(20000000/400000
      +                          0.0)));
  4884     0F9C  30A5               	movlw	165
  4885     0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  4886     0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  4887     0F9F  00A3               	movwf	??_login
  4888     0FA0                     u6107:
  4889     0FA0  0BA3               	decfsz	??_login,f
  4890     0FA1  2FA0               	goto	u6107
  4891     0FA2  2FA3               	nop2
  4892     0FA3                     l4635:
  4893                           
  4894                           ;car_block_box_def.c: 173:                 clcd_print("Wrong password", (0x80 + 0));
  4895     0FA3  30C9               	movlw	low (STR_25| (0+32768))
  4896     0FA4  00F6               	movwf	clcd_print@str
  4897     0FA5  3090               	movlw	high (STR_25| (0+32768))
  4898     0FA6  00F7               	movwf	clcd_print@str+1
  4899     0FA7  3080               	movlw	128
  4900     0FA8  00F8               	movwf	clcd_print@addr
  4901     0FA9  160A  118A  235A  120A  158A  	fcall	_clcd_print
  4902     0FAE                     l4637:
  4903                           
  4904                           ;car_block_box_def.c: 174:                 clcd_putch(attempt_left + '0', (0xC0 + 1));
  4905     0FAE  30C1               	movlw	193
  4906     0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  4907     0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  4908     0FB1  00A0               	movwf	clcd_putch@addr
  4909     0FB2  1683               	bsf	3,5	;RP0=1, select bank1
  4910     0FB3  1303               	bcf	3,6	;RP1=0, select bank1
  4911     0FB4  082C               	movf	login@attempt_left^(0+128),w
  4912     0FB5  3E30               	addlw	48
  4913     0FB6  160A  118A  21D6  120A  158A  	fcall	_clcd_putch
  4914     0FBB                     l4639:
  4915                           
  4916                           ;car_block_box_def.c: 175:                 clcd_print("attempt left", (0xC0 + 3));
  4917     0FBB  301E               	movlw	low (STR_26| (0+32768))
  4918     0FBC  00F6               	movwf	clcd_print@str
  4919     0FBD  3091               	movlw	high (STR_26| (0+32768))
  4920     0FBE  00F7               	movwf	clcd_print@str+1
  4921     0FBF  30C3               	movlw	195
  4922     0FC0  00F8               	movwf	clcd_print@addr
  4923     0FC1  160A  118A  235A  120A  158A  	fcall	_clcd_print
  4924                           
  4925                           ;car_block_box_def.c: 176:                 _delay((unsigned long)((3000)*(20000000/4000.
      +                          0)));
  4926     0FC6  304D               	movlw	77
  4927     0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  4928     0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  4929     0FC9  00A5               	movwf	??_login+2
  4930     0FCA  3019               	movlw	25
  4931     0FCB  00A4               	movwf	??_login+1
  4932     0FCC  304F               	movlw	79
  4933     0FCD  00A3               	movwf	??_login
  4934     0FCE                     u6117:
  4935     0FCE  0BA3               	decfsz	??_login,f
  4936     0FCF  2FCE               	goto	u6117
  4937     0FD0  0BA4               	decfsz	??_login+1,f
  4938     0FD1  2FCE               	goto	u6117
  4939     0FD2  0BA5               	decfsz	??_login+2,f
  4940     0FD3  2FCE               	goto	u6117
  4941     0FD4                     l4641:
  4942                           
  4943                           ;car_block_box_def.c: 180:             clear_clcd_screen();
  4944     0FD4  160A  158A  27B8  120A  158A  	fcall	_clear_clcd_screen
  4945     0FD9                     l4643:
  4946                           
  4947                           ;car_block_box_def.c: 181:             clcd_print("Enter Password", (0x80 + 1));
  4948     0FD9  30E7               	movlw	low (STR_9| (0+32768))
  4949     0FDA  00F6               	movwf	clcd_print@str
  4950     0FDB  3090               	movlw	high (STR_9| (0+32768))
  4951     0FDC  00F7               	movwf	clcd_print@str+1
  4952     0FDD  3081               	movlw	129
  4953     0FDE  00F8               	movwf	clcd_print@addr
  4954     0FDF  160A  118A  235A  120A  158A  	fcall	_clcd_print
  4955     0FE4                     l4645:
  4956                           
  4957                           ;car_block_box_def.c: 182:             clcd_write((0xC0 + 4), 0);
  4958     0FE4  01F2               	clrf	clcd_write@mode
  4959     0FE5  30C4               	movlw	196
  4960     0FE6  160A  118A  2421  120A  158A  	fcall	_clcd_write
  4961     0FEB                     l4647:
  4962                           
  4963                           ;car_block_box_def.c: 183:             clcd_write(0x0F, 0);
  4964     0FEB  01F2               	clrf	clcd_write@mode
  4965     0FEC  300F               	movlw	15
  4966     0FED  160A  118A  2421  120A  158A  	fcall	_clcd_write
  4967     0FF2                     l4649:
  4968                           
  4969                           ;car_block_box_def.c: 184:             _delay((unsigned long)((100)*(20000000/4000000.0)
      +                          ));
  4970     0FF2  30A5               	movlw	165
  4971     0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  4972     0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  4973     0FF5  00A3               	movwf	??_login
  4974     0FF6                     u6127:
  4975     0FF6  0BA3               	decfsz	??_login,f
  4976     0FF7  2FF6               	goto	u6127
  4977     0FF8  2FF9               	nop2
  4978     0FF9                     l4651:
  4979                           
  4980                           ;car_block_box_def.c: 185:             i = 0;
  4981     0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  4982     0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  4983     0FFB  01D7               	clrf	login@i
  4984     0FFC                     l4653:
  4985                           
  4986                           ;car_block_box_def.c: 186:             return_time = 5;
  4987     0FFC  3005               	movlw	5
  4988     0FFD  00DA               	movwf	_return_time
  4989     0FFE                     l4655:
  4990                           
  4991                           ;car_block_box_def.c: 189:     return 0x32;
  4992     0FFE  3032               	movlw	50
  4993     0FFF                     l337:
  4994     0FFF  0008               	return
  4995     1000                     __end_of_login:
  4996                           
  4997                           	psect	text7
  4998     1618                     __ptext7:	
  4999 ;; *************** function _log_car_event *****************
  5000 ;; Defined at:
  5001 ;;		line 78 in file "car_block_box_def.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  event           2    1[BANK0 ] PTR unsigned char 
  5004 ;;		 -> STR_14(3), STR_11(3), STR_10(3), main@event(3), 
  5005 ;;  speed           1    3[BANK0 ] unsigned char 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;		None
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  1    wreg      void 
  5010 ;; Registers used:
  5011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5017 ;;      Params:         0       3       0       0       0
  5018 ;;      Locals:         0       0       0       0       0
  5019 ;;      Temps:          0       2       0       0       0
  5020 ;;      Totals:         0       5       0       0       0
  5021 ;;Total ram usage:        5 bytes
  5022 ;; Hardware stack levels used: 1
  5023 ;; Hardware stack levels required when called: 6
  5024 ;; This function calls:
  5025 ;;		___awdiv
  5026 ;;		___awmod
  5027 ;;		_get_time
  5028 ;;		_record_log
  5029 ;;		_strncpy
  5030 ;; This function is called by:
  5031 ;;		_main
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035     1618                     _log_car_event:	
  5036                           ;psect for function _log_car_event
  5037                           
  5038     1618                     l4453:	
  5039                           ;incstack = 0
  5040                           ; Regs used in _log_car_event: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5041                           
  5042                           
  5043                           ;car_block_box_def.c: 78: void log_car_event(char event[], unsigned char speed);car_bloc
      +                          k_box_def.c: 79: {;car_block_box_def.c: 80:     get_time();
  5044     1618  160A  118A  2520  160A  118A  	fcall	_get_time
  5045     161D                     l4455:
  5046                           
  5047                           ;car_block_box_def.c: 81:     strncpy(log, time, 6);
  5048     161D  30AE               	movlw	(low (_log| 0))& (0+255)
  5049     161E  00F2               	movwf	strncpy@d
  5050     161F  30C2               	movlw	(low (_time| 0))& (0+255)
  5051     1620  00F3               	movwf	strncpy@s
  5052     1621  3000               	movlw	0
  5053     1622  00F4               	movwf	strncpy@s+1
  5054     1623  3006               	movlw	6
  5055     1624  00F5               	movwf	strncpy@n
  5056     1625  3000               	movlw	0
  5057     1626  00F6               	movwf	strncpy@n+1
  5058     1627  160A  118A  2491  160A  118A  	fcall	_strncpy
  5059     162C                     l4457:
  5060                           
  5061                           ;car_block_box_def.c: 82:     strncpy(&log[6], event, 2);
  5062     162C  30B4               	movlw	(low ((_log| 0+6)))& (0+255)
  5063     162D  00F2               	movwf	strncpy@d
  5064     162E  1283               	bcf	3,5	;RP0=0, select bank0
  5065     162F  1303               	bcf	3,6	;RP1=0, select bank0
  5066     1630  0821               	movf	log_car_event@event,w
  5067     1631  00F3               	movwf	strncpy@s
  5068     1632  0822               	movf	log_car_event@event+1,w
  5069     1633  00F4               	movwf	strncpy@s+1
  5070     1634  3002               	movlw	2
  5071     1635  00F5               	movwf	strncpy@n
  5072     1636  3000               	movlw	0
  5073     1637  00F6               	movwf	strncpy@n+1
  5074     1638  160A  118A  2491  160A  118A  	fcall	_strncpy
  5075                           
  5076                           ;car_block_box_def.c: 83:     log[8] = speed / 10 + '0';
  5077     163D  300A               	movlw	10
  5078     163E  00F2               	movwf	___awdiv@divisor
  5079     163F  3000               	movlw	0
  5080     1640  00F3               	movwf	___awdiv@divisor+1
  5081     1641  1283               	bcf	3,5	;RP0=0, select bank0
  5082     1642  1303               	bcf	3,6	;RP1=0, select bank0
  5083     1643  0823               	movf	log_car_event@speed,w
  5084     1644  00A4               	movwf	??_log_car_event
  5085     1645  01A5               	clrf	??_log_car_event+1
  5086     1646  0824               	movf	??_log_car_event,w
  5087     1647  00F4               	movwf	___awdiv@dividend
  5088     1648  0825               	movf	??_log_car_event+1,w
  5089     1649  00F5               	movwf	___awdiv@dividend+1
  5090     164A  160A  118A  26D4  160A  118A  	fcall	___awdiv
  5091     164F  0872               	movf	?___awdiv,w
  5092     1650  3E30               	addlw	48
  5093     1651  1683               	bsf	3,5	;RP0=1, select bank1
  5094     1652  1303               	bcf	3,6	;RP1=0, select bank1
  5095     1653  00B6               	movwf	(_log^(0+128)+8)
  5096                           
  5097                           ;car_block_box_def.c: 84:     log[9] = speed % 10 + '0';
  5098     1654  300A               	movlw	10
  5099     1655  00F2               	movwf	___awmod@divisor
  5100     1656  3000               	movlw	0
  5101     1657  00F3               	movwf	___awmod@divisor+1
  5102     1658  1283               	bcf	3,5	;RP0=0, select bank0
  5103     1659  1303               	bcf	3,6	;RP1=0, select bank0
  5104     165A  0823               	movf	log_car_event@speed,w
  5105     165B  00A4               	movwf	??_log_car_event
  5106     165C  01A5               	clrf	??_log_car_event+1
  5107     165D  0824               	movf	??_log_car_event,w
  5108     165E  00F4               	movwf	___awmod@dividend
  5109     165F  0825               	movf	??_log_car_event+1,w
  5110     1660  00F5               	movwf	___awmod@dividend+1
  5111     1661  160A  118A  25C1  160A  118A  	fcall	___awmod
  5112     1666  0872               	movf	?___awmod,w
  5113     1667  3E30               	addlw	48
  5114     1668  1683               	bsf	3,5	;RP0=1, select bank1
  5115     1669  1303               	bcf	3,6	;RP1=0, select bank1
  5116     166A  00B7               	movwf	(_log^(0+128)+9)
  5117     166B                     l4459:
  5118                           
  5119                           ;car_block_box_def.c: 85:     log[10] = '\0';
  5120     166B  01B8               	clrf	(_log^(0+128)+10)
  5121     166C                     l4461:
  5122                           
  5123                           ;car_block_box_def.c: 87:     record_log();
  5124     166C  160A  118A  2264  160A  118A  	fcall	_record_log
  5125     1671                     l326:
  5126     1671  0008               	return
  5127     1672                     __end_of_log_car_event:
  5128                           
  5129                           	psect	text8
  5130     1264                     __ptext8:	
  5131 ;; *************** function _record_log *****************
  5132 ;; Defined at:
  5133 ;;		line 66 in file "car_block_box_def.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;  addr            1    0[BANK0 ] unsigned char 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5147 ;;      Params:         0       0       0       0       0
  5148 ;;      Locals:         0       1       0       0       0
  5149 ;;      Temps:          0       0       0       0       0
  5150 ;;      Totals:         0       1       0       0       0
  5151 ;;Total ram usage:        1 bytes
  5152 ;; Hardware stack levels used: 1
  5153 ;; Hardware stack levels required when called: 5
  5154 ;; This function calls:
  5155 ;;		___bmul
  5156 ;;		_write_str_at24c04
  5157 ;; This function is called by:
  5158 ;;		_log_car_event
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162     1264                     _record_log:	
  5163                           ;psect for function _record_log
  5164                           
  5165     1264                     l4299:	
  5166                           ;incstack = 0
  5167                           ; Regs used in _record_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5168                           
  5169                           
  5170                           ;car_block_box_def.c: 69:     if(log_count == 10)
  5171     1264  300A               	movlw	10
  5172     1265  1283               	bcf	3,5	;RP0=0, select bank0
  5173     1266  1303               	bcf	3,6	;RP1=0, select bank0
  5174     1267  0658               	xorwf	_log_count,w
  5175     1268  1D03               	btfss	3,2
  5176     1269  2A6B               	goto	u4271
  5177     126A  2A6C               	goto	u4270
  5178     126B                     u4271:
  5179     126B  2A6D               	goto	l4303
  5180     126C                     u4270:
  5181     126C                     l4301:
  5182                           
  5183                           ;car_block_box_def.c: 70:         log_count = 0;
  5184     126C  01D8               	clrf	_log_count
  5185     126D                     l4303:
  5186                           
  5187                           ;car_block_box_def.c: 72:     char addr = 0x05 + log_count * 10;
  5188     126D  300A               	movlw	10
  5189     126E  00F2               	movwf	___bmul@multiplicand
  5190     126F  0858               	movf	_log_count,w
  5191     1270  160A  158A  27ED  160A  118A  	fcall	___bmul
  5192     1275  3E05               	addlw	5
  5193     1276  1283               	bcf	3,5	;RP0=0, select bank0
  5194     1277  1303               	bcf	3,6	;RP1=0, select bank0
  5195     1278  00A0               	movwf	record_log@addr
  5196     1279                     l4305:
  5197                           
  5198                           ;car_block_box_def.c: 73:     log_count++;
  5199     1279  3001               	movlw	1
  5200     127A  07D8               	addwf	_log_count,f
  5201     127B                     l4307:
  5202                           
  5203                           ;car_block_box_def.c: 74:     write_str_at24c04(addr, log);
  5204     127B  30AE               	movlw	(low (_log| 0))& (0+255)
  5205     127C  00F7               	movwf	write_str_at24c04@data
  5206     127D  3000               	movlw	0
  5207     127E  00F8               	movwf	write_str_at24c04@data+1
  5208     127F  0820               	movf	record_log@addr,w
  5209     1280  160A  118A  22AC  160A  118A  	fcall	_write_str_at24c04
  5210     1285                     l323:
  5211     1285  0008               	return
  5212     1286                     __end_of_record_log:
  5213                           
  5214                           	psect	text9
  5215     1457                     __ptext9:	
  5216 ;; *************** function _init_config *****************
  5217 ;; Defined at:
  5218 ;;		line 12 in file "main.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;		None
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;		None
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  1    wreg      void 
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0, pclath, cstack
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5232 ;;      Params:         0       0       0       0       0
  5233 ;;      Locals:         0       0       0       0       0
  5234 ;;      Temps:          0       0       0       0       0
  5235 ;;      Totals:         0       0       0       0       0
  5236 ;;Total ram usage:        0 bytes
  5237 ;; Hardware stack levels used: 1
  5238 ;; Hardware stack levels required when called: 6
  5239 ;; This function calls:
  5240 ;;		_init_adc
  5241 ;;		_init_clcd
  5242 ;;		_init_digital_keypad
  5243 ;;		_init_ds1307
  5244 ;;		_init_i2c
  5245 ;;		_init_timer2
  5246 ;;		_init_uart
  5247 ;; This function is called by:
  5248 ;;		_main
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252     1457                     _init_config:	
  5253                           ;psect for function _init_config
  5254                           
  5255     1457                     l4443:	
  5256                           ;incstack = 0
  5257                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  5258                           
  5259                           
  5260                           ;main.c: 15: 
  5261     1457  3000               	movlw	0
  5262     1458  1283               	bcf	3,5	;RP0=0, select bank0
  5263     1459  1303               	bcf	3,6	;RP1=0, select bank0
  5264     145A  00A9               	movwf	init_i2c@baud+3
  5265     145B  3001               	movlw	1
  5266     145C  00A8               	movwf	init_i2c@baud+2
  5267     145D  3086               	movlw	134
  5268     145E  00A7               	movwf	init_i2c@baud+1
  5269     145F  30A0               	movlw	160
  5270     1460  00A6               	movwf	init_i2c@baud
  5271     1461  160A  118A  23B9  160A  118A  	fcall	_init_i2c
  5272                           
  5273                           ;main.c: 17: 
  5274     1466  160A  158A  27C9  160A  118A  	fcall	_init_ds1307
  5275                           
  5276                           ;main.c: 19:     PEIE = 1;
  5277     146B  160A  158A  2795  160A  118A  	fcall	_init_clcd
  5278                           
  5279                           ;main.c: 21: }
  5280     1470  160A  158A  274D  160A  118A  	fcall	_init_digital_keypad
  5281     1475                     l4445:
  5282                           
  5283                           ;main.c: 23: void main(void) {
  5284     1475  160A  158A  2753  160A  118A  	fcall	_init_adc
  5285     147A                     l4447:
  5286                           
  5287                           ;main.c: 25:     unsigned char control_flag = 0x01, reset_flag, menu_pos;
  5288     147A  3000               	movlw	0
  5289     147B  1283               	bcf	3,5	;RP0=0, select bank0
  5290     147C  1303               	bcf	3,6	;RP1=0, select bank0
  5291     147D  00A9               	movwf	init_uart@baud+3
  5292     147E  3000               	movlw	0
  5293     147F  00A8               	movwf	init_uart@baud+2
  5294     1480  3025               	movlw	37
  5295     1481  00A7               	movwf	init_uart@baud+1
  5296     1482  3080               	movlw	128
  5297     1483  00A6               	movwf	init_uart@baud
  5298     1484  160A  118A  2389  160A  118A  	fcall	_init_uart
  5299                           
  5300                           ;main.c: 27:     char event[3] = "ON";
  5301     1489  160A  158A  27A0  160A  118A  	fcall	_init_timer2
  5302     148E                     l4449:
  5303                           
  5304                           ;main.c: 29:     unsigned char gr = 0;
  5305     148E  178B               	bsf	11,7	;volatile
  5306     148F                     l4451:
  5307                           
  5308                           ;main.c: 30:     init_config();
  5309     148F  170B               	bsf	11,6	;volatile
  5310     1490                     l164:
  5311     1490  0008               	return
  5312     1491                     __end_of_init_config:
  5313                           
  5314                           	psect	text10
  5315     1389                     __ptext10:	
  5316 ;; *************** function _init_uart *****************
  5317 ;; Defined at:
  5318 ;;		line 4 in file "uart.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  baud            4    6[BANK0 ] unsigned long 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  1    wreg      void 
  5325 ;; Registers used:
  5326 ;;		wreg, status,2, status,0, pclath, cstack
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5332 ;;      Params:         0       4       0       0       0
  5333 ;;      Locals:         0       0       0       0       0
  5334 ;;      Temps:          0       4       0       0       0
  5335 ;;      Totals:         0       8       0       0       0
  5336 ;;Total ram usage:        8 bytes
  5337 ;; Hardware stack levels used: 1
  5338 ;; Hardware stack levels required when called: 2
  5339 ;; This function calls:
  5340 ;;		___lldiv
  5341 ;; This function is called by:
  5342 ;;		_init_config
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346     1389                     _init_uart:	
  5347                           ;psect for function _init_uart
  5348                           
  5349     1389                     l4287:	
  5350                           ;incstack = 0
  5351                           ; Regs used in _init_uart: [wreg+status,2+status,0+pclath+cstack]
  5352                           
  5353                           
  5354                           ;uart.c: 4: void init_uart(unsigned long baud);uart.c: 5: {;uart.c: 7:     SPEN = 1;
  5355     1389  1283               	bcf	3,5	;RP0=0, select bank0
  5356     138A  1303               	bcf	3,6	;RP1=0, select bank0
  5357     138B  1798               	bsf	24,7	;volatile
  5358                           
  5359                           ;uart.c: 10:     CREN = 1;
  5360     138C  1618               	bsf	24,4	;volatile
  5361     138D                     l4289:
  5362                           
  5363                           ;uart.c: 13:     SPBRG = (20000000 / (16 * baud)) - 1;
  5364     138D  0826               	movf	init_uart@baud,w
  5365     138E  00AA               	movwf	??_init_uart
  5366     138F  0827               	movf	init_uart@baud+1,w
  5367     1390  00AB               	movwf	??_init_uart+1
  5368     1391  0828               	movf	init_uart@baud+2,w
  5369     1392  00AC               	movwf	??_init_uart+2
  5370     1393  0829               	movf	init_uart@baud+3,w
  5371     1394  00AD               	movwf	??_init_uart+3
  5372     1395  3004               	movlw	4
  5373     1396                     u4265:
  5374     1396  1003               	clrc
  5375     1397  0DAA               	rlf	??_init_uart,f
  5376     1398  0DAB               	rlf	??_init_uart+1,f
  5377     1399  0DAC               	rlf	??_init_uart+2,f
  5378     139A  0DAD               	rlf	??_init_uart+3,f
  5379     139B                     u4260:
  5380     139B  3EFF               	addlw	-1
  5381     139C  1D03               	skipz
  5382     139D  2B96               	goto	u4265
  5383     139E  082D               	movf	??_init_uart+3,w
  5384     139F  00F5               	movwf	___lldiv@divisor+3
  5385     13A0  082C               	movf	??_init_uart+2,w
  5386     13A1  00F4               	movwf	___lldiv@divisor+2
  5387     13A2  082B               	movf	??_init_uart+1,w
  5388     13A3  00F3               	movwf	___lldiv@divisor+1
  5389     13A4  082A               	movf	??_init_uart,w
  5390     13A5  00F2               	movwf	___lldiv@divisor
  5391     13A6  3001               	movlw	1
  5392     13A7  00F9               	movwf	___lldiv@dividend+3
  5393     13A8  3031               	movlw	49
  5394     13A9  00F8               	movwf	___lldiv@dividend+2
  5395     13AA  302D               	movlw	45
  5396     13AB  00F7               	movwf	___lldiv@dividend+1
  5397     13AC  3000               	movlw	0
  5398     13AD  00F6               	movwf	___lldiv@dividend
  5399     13AE  160A  118A  279A  160A  118A  	fcall	___lldiv
  5400     13B3  0872               	movf	?___lldiv,w
  5401     13B4  3EFF               	addlw	255
  5402     13B5  1683               	bsf	3,5	;RP0=1, select bank1
  5403     13B6  1303               	bcf	3,6	;RP1=0, select bank1
  5404     13B7  0099               	movwf	25	;volatile
  5405     13B8                     l530:
  5406     13B8  0008               	return
  5407     13B9                     __end_of_init_uart:
  5408                           
  5409                           	psect	text11
  5410     1FA0                     __ptext11:	
  5411 ;; *************** function _init_timer2 *****************
  5412 ;; Defined at:
  5413 ;;		line 4 in file "timer.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;		None
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;		None
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		None
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5427 ;;      Params:         0       0       0       0       0
  5428 ;;      Locals:         0       0       0       0       0
  5429 ;;      Temps:          0       0       0       0       0
  5430 ;;      Totals:         0       0       0       0       0
  5431 ;;Total ram usage:        0 bytes
  5432 ;; Hardware stack levels used: 1
  5433 ;; Hardware stack levels required when called: 1
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_init_config
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441     1FA0                     _init_timer2:	
  5442                           ;psect for function _init_timer2
  5443                           
  5444     1FA0                     l4291:	
  5445                           ;incstack = 0
  5446                           ; Regs used in _init_timer2: []
  5447                           
  5448                           
  5449                           ;timer.c: 7:     PR2 = 250;
  5450     1FA0  30FA               	movlw	250
  5451     1FA1  1683               	bsf	3,5	;RP0=1, select bank1
  5452     1FA2  1303               	bcf	3,6	;RP1=0, select bank1
  5453     1FA3  0092               	movwf	18	;volatile
  5454                           
  5455                           ;timer.c: 10:     TMR2IE = 1;
  5456     1FA4  148C               	bsf	12,1	;volatile
  5457                           
  5458                           ;timer.c: 13:     T2CKPS0 = 1;
  5459     1FA5  1283               	bcf	3,5	;RP0=0, select bank0
  5460     1FA6  1303               	bcf	3,6	;RP1=0, select bank0
  5461     1FA7  1412               	bsf	18,0	;volatile
  5462                           
  5463                           ;timer.c: 14:     T2CKPS1 = 1;
  5464     1FA8  1492               	bsf	18,1	;volatile
  5465                           
  5466                           ;timer.c: 17:     TMR2ON = 0;
  5467     1FA9  1112               	bcf	18,2	;volatile
  5468     1FAA                     l513:
  5469     1FAA  0008               	return
  5470     1FAB                     __end_of_init_timer2:
  5471                           
  5472                           	psect	text12
  5473     13B9                     __ptext12:	
  5474 ;; *************** function _init_i2c *****************
  5475 ;; Defined at:
  5476 ;;		line 4 in file "i2c.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  baud            4    6[BANK0 ] unsigned long 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;		None
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		wreg, status,2, status,0, pclath, cstack
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5490 ;;      Params:         0       4       0       0       0
  5491 ;;      Locals:         0       0       0       0       0
  5492 ;;      Temps:          0       4       0       0       0
  5493 ;;      Totals:         0       8       0       0       0
  5494 ;;Total ram usage:        8 bytes
  5495 ;; Hardware stack levels used: 1
  5496 ;; Hardware stack levels required when called: 2
  5497 ;; This function calls:
  5498 ;;		___lldiv
  5499 ;; This function is called by:
  5500 ;;		_init_config
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504     13B9                     _init_i2c:	
  5505                           ;psect for function _init_i2c
  5506                           
  5507     13B9                     l4277:	
  5508                           ;incstack = 0
  5509                           ; Regs used in _init_i2c: [wreg+status,2+status,0+pclath+cstack]
  5510                           
  5511                           
  5512                           ;i2c.c: 4: void init_i2c(unsigned long baud);i2c.c: 5: {;i2c.c: 7:     SSPM3 = 1;
  5513     13B9  1283               	bcf	3,5	;RP0=0, select bank0
  5514     13BA  1303               	bcf	3,6	;RP1=0, select bank0
  5515     13BB  1594               	bsf	20,3	;volatile
  5516     13BC                     l4279:
  5517                           
  5518                           ;i2c.c: 10:     SSPADD = (unsigned char)(20000000 / (4 * baud)) - 1;
  5519     13BC  0826               	movf	init_i2c@baud,w
  5520     13BD  00AA               	movwf	??_init_i2c
  5521     13BE  0827               	movf	init_i2c@baud+1,w
  5522     13BF  00AB               	movwf	??_init_i2c+1
  5523     13C0  0828               	movf	init_i2c@baud+2,w
  5524     13C1  00AC               	movwf	??_init_i2c+2
  5525     13C2  0829               	movf	init_i2c@baud+3,w
  5526     13C3  00AD               	movwf	??_init_i2c+3
  5527     13C4  3002               	movlw	2
  5528     13C5                     u4255:
  5529     13C5  1003               	clrc
  5530     13C6  0DAA               	rlf	??_init_i2c,f
  5531     13C7  0DAB               	rlf	??_init_i2c+1,f
  5532     13C8  0DAC               	rlf	??_init_i2c+2,f
  5533     13C9  0DAD               	rlf	??_init_i2c+3,f
  5534     13CA                     u4250:
  5535     13CA  3EFF               	addlw	-1
  5536     13CB  1D03               	skipz
  5537     13CC  2BC5               	goto	u4255
  5538     13CD  082D               	movf	??_init_i2c+3,w
  5539     13CE  00F5               	movwf	___lldiv@divisor+3
  5540     13CF  082C               	movf	??_init_i2c+2,w
  5541     13D0  00F4               	movwf	___lldiv@divisor+2
  5542     13D1  082B               	movf	??_init_i2c+1,w
  5543     13D2  00F3               	movwf	___lldiv@divisor+1
  5544     13D3  082A               	movf	??_init_i2c,w
  5545     13D4  00F2               	movwf	___lldiv@divisor
  5546     13D5  3001               	movlw	1
  5547     13D6  00F9               	movwf	___lldiv@dividend+3
  5548     13D7  3031               	movlw	49
  5549     13D8  00F8               	movwf	___lldiv@dividend+2
  5550     13D9  302D               	movlw	45
  5551     13DA  00F7               	movwf	___lldiv@dividend+1
  5552     13DB  3000               	movlw	0
  5553     13DC  00F6               	movwf	___lldiv@dividend
  5554     13DD  160A  118A  279A  160A  118A  	fcall	___lldiv
  5555     13E2  0872               	movf	?___lldiv,w
  5556     13E3  3EFF               	addlw	255
  5557     13E4  1683               	bsf	3,5	;RP0=1, select bank1
  5558     13E5  1303               	bcf	3,6	;RP1=0, select bank1
  5559     13E6  0093               	movwf	19	;volatile
  5560     13E7                     l4281:
  5561                           
  5562                           ;i2c.c: 13:     SSPEN = 1;
  5563     13E7  1283               	bcf	3,5	;RP0=0, select bank0
  5564     13E8  1303               	bcf	3,6	;RP1=0, select bank0
  5565     13E9  1694               	bsf	20,5	;volatile
  5566     13EA                     l84:
  5567     13EA  0008               	return
  5568     13EB                     __end_of_init_i2c:
  5569                           
  5570                           	psect	text13
  5571     179A                     __ptext13:	
  5572 ;; *************** function ___lldiv *****************
  5573 ;; Defined at:
  5574 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__lldiv.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  divisor         4    2[COMMON] unsigned long 
  5577 ;;  dividend        4    6[COMMON] unsigned long 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;  quotient        4    1[BANK0 ] unsigned long 
  5580 ;;  counter         1    5[BANK0 ] unsigned char 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  4    2[COMMON] unsigned long 
  5583 ;; Registers used:
  5584 ;;		wreg, status,2, status,0
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5590 ;;      Params:         8       0       0       0       0
  5591 ;;      Locals:         0       5       0       0       0
  5592 ;;      Temps:          0       1       0       0       0
  5593 ;;      Totals:         8       6       0       0       0
  5594 ;;Total ram usage:       14 bytes
  5595 ;; Hardware stack levels used: 1
  5596 ;; Hardware stack levels required when called: 1
  5597 ;; This function calls:
  5598 ;;		Nothing
  5599 ;; This function is called by:
  5600 ;;		_init_i2c
  5601 ;;		_init_uart
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605     179A                     ___lldiv:	
  5606                           ;psect for function ___lldiv
  5607                           
  5608     179A                     l4231:	
  5609                           ;incstack = 0
  5610                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5611                           
  5612     179A  3000               	movlw	0
  5613     179B  1283               	bcf	3,5	;RP0=0, select bank0
  5614     179C  1303               	bcf	3,6	;RP1=0, select bank0
  5615     179D  00A4               	movwf	___lldiv@quotient+3
  5616     179E  3000               	movlw	0
  5617     179F  00A3               	movwf	___lldiv@quotient+2
  5618     17A0  3000               	movlw	0
  5619     17A1  00A2               	movwf	___lldiv@quotient+1
  5620     17A2  3000               	movlw	0
  5621     17A3  00A1               	movwf	___lldiv@quotient
  5622     17A4  0875               	movf	___lldiv@divisor+3,w
  5623     17A5  0474               	iorwf	___lldiv@divisor+2,w
  5624     17A6  0473               	iorwf	___lldiv@divisor+1,w
  5625     17A7  0472               	iorwf	___lldiv@divisor,w
  5626     17A8  1903               	skipnz
  5627     17A9  2FAB               	goto	u4171
  5628     17AA  2FAC               	goto	u4170
  5629     17AB                     u4171:
  5630     17AB  2FF7               	goto	l4251
  5631     17AC                     u4170:
  5632     17AC                     l4233:
  5633     17AC  3001               	movlw	1
  5634     17AD  00A5               	movwf	___lldiv@counter
  5635     17AE  2FBA               	goto	l4237
  5636     17AF                     l4235:
  5637     17AF  3001               	movlw	1
  5638     17B0  00A0               	movwf	??___lldiv
  5639     17B1                     u4185:
  5640     17B1  1003               	clrc
  5641     17B2  0DF2               	rlf	___lldiv@divisor,f
  5642     17B3  0DF3               	rlf	___lldiv@divisor+1,f
  5643     17B4  0DF4               	rlf	___lldiv@divisor+2,f
  5644     17B5  0DF5               	rlf	___lldiv@divisor+3,f
  5645     17B6  0BA0               	decfsz	??___lldiv,f
  5646     17B7  2FB1               	goto	u4185
  5647     17B8  3001               	movlw	1
  5648     17B9  07A5               	addwf	___lldiv@counter,f
  5649     17BA                     l4237:
  5650     17BA  1FF5               	btfss	___lldiv@divisor+3,7
  5651     17BB  2FBD               	goto	u4191
  5652     17BC  2FBE               	goto	u4190
  5653     17BD                     u4191:
  5654     17BD  2FAF               	goto	l4235
  5655     17BE                     u4190:
  5656     17BE                     l4239:
  5657     17BE  3001               	movlw	1
  5658     17BF  00A0               	movwf	??___lldiv
  5659     17C0                     u4205:
  5660     17C0  1003               	clrc
  5661     17C1  0DA1               	rlf	___lldiv@quotient,f
  5662     17C2  0DA2               	rlf	___lldiv@quotient+1,f
  5663     17C3  0DA3               	rlf	___lldiv@quotient+2,f
  5664     17C4  0DA4               	rlf	___lldiv@quotient+3,f
  5665     17C5  0BA0               	decfsz	??___lldiv,f
  5666     17C6  2FC0               	goto	u4205
  5667     17C7                     l4241:
  5668     17C7  0875               	movf	___lldiv@divisor+3,w
  5669     17C8  0279               	subwf	___lldiv@dividend+3,w
  5670     17C9  1D03               	skipz
  5671     17CA  2FD5               	goto	u4215
  5672     17CB  0874               	movf	___lldiv@divisor+2,w
  5673     17CC  0278               	subwf	___lldiv@dividend+2,w
  5674     17CD  1D03               	skipz
  5675     17CE  2FD5               	goto	u4215
  5676     17CF  0873               	movf	___lldiv@divisor+1,w
  5677     17D0  0277               	subwf	___lldiv@dividend+1,w
  5678     17D1  1D03               	skipz
  5679     17D2  2FD5               	goto	u4215
  5680     17D3  0872               	movf	___lldiv@divisor,w
  5681     17D4  0276               	subwf	___lldiv@dividend,w
  5682     17D5                     u4215:
  5683     17D5  1C03               	skipc
  5684     17D6  2FD8               	goto	u4211
  5685     17D7  2FD9               	goto	u4210
  5686     17D8                     u4211:
  5687     17D8  2FE8               	goto	l4247
  5688     17D9                     u4210:
  5689     17D9                     l4243:
  5690     17D9  0872               	movf	___lldiv@divisor,w
  5691     17DA  02F6               	subwf	___lldiv@dividend,f
  5692     17DB  0873               	movf	___lldiv@divisor+1,w
  5693     17DC  1C03               	skipc
  5694     17DD  0F73               	incfsz	___lldiv@divisor+1,w
  5695     17DE  02F7               	subwf	___lldiv@dividend+1,f
  5696     17DF  0874               	movf	___lldiv@divisor+2,w
  5697     17E0  1C03               	skipc
  5698     17E1  0F74               	incfsz	___lldiv@divisor+2,w
  5699     17E2  02F8               	subwf	___lldiv@dividend+2,f
  5700     17E3  0875               	movf	___lldiv@divisor+3,w
  5701     17E4  1C03               	skipc
  5702     17E5  0F75               	incfsz	___lldiv@divisor+3,w
  5703     17E6  02F9               	subwf	___lldiv@dividend+3,f
  5704     17E7                     l4245:
  5705     17E7  1421               	bsf	___lldiv@quotient,0
  5706     17E8                     l4247:
  5707     17E8  3001               	movlw	1
  5708     17E9                     u4225:
  5709     17E9  1003               	clrc
  5710     17EA  0CF5               	rrf	___lldiv@divisor+3,f
  5711     17EB  0CF4               	rrf	___lldiv@divisor+2,f
  5712     17EC  0CF3               	rrf	___lldiv@divisor+1,f
  5713     17ED  0CF2               	rrf	___lldiv@divisor,f
  5714     17EE  3EFF               	addlw	-1
  5715     17EF  1D03               	skipz
  5716     17F0  2FE9               	goto	u4225
  5717     17F1                     l4249:
  5718     17F1  3001               	movlw	1
  5719     17F2  02A5               	subwf	___lldiv@counter,f
  5720     17F3  1D03               	btfss	3,2
  5721     17F4  2FF6               	goto	u4231
  5722     17F5  2FF7               	goto	u4230
  5723     17F6                     u4231:
  5724     17F6  2FBE               	goto	l4239
  5725     17F7                     u4230:
  5726     17F7                     l4251:
  5727     17F7  0824               	movf	___lldiv@quotient+3,w
  5728     17F8  00F5               	movwf	?___lldiv+3
  5729     17F9  0823               	movf	___lldiv@quotient+2,w
  5730     17FA  00F4               	movwf	?___lldiv+2
  5731     17FB  0822               	movf	___lldiv@quotient+1,w
  5732     17FC  00F3               	movwf	?___lldiv+1
  5733     17FD  0821               	movf	___lldiv@quotient,w
  5734     17FE  00F2               	movwf	?___lldiv
  5735     17FF                     l670:
  5736     17FF  0008               	return
  5737     1800                     __end_of___lldiv:
  5738                           
  5739                           	psect	text14
  5740     1FC9                     __ptext14:	
  5741 ;; *************** function _init_ds1307 *****************
  5742 ;; Defined at:
  5743 ;;		line 5 in file "ds1307.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;		None
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  dummy           1    6[COMMON] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0, pclath, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5757 ;;      Params:         0       0       0       0       0
  5758 ;;      Locals:         1       0       0       0       0
  5759 ;;      Temps:          0       0       0       0       0
  5760 ;;      Totals:         1       0       0       0       0
  5761 ;;Total ram usage:        1 bytes
  5762 ;; Hardware stack levels used: 1
  5763 ;; Hardware stack levels required when called: 5
  5764 ;; This function calls:
  5765 ;;		_read_ds1307
  5766 ;;		_write_ds1307
  5767 ;; This function is called by:
  5768 ;;		_init_config
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772     1FC9                     _init_ds1307:	
  5773                           ;psect for function _init_ds1307
  5774                           
  5775     1FC9                     l4271:	
  5776                           ;incstack = 0
  5777                           ; Regs used in _init_ds1307: [wreg+status,2+status,0+pclath+cstack]
  5778                           
  5779                           
  5780                           ;ds1307.c: 7:     unsigned char dummy;;ds1307.c: 9:     dummy = read_ds1307(0x00);
  5781     1FC9  3000               	movlw	0
  5782     1FCA  160A  118A  22D7  160A  158A  	fcall	_read_ds1307
  5783     1FCF  00F6               	movwf	init_ds1307@dummy
  5784     1FD0                     l4273:
  5785                           
  5786                           ;ds1307.c: 10:     dummy = dummy & 0x7F;
  5787     1FD0  307F               	movlw	127
  5788     1FD1  05F6               	andwf	init_ds1307@dummy,f
  5789     1FD2                     l4275:
  5790                           
  5791                           ;ds1307.c: 11:     write_ds1307(0x00, dummy);
  5792     1FD2  0876               	movf	init_ds1307@dummy,w
  5793     1FD3  00F3               	movwf	write_ds1307@data
  5794     1FD4  3000               	movlw	0
  5795     1FD5  160A  118A  2204  160A  158A  	fcall	_write_ds1307
  5796     1FDA                     l49:
  5797     1FDA  0008               	return
  5798     1FDB                     __end_of_init_ds1307:
  5799                           
  5800                           	psect	text15
  5801     1F4D                     __ptext15:	
  5802 ;; *************** function _init_digital_keypad *****************
  5803 ;; Defined at:
  5804 ;;		line 10 in file "digital_keypad.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;		None
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;		None
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      void 
  5811 ;; Registers used:
  5812 ;;		wreg, status,2
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5818 ;;      Params:         0       0       0       0       0
  5819 ;;      Locals:         0       0       0       0       0
  5820 ;;      Temps:          0       0       0       0       0
  5821 ;;      Totals:         0       0       0       0       0
  5822 ;;Total ram usage:        0 bytes
  5823 ;; Hardware stack levels used: 1
  5824 ;; Hardware stack levels required when called: 1
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_init_config
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832     1F4D                     _init_digital_keypad:	
  5833                           ;psect for function _init_digital_keypad
  5834                           
  5835     1F4D                     l4283:	
  5836                           ;incstack = 0
  5837                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  5838                           
  5839                           
  5840                           ;digital_keypad.c: 13:     TRISB = TRISB | 0x3F;
  5841     1F4D  1683               	bsf	3,5	;RP0=1, select bank1
  5842     1F4E  1303               	bcf	3,6	;RP1=0, select bank1
  5843     1F4F  0806               	movf	6,w	;volatile
  5844     1F50  383F               	iorlw	63
  5845     1F51  0086               	movwf	6	;volatile
  5846     1F52                     l252:
  5847     1F52  0008               	return
  5848     1F53                     __end_of_init_digital_keypad:
  5849                           
  5850                           	psect	text16
  5851     1F95                     __ptext16:	
  5852 ;; *************** function _init_clcd *****************
  5853 ;; Defined at:
  5854 ;;		line 44 in file "clcd.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0, pclath, cstack
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5868 ;;      Params:         0       0       0       0       0
  5869 ;;      Locals:         0       0       0       0       0
  5870 ;;      Temps:          0       0       0       0       0
  5871 ;;      Totals:         0       0       0       0       0
  5872 ;;Total ram usage:        0 bytes
  5873 ;; Hardware stack levels used: 1
  5874 ;; Hardware stack levels required when called: 3
  5875 ;; This function calls:
  5876 ;;		_init_display_controller
  5877 ;; This function is called by:
  5878 ;;		_init_config
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882     1F95                     _init_clcd:	
  5883                           ;psect for function _init_clcd
  5884                           
  5885     1F95                     l4255:	
  5886                           ;incstack = 0
  5887                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  5888                           
  5889                           
  5890                           ;clcd.c: 47:     TRISD = 0x00;
  5891     1F95  1683               	bsf	3,5	;RP0=1, select bank1
  5892     1F96  1303               	bcf	3,6	;RP1=0, select bank1
  5893     1F97  0188               	clrf	8	;volatile
  5894     1F98                     l4257:
  5895                           
  5896                           ;clcd.c: 50:     TRISE2 = 0;
  5897     1F98  1109               	bcf	9,2	;volatile
  5898     1F99                     l4259:
  5899                           
  5900                           ;clcd.c: 51:     TRISE1 = 0;
  5901     1F99  1089               	bcf	9,1	;volatile
  5902     1F9A                     l4261:
  5903                           
  5904                           ;clcd.c: 53:     init_display_controller();
  5905     1F9A  160A  118A  2737  160A  158A  	fcall	_init_display_controller
  5906     1F9F                     l23:
  5907     1F9F  0008               	return
  5908     1FA0                     __end_of_init_clcd:
  5909                           
  5910                           	psect	text17
  5911     1737                     __ptext17:	
  5912 ;; *************** function _init_display_controller *****************
  5913 ;; Defined at:
  5914 ;;		line 21 in file "clcd.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;		None
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;		None
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      void 
  5921 ;; Registers used:
  5922 ;;		wreg, status,2, status,0, pclath, cstack
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5928 ;;      Params:         0       0       0       0       0
  5929 ;;      Locals:         0       0       0       0       0
  5930 ;;      Temps:          2       0       0       0       0
  5931 ;;      Totals:         2       0       0       0       0
  5932 ;;Total ram usage:        2 bytes
  5933 ;; Hardware stack levels used: 1
  5934 ;; Hardware stack levels required when called: 2
  5935 ;; This function calls:
  5936 ;;		_clcd_write
  5937 ;; This function is called by:
  5938 ;;		_init_clcd
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942     1737                     _init_display_controller:	
  5943                           ;psect for function _init_display_controller
  5944                           
  5945     1737                     l4161:	
  5946                           ;incstack = 0
  5947                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  5948                           
  5949                           
  5950                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  5951     1737  30C3               	movlw	195
  5952     1738  00F7               	movwf	??_init_display_controller+1
  5953     1739  30CD               	movlw	205
  5954     173A  00F6               	movwf	??_init_display_controller
  5955     173B                     u6137:
  5956     173B  0BF6               	decfsz	??_init_display_controller,f
  5957     173C  2F3B               	goto	u6137
  5958     173D  0BF7               	decfsz	??_init_display_controller+1,f
  5959     173E  2F3B               	goto	u6137
  5960     173F                     l4163:
  5961                           
  5962                           ;clcd.c: 27:     clcd_write(0x33, 0);
  5963     173F  01F2               	clrf	clcd_write@mode
  5964     1740  3033               	movlw	51
  5965     1741  160A  118A  2421  160A  118A  	fcall	_clcd_write
  5966     1746                     l4165:
  5967                           
  5968                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  5969     1746  301B               	movlw	27
  5970     1747  00F7               	movwf	??_init_display_controller+1
  5971     1748  309E               	movlw	158
  5972     1749  00F6               	movwf	??_init_display_controller
  5973     174A                     u6147:
  5974     174A  0BF6               	decfsz	??_init_display_controller,f
  5975     174B  2F4A               	goto	u6147
  5976     174C  0BF7               	decfsz	??_init_display_controller+1,f
  5977     174D  2F4A               	goto	u6147
  5978     174E  0000               	nop
  5979                           
  5980                           ;clcd.c: 29:     clcd_write(0x33, 0);
  5981     174F  01F2               	clrf	clcd_write@mode
  5982     1750  3033               	movlw	51
  5983     1751  160A  118A  2421  160A  118A  	fcall	_clcd_write
  5984     1756                     l4167:
  5985                           
  5986                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5987     1756  30A6               	movlw	166
  5988     1757  00F6               	movwf	??_init_display_controller
  5989     1758                     u6157:
  5990     1758  0BF6               	decfsz	??_init_display_controller,f
  5991     1759  2F58               	goto	u6157
  5992     175A  0000               	nop
  5993     175B                     l4169:
  5994                           
  5995                           ;clcd.c: 31:     clcd_write(0x33, 0);
  5996     175B  01F2               	clrf	clcd_write@mode
  5997     175C  3033               	movlw	51
  5998     175D  160A  118A  2421  160A  118A  	fcall	_clcd_write
  5999     1762                     l4171:
  6000                           
  6001                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  6002     1762  2F63               	nop2	;2 cycle nop
  6003     1763  2F64               	nop2	;2 cycle nop
  6004     1764  0000               	nop
  6005     1765                     l4173:
  6006                           
  6007                           ;clcd.c: 34:     clcd_write(0x02, 0);
  6008     1765  01F2               	clrf	clcd_write@mode
  6009     1766  3002               	movlw	2
  6010     1767  160A  118A  2421  160A  118A  	fcall	_clcd_write
  6011     176C                     l4175:
  6012                           
  6013                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  6014     176C  30A6               	movlw	166
  6015     176D  00F6               	movwf	??_init_display_controller
  6016     176E                     u6167:
  6017     176E  0BF6               	decfsz	??_init_display_controller,f
  6018     176F  2F6E               	goto	u6167
  6019     1770  0000               	nop
  6020                           
  6021                           ;clcd.c: 36:     clcd_write(0x28, 0);
  6022     1771  01F2               	clrf	clcd_write@mode
  6023     1772  3028               	movlw	40
  6024     1773  160A  118A  2421  160A  118A  	fcall	_clcd_write
  6025     1778                     l4177:
  6026                           
  6027                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  6028     1778  30A6               	movlw	166
  6029     1779  00F6               	movwf	??_init_display_controller
  6030     177A                     u6177:
  6031     177A  0BF6               	decfsz	??_init_display_controller,f
  6032     177B  2F7A               	goto	u6177
  6033     177C  0000               	nop
  6034     177D                     l4179:
  6035                           
  6036                           ;clcd.c: 38:     clcd_write(0x01, 0);
  6037     177D  01F2               	clrf	clcd_write@mode
  6038     177E  3001               	movlw	1
  6039     177F  160A  118A  2421  160A  118A  	fcall	_clcd_write
  6040                           
  6041                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  6042     1784  3004               	movlw	4
  6043     1785  00F7               	movwf	??_init_display_controller+1
  6044     1786  303D               	movlw	61
  6045     1787  00F6               	movwf	??_init_display_controller
  6046     1788                     u6187:
  6047     1788  0BF6               	decfsz	??_init_display_controller,f
  6048     1789  2F88               	goto	u6187
  6049     178A  0BF7               	decfsz	??_init_display_controller+1,f
  6050     178B  2F88               	goto	u6187
  6051     178C  2F8D               	nop2
  6052     178D                     l4181:
  6053                           
  6054                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  6055     178D  01F2               	clrf	clcd_write@mode
  6056     178E  300C               	movlw	12
  6057     178F  160A  118A  2421  160A  118A  	fcall	_clcd_write
  6058     1794                     l4183:
  6059                           
  6060                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  6061     1794  30A6               	movlw	166
  6062     1795  00F6               	movwf	??_init_display_controller
  6063     1796                     u6197:
  6064     1796  0BF6               	decfsz	??_init_display_controller,f
  6065     1797  2F96               	goto	u6197
  6066     1798  0000               	nop
  6067     1799                     l20:
  6068     1799  0008               	return
  6069     179A                     __end_of_init_display_controller:
  6070                           
  6071                           	psect	text18
  6072     1F53                     __ptext18:	
  6073 ;; *************** function _init_adc *****************
  6074 ;; Defined at:
  6075 ;;		line 3 in file "adc.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		None
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6089 ;;      Params:         0       0       0       0       0
  6090 ;;      Locals:         0       0       0       0       0
  6091 ;;      Temps:          0       0       0       0       0
  6092 ;;      Totals:         0       0       0       0       0
  6093 ;;Total ram usage:        0 bytes
  6094 ;; Hardware stack levels used: 1
  6095 ;; Hardware stack levels required when called: 1
  6096 ;; This function calls:
  6097 ;;		Nothing
  6098 ;; This function is called by:
  6099 ;;		_init_config
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103     1F53                     _init_adc:	
  6104                           ;psect for function _init_adc
  6105                           
  6106     1F53                     l4285:	
  6107                           ;incstack = 0
  6108                           ; Regs used in _init_adc: []
  6109                           
  6110                           
  6111                           ;adc.c: 6:     ADFM = 1;
  6112     1F53  1683               	bsf	3,5	;RP0=1, select bank1
  6113     1F54  1303               	bcf	3,6	;RP1=0, select bank1
  6114     1F55  179F               	bsf	31,7	;volatile
  6115                           
  6116                           ;adc.c: 9:     ADON = 1;
  6117     1F56  1283               	bcf	3,5	;RP0=0, select bank0
  6118     1F57  1303               	bcf	3,6	;RP1=0, select bank0
  6119     1F58  141F               	bsf	31,0	;volatile
  6120     1F59                     l239:
  6121     1F59  0008               	return
  6122     1F5A                     __end_of_init_adc:
  6123                           
  6124                           	psect	text19
  6125     0A53                     __ptext19:	
  6126 ;; *************** function _download_log *****************
  6127 ;; Defined at:
  6128 ;;		line 309 in file "car_block_box_def.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;		None
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;  i               1   15[BANK0 ] unsigned char 
  6133 ;;  log            11    0[BANK0 ] unsigned char [11]
  6134 ;;  index           2   13[BANK0 ] int 
  6135 ;;  position        1   12[BANK0 ] unsigned char 
  6136 ;;  addr            1   11[BANK0 ] unsigned char 
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  1    wreg      void 
  6139 ;; Registers used:
  6140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6146 ;;      Params:         0       0       0       0       0
  6147 ;;      Locals:         0      16       0       0       0
  6148 ;;      Temps:          1       0       0       0       0
  6149 ;;      Totals:         1      16       0       0       0
  6150 ;;Total ram usage:       17 bytes
  6151 ;; Hardware stack levels used: 1
  6152 ;; Hardware stack levels required when called: 5
  6153 ;; This function calls:
  6154 ;;		___bmul
  6155 ;;		_putchar
  6156 ;;		_puts
  6157 ;;		_read_at24c04
  6158 ;; This function is called by:
  6159 ;;		_main
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163     0A53                     _download_log:	
  6164                           ;psect for function _download_log
  6165                           
  6166     0A53                     l4773:	
  6167                           ;incstack = 0
  6168                           ; Regs used in _download_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6169                           
  6170                           
  6171                           ;car_block_box_def.c: 311:     int index = -1;
  6172     0A53  30FF               	movlw	255
  6173     0A54  1283               	bcf	3,5	;RP0=0, select bank0
  6174     0A55  1303               	bcf	3,6	;RP1=0, select bank0
  6175     0A56  00AD               	movwf	download_log@index
  6176     0A57  30FF               	movlw	255
  6177     0A58  00AE               	movwf	download_log@index+1
  6178     0A59                     l4775:
  6179     0A59                     l4777:
  6180                           
  6181                           ;car_block_box_def.c: 313:     unsigned char addr;;car_block_box_def.c: 314:     log[10]
      +                           = 0;
  6182     0A59  01AA               	clrf	download_log@log+10
  6183     0A5A                     l4779:
  6184                           
  6185                           ;car_block_box_def.c: 316:     if(log_count == 0)
  6186     0A5A  0858               	movf	_log_count,w
  6187     0A5B  1D03               	btfss	3,2
  6188     0A5C  2A5E               	goto	u4981
  6189     0A5D  2A5F               	goto	u4980
  6190     0A5E                     u4981:
  6191     0A5E  2A69               	goto	l4783
  6192     0A5F                     u4980:
  6193     0A5F                     l4781:
  6194                           
  6195                           ;car_block_box_def.c: 317:         puts("No Logs Available !");
  6196     0A5F  3021               	movlw	low (STR_31| (0+32768))
  6197     0A60  00F3               	movwf	puts@s
  6198     0A61  3090               	movlw	high (STR_31| (0+32768))
  6199     0A62  00F4               	movwf	puts@s+1
  6200     0A63  160A  118A  2286  120A  158A  	fcall	_puts
  6201     0A68  2B55               	goto	l391
  6202     0A69                     l4783:
  6203                           
  6204                           ;car_block_box_def.c: 319:     {;car_block_box_def.c: 321:         puts("Logs :");
  6205     0A69  3086               	movlw	low (STR_32| (0+32768))
  6206     0A6A  00F3               	movwf	puts@s
  6207     0A6B  3091               	movlw	high (STR_32| (0+32768))
  6208     0A6C  00F4               	movwf	puts@s+1
  6209     0A6D  160A  118A  2286  120A  158A  	fcall	_puts
  6210     0A72                     l4785:
  6211                           
  6212                           ;car_block_box_def.c: 322:         putchar('\n');
  6213     0A72  300A               	movlw	10
  6214     0A73  160A  158A  278A  120A  158A  	fcall	_putchar
  6215     0A78                     l4787:
  6216                           
  6217                           ;car_block_box_def.c: 323:         puts("#     Time       Event     Speed");
  6218     0A78  3000               	movlw	low (STR_33| (0+32768))
  6219     0A79  00F3               	movwf	puts@s
  6220     0A7A  3090               	movlw	high (STR_33| (0+32768))
  6221     0A7B  00F4               	movwf	puts@s+1
  6222     0A7C  160A  118A  2286  120A  158A  	fcall	_puts
  6223                           
  6224                           ;car_block_box_def.c: 324:         putchar('\n');
  6225     0A81  300A               	movlw	10
  6226     0A82  160A  158A  278A  120A  158A  	fcall	_putchar
  6227                           
  6228                           ;car_block_box_def.c: 325:         putchar('\r');
  6229     0A87  300D               	movlw	13
  6230     0A88  160A  158A  278A  120A  158A  	fcall	_putchar
  6231                           
  6232                           ;car_block_box_def.c: 327:         while(index < log_count)
  6233     0A8D  2B46               	goto	l4839
  6234     0A8E                     l4789:
  6235                           
  6236                           ;car_block_box_def.c: 328:         {;car_block_box_def.c: 329:             position = in
      +                          dex + 1;
  6237     0A8E  1283               	bcf	3,5	;RP0=0, select bank0
  6238     0A8F  1303               	bcf	3,6	;RP1=0, select bank0
  6239     0A90  082D               	movf	download_log@index,w
  6240     0A91  3E01               	addlw	1
  6241     0A92  00AC               	movwf	download_log@position
  6242     0A93                     l4791:
  6243                           
  6244                           ;car_block_box_def.c: 330:             index++;
  6245     0A93  3001               	movlw	1
  6246     0A94  07AD               	addwf	download_log@index,f
  6247     0A95  1803               	skipnc
  6248     0A96  0AAE               	incf	download_log@index+1,f
  6249     0A97  3000               	movlw	0
  6250     0A98  07AE               	addwf	download_log@index+1,f
  6251     0A99                     l4793:
  6252                           
  6253                           ;car_block_box_def.c: 332:             for(unsigned char i = 0; i < 10; i++)
  6254     0A99  01AF               	clrf	download_log@i
  6255     0A9A                     l4799:
  6256                           
  6257                           ;car_block_box_def.c: 333:             {;car_block_box_def.c: 334:                 addr 
      +                          = (position * 10) + 0x05 + i;
  6258     0A9A  300A               	movlw	10
  6259     0A9B  00F2               	movwf	___bmul@multiplicand
  6260     0A9C  082C               	movf	download_log@position,w
  6261     0A9D  160A  158A  27ED  120A  158A  	fcall	___bmul
  6262     0AA2  1283               	bcf	3,5	;RP0=0, select bank0
  6263     0AA3  1303               	bcf	3,6	;RP1=0, select bank0
  6264     0AA4  072F               	addwf	download_log@i,w
  6265     0AA5  3E05               	addlw	5
  6266     0AA6  00AB               	movwf	download_log@addr
  6267     0AA7                     l4801:
  6268                           
  6269                           ;car_block_box_def.c: 335:                 log[i] = read_at24c04(addr);
  6270     0AA7  082F               	movf	download_log@i,w
  6271     0AA8  3E20               	addlw	(low (download_log@log| 0))& (0+255)
  6272     0AA9  0084               	movwf	4
  6273     0AAA  082B               	movf	download_log@addr,w
  6274     0AAB  160A  118A  2302  120A  158A  	fcall	_read_at24c04
  6275     0AB0  1383               	bcf	3,7	;select IRP bank0
  6276     0AB1  0080               	movwf	0
  6277     0AB2                     l4803:
  6278                           
  6279                           ;car_block_box_def.c: 336:             }
  6280     0AB2  3001               	movlw	1
  6281     0AB3  1283               	bcf	3,5	;RP0=0, select bank0
  6282     0AB4  1303               	bcf	3,6	;RP1=0, select bank0
  6283     0AB5  07AF               	addwf	download_log@i,f
  6284     0AB6                     l4805:
  6285     0AB6  300A               	movlw	10
  6286     0AB7  022F               	subwf	download_log@i,w
  6287     0AB8  1C03               	skipc
  6288     0AB9  2ABB               	goto	u4991
  6289     0ABA  2ABC               	goto	u4990
  6290     0ABB                     u4991:
  6291     0ABB  2A9A               	goto	l4799
  6292     0ABC                     u4990:
  6293     0ABC                     l4807:
  6294                           
  6295                           ;car_block_box_def.c: 338:             putchar(index + '0');
  6296     0ABC  082D               	movf	download_log@index,w
  6297     0ABD  3E30               	addlw	48
  6298     0ABE  160A  158A  278A  120A  158A  	fcall	_putchar
  6299     0AC3                     l4809:
  6300                           
  6301                           ;car_block_box_def.c: 339:             puts("   ");
  6302     0AC3  3043               	movlw	low ((STR_46+14)| (0+32768))
  6303     0AC4  00F3               	movwf	puts@s
  6304     0AC5  3090               	movlw	high ((STR_46+14)| (0+32768))
  6305     0AC6  00F4               	movwf	puts@s+1
  6306     0AC7  160A  118A  2286  120A  158A  	fcall	_puts
  6307     0ACC                     l4811:
  6308                           
  6309                           ;car_block_box_def.c: 341:             putchar(log[0]);
  6310     0ACC  1283               	bcf	3,5	;RP0=0, select bank0
  6311     0ACD  1303               	bcf	3,6	;RP1=0, select bank0
  6312     0ACE  0820               	movf	download_log@log,w
  6313     0ACF  160A  158A  278A  120A  158A  	fcall	_putchar
  6314     0AD4                     l4813:
  6315                           
  6316                           ;car_block_box_def.c: 342:             putchar(log[1]);
  6317     0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  6318     0AD5  1303               	bcf	3,6	;RP1=0, select bank0
  6319     0AD6  0821               	movf	download_log@log+1,w
  6320     0AD7  160A  158A  278A  120A  158A  	fcall	_putchar
  6321     0ADC                     l4815:
  6322                           
  6323                           ;car_block_box_def.c: 343:             putchar(':');
  6324     0ADC  303A               	movlw	58
  6325     0ADD  160A  158A  278A  120A  158A  	fcall	_putchar
  6326     0AE2                     l4817:
  6327                           
  6328                           ;car_block_box_def.c: 344:             putchar(log[2]);
  6329     0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  6330     0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  6331     0AE4  0822               	movf	download_log@log+2,w
  6332     0AE5  160A  158A  278A  120A  158A  	fcall	_putchar
  6333     0AEA                     l4819:
  6334                           
  6335                           ;car_block_box_def.c: 345:             putchar(log[3]);
  6336     0AEA  1283               	bcf	3,5	;RP0=0, select bank0
  6337     0AEB  1303               	bcf	3,6	;RP1=0, select bank0
  6338     0AEC  0823               	movf	download_log@log+3,w
  6339     0AED  160A  158A  278A  120A  158A  	fcall	_putchar
  6340     0AF2                     l4821:
  6341                           
  6342                           ;car_block_box_def.c: 346:             putchar(':');
  6343     0AF2  303A               	movlw	58
  6344     0AF3  160A  158A  278A  120A  158A  	fcall	_putchar
  6345     0AF8                     l4823:
  6346                           
  6347                           ;car_block_box_def.c: 347:             putchar(log[4]);
  6348     0AF8  1283               	bcf	3,5	;RP0=0, select bank0
  6349     0AF9  1303               	bcf	3,6	;RP1=0, select bank0
  6350     0AFA  0824               	movf	download_log@log+4,w
  6351     0AFB  160A  158A  278A  120A  158A  	fcall	_putchar
  6352     0B00                     l4825:
  6353                           
  6354                           ;car_block_box_def.c: 348:             putchar(log[5]);
  6355     0B00  1283               	bcf	3,5	;RP0=0, select bank0
  6356     0B01  1303               	bcf	3,6	;RP1=0, select bank0
  6357     0B02  0825               	movf	download_log@log+5,w
  6358     0B03  160A  158A  278A  120A  158A  	fcall	_putchar
  6359     0B08                     l4827:
  6360                           
  6361                           ;car_block_box_def.c: 350:             puts("      ");
  6362     0B08  3040               	movlw	low ((STR_46+11)| (0+32768))
  6363     0B09  00F3               	movwf	puts@s
  6364     0B0A  3090               	movlw	high ((STR_46+11)| (0+32768))
  6365     0B0B  00F4               	movwf	puts@s+1
  6366     0B0C  160A  118A  2286  120A  158A  	fcall	_puts
  6367                           
  6368                           ;car_block_box_def.c: 351:             putchar(log[6]);
  6369     0B11  1283               	bcf	3,5	;RP0=0, select bank0
  6370     0B12  1303               	bcf	3,6	;RP1=0, select bank0
  6371     0B13  0826               	movf	download_log@log+6,w
  6372     0B14  160A  158A  278A  120A  158A  	fcall	_putchar
  6373                           
  6374                           ;car_block_box_def.c: 352:             putchar(log[7]);
  6375     0B19  1283               	bcf	3,5	;RP0=0, select bank0
  6376     0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  6377     0B1B  0827               	movf	download_log@log+7,w
  6378     0B1C  160A  158A  278A  120A  158A  	fcall	_putchar
  6379     0B21                     l4829:
  6380                           
  6381                           ;car_block_box_def.c: 354:             puts("        ");
  6382     0B21  303E               	movlw	low ((STR_46+9)| (0+32768))
  6383     0B22  00F3               	movwf	puts@s
  6384     0B23  3090               	movlw	high ((STR_46+9)| (0+32768))
  6385     0B24  00F4               	movwf	puts@s+1
  6386     0B25  160A  118A  2286  120A  158A  	fcall	_puts
  6387     0B2A                     l4831:
  6388                           
  6389                           ;car_block_box_def.c: 355:             putchar(log[8]);
  6390     0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  6391     0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  6392     0B2C  0828               	movf	download_log@log+8,w
  6393     0B2D  160A  158A  278A  120A  158A  	fcall	_putchar
  6394     0B32                     l4833:
  6395                           
  6396                           ;car_block_box_def.c: 356:             putchar(log[9]);
  6397     0B32  1283               	bcf	3,5	;RP0=0, select bank0
  6398     0B33  1303               	bcf	3,6	;RP1=0, select bank0
  6399     0B34  0829               	movf	download_log@log+9,w
  6400     0B35  160A  158A  278A  120A  158A  	fcall	_putchar
  6401     0B3A                     l4835:
  6402                           
  6403                           ;car_block_box_def.c: 357:             putchar('\n');
  6404     0B3A  300A               	movlw	10
  6405     0B3B  160A  158A  278A  120A  158A  	fcall	_putchar
  6406     0B40                     l4837:
  6407                           
  6408                           ;car_block_box_def.c: 358:             putchar('\r');
  6409     0B40  300D               	movlw	13
  6410     0B41  160A  158A  278A  120A  158A  	fcall	_putchar
  6411     0B46                     l4839:
  6412                           
  6413                           ;car_block_box_def.c: 327:         while(index < log_count)
  6414     0B46  1283               	bcf	3,5	;RP0=0, select bank0
  6415     0B47  1303               	bcf	3,6	;RP1=0, select bank0
  6416     0B48  082E               	movf	download_log@index+1,w
  6417     0B49  3A80               	xorlw	128
  6418     0B4A  00F6               	movwf	??_download_log
  6419     0B4B  3080               	movlw	128
  6420     0B4C  0276               	subwf	??_download_log,w
  6421     0B4D  1D03               	skipz
  6422     0B4E  2B51               	goto	u5005
  6423     0B4F  0858               	movf	_log_count,w
  6424     0B50  022D               	subwf	download_log@index,w
  6425     0B51                     u5005:
  6426     0B51  1C03               	skipc
  6427     0B52  2B54               	goto	u5001
  6428     0B53  2B55               	goto	u5000
  6429     0B54                     u5001:
  6430     0B54  2A8E               	goto	l4789
  6431     0B55                     u5000:
  6432     0B55                     l391:
  6433     0B55  0008               	return
  6434     0B56                     __end_of_download_log:
  6435                           
  6436                           	psect	text20
  6437     1302                     __ptext20:	
  6438 ;; *************** function _read_at24c04 *****************
  6439 ;; Defined at:
  6440 ;;		line 13 in file "at24c04.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  addr            1    wreg     unsigned char 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  addr            1    4[COMMON] unsigned char 
  6445 ;;  data            1    5[COMMON] unsigned char 
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      unsigned char 
  6448 ;; Registers used:
  6449 ;;		wreg, status,2, status,0, pclath, cstack
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6455 ;;      Params:         0       0       0       0       0
  6456 ;;      Locals:         2       0       0       0       0
  6457 ;;      Temps:          0       0       0       0       0
  6458 ;;      Totals:         2       0       0       0       0
  6459 ;;Total ram usage:        2 bytes
  6460 ;; Hardware stack levels used: 1
  6461 ;; Hardware stack levels required when called: 4
  6462 ;; This function calls:
  6463 ;;		_i2c_read
  6464 ;;		_i2c_rep_start
  6465 ;;		_i2c_start
  6466 ;;		_i2c_stop
  6467 ;;		_i2c_write
  6468 ;; This function is called by:
  6469 ;;		_login
  6470 ;;		_view_log
  6471 ;;		_download_log
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475     1302                     _read_at24c04:	
  6476                           ;psect for function _read_at24c04
  6477                           
  6478                           
  6479                           ;incstack = 0
  6480                           ; Regs used in _read_at24c04: [wreg+status,2+status,0+pclath+cstack]
  6481                           ;read_at24c04@addr stored from wreg
  6482     1302  00F4               	movwf	read_at24c04@addr
  6483     1303                     l4325:
  6484                           
  6485                           ;at24c04.c: 13: unsigned char read_at24c04(unsigned char addr);at24c04.c: 14: {;at24c04.
      +                          c: 15:     unsigned char data;;at24c04.c: 16:     i2c_start();
  6486     1303  160A  158A  2762  160A  118A  	fcall	_i2c_start
  6487                           
  6488                           ;at24c04.c: 17:     i2c_write(0b10100000);
  6489     1308  30A0               	movlw	160
  6490     1309  160A  158A  2774  160A  118A  	fcall	_i2c_write
  6491                           
  6492                           ;at24c04.c: 18:     i2c_write(addr);
  6493     130E  0874               	movf	read_at24c04@addr,w
  6494     130F  160A  158A  2774  160A  118A  	fcall	_i2c_write
  6495                           
  6496                           ;at24c04.c: 19:     i2c_rep_start();
  6497     1314  160A  158A  277F  160A  118A  	fcall	_i2c_rep_start
  6498                           
  6499                           ;at24c04.c: 20:     i2c_write(0b10100001);
  6500     1319  30A1               	movlw	161
  6501     131A  160A  158A  2774  160A  118A  	fcall	_i2c_write
  6502                           
  6503                           ;at24c04.c: 21:     data = i2c_read(0);
  6504     131F  3000               	movlw	0
  6505     1320  160A  118A  2222  160A  118A  	fcall	_i2c_read
  6506     1325  00F5               	movwf	read_at24c04@data
  6507                           
  6508                           ;at24c04.c: 22:     i2c_stop();
  6509     1326  160A  158A  276B  160A  118A  	fcall	_i2c_stop
  6510     132B                     l4327:
  6511                           
  6512                           ;at24c04.c: 24:     return data;
  6513     132B  0875               	movf	read_at24c04@data,w
  6514     132C                     l473:
  6515     132C  0008               	return
  6516     132D                     __end_of_read_at24c04:
  6517                           
  6518                           	psect	text21
  6519     1286                     __ptext21:	
  6520 ;; *************** function _puts *****************
  6521 ;; Defined at:
  6522 ;;		line 46 in file "uart.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;  s               2    3[COMMON] PTR const unsigned char 
  6525 ;;		 -> STR_36(9), STR_35(7), STR_34(4), STR_33(33), 
  6526 ;;		 -> STR_32(7), STR_31(20), 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;		None
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  1    wreg      void 
  6531 ;; Registers used:
  6532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6538 ;;      Params:         2       0       0       0       0
  6539 ;;      Locals:         0       0       0       0       0
  6540 ;;      Temps:          0       0       0       0       0
  6541 ;;      Totals:         2       0       0       0       0
  6542 ;;Total ram usage:        2 bytes
  6543 ;; Hardware stack levels used: 1
  6544 ;; Hardware stack levels required when called: 2
  6545 ;; This function calls:
  6546 ;;		_putchar
  6547 ;; This function is called by:
  6548 ;;		_download_log
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552     1286                     _puts:	
  6553                           ;psect for function _puts
  6554                           
  6555     1286                     l4353:	
  6556                           ;incstack = 0
  6557                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6558                           
  6559                           
  6560                           ;uart.c: 46: void puts(const char *s);uart.c: 47: {;uart.c: 48:     while (*s)
  6561     1286  2A9B               	goto	l4359
  6562     1287                     l4355:
  6563                           
  6564                           ;uart.c: 49:     {;uart.c: 50:         putchar(*s++);
  6565     1287  0874               	movf	puts@s+1,w
  6566     1288  00FF               	movwf	btemp+1
  6567     1289  0873               	movf	puts@s,w
  6568     128A  0084               	movwf	4
  6569     128B  160A  158A  2000  160A  118A  	fcall	stringtab
  6570     1290  160A  158A  278A  160A  118A  	fcall	_putchar
  6571     1295                     l4357:
  6572     1295  3001               	movlw	1
  6573     1296  07F3               	addwf	puts@s,f
  6574     1297  1803               	skipnc
  6575     1298  0AF4               	incf	puts@s+1,f
  6576     1299  3000               	movlw	0
  6577     129A  07F4               	addwf	puts@s+1,f
  6578     129B                     l4359:
  6579                           
  6580                           ;uart.c: 48:     while (*s)
  6581     129B  0874               	movf	puts@s+1,w
  6582     129C  1283               	bcf	3,5	;RP0=0, select bank0
  6583     129D  1303               	bcf	3,6	;RP1=0, select bank0
  6584     129E  00FF               	movwf	btemp+1
  6585     129F  0873               	movf	puts@s,w
  6586     12A0  0084               	movwf	4
  6587     12A1  160A  158A  2000  160A  118A  	fcall	stringtab
  6588     12A6  3A00               	xorlw	0
  6589     12A7  1D03               	skipz
  6590     12A8  2AAA               	goto	u4361
  6591     12A9  2AAB               	goto	u4360
  6592     12AA                     u4361:
  6593     12AA  2A87               	goto	l4355
  6594     12AB                     u4360:
  6595     12AB                     l548:
  6596     12AB  0008               	return
  6597     12AC                     __end_of_puts:
  6598                           
  6599                           	psect	text22
  6600     1F8A                     __ptext22:	
  6601 ;; *************** function _putchar *****************
  6602 ;; Defined at:
  6603 ;;		line 31 in file "uart.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  data            1    wreg     unsigned char 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  data            1    2[COMMON] unsigned char 
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  1    wreg      void 
  6610 ;; Registers used:
  6611 ;;		wreg
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6617 ;;      Params:         0       0       0       0       0
  6618 ;;      Locals:         1       0       0       0       0
  6619 ;;      Temps:          0       0       0       0       0
  6620 ;;      Totals:         1       0       0       0       0
  6621 ;;Total ram usage:        1 bytes
  6622 ;; Hardware stack levels used: 1
  6623 ;; Hardware stack levels required when called: 1
  6624 ;; This function calls:
  6625 ;;		Nothing
  6626 ;; This function is called by:
  6627 ;;		_download_log
  6628 ;;		_puts
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632     1F8A                     _putchar:	
  6633                           ;psect for function _putchar
  6634                           
  6635                           
  6636                           ;incstack = 0
  6637                           ; Regs used in _putchar: [wreg]
  6638                           ;putchar@data stored from wreg
  6639     1F8A  00F2               	movwf	putchar@data
  6640     1F8B                     l4215:
  6641                           
  6642                           ;uart.c: 31: void putchar(unsigned char data);uart.c: 32: {;uart.c: 34:     TXREG = data
      +                          ;
  6643     1F8B  0872               	movf	putchar@data,w
  6644     1F8C  1283               	bcf	3,5	;RP0=0, select bank0
  6645     1F8D  1303               	bcf	3,6	;RP1=0, select bank0
  6646     1F8E  0099               	movwf	25	;volatile
  6647     1F8F                     l540:	
  6648                           ;uart.c: 40:     } while (TXIF != 1);
  6649                           
  6650     1F8F  1E0C               	btfss	12,4	;volatile
  6651     1F90  2F92               	goto	u4141
  6652     1F91  2F93               	goto	u4140
  6653     1F92                     u4141:
  6654     1F92  2F8F               	goto	l540
  6655     1F93                     u4140:
  6656     1F93                     l541:
  6657                           
  6658                           ;uart.c: 43:     TXIF = 0;
  6659     1F93  120C               	bcf	12,4	;volatile
  6660     1F94                     l542:
  6661     1F94  0008               	return
  6662     1F95                     __end_of_putchar:
  6663                           
  6664                           	psect	text23
  6665     156D                     __ptext23:	
  6666 ;; *************** function _display_dashboard *****************
  6667 ;; Defined at:
  6668 ;;		line 52 in file "car_block_box_def.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;  event           1    2[BANK0 ] PTR unsigned char 
  6671 ;;		 -> main@event(3), 
  6672 ;;  speed           1    3[BANK0 ] unsigned char 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  1    wreg      void 
  6677 ;; Registers used:
  6678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6684 ;;      Params:         0       2       0       0       0
  6685 ;;      Locals:         0       0       0       0       0
  6686 ;;      Temps:          0       2       0       0       0
  6687 ;;      Totals:         0       4       0       0       0
  6688 ;;Total ram usage:        4 bytes
  6689 ;; Hardware stack levels used: 1
  6690 ;; Hardware stack levels required when called: 7
  6691 ;; This function calls:
  6692 ;;		___awdiv
  6693 ;;		___awmod
  6694 ;;		_clcd_print
  6695 ;;		_clcd_putch
  6696 ;;		_display_time
  6697 ;; This function is called by:
  6698 ;;		_main
  6699 ;; This function uses a non-reentrant model
  6700 ;;
  6701                           
  6702     156D                     _display_dashboard:	
  6703                           ;psect for function _display_dashboard
  6704                           
  6705     156D                     l4535:	
  6706                           ;incstack = 0
  6707                           ; Regs used in _display_dashboard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6708                           
  6709                           
  6710                           ;car_block_box_def.c: 52: void display_dashboard(char event[], unsigned char speed);car_
      +                          block_box_def.c: 53: {;car_block_box_def.c: 54:     clcd_print("TIME     E  SP", (0x80 +
      +                           2));
  6711     156D  30BA               	movlw	low (STR_20| (0+32768))
  6712     156E  00F6               	movwf	clcd_print@str
  6713     156F  3090               	movlw	high (STR_20| (0+32768))
  6714     1570  00F7               	movwf	clcd_print@str+1
  6715     1571  3082               	movlw	130
  6716     1572  00F8               	movwf	clcd_print@addr
  6717     1573  160A  118A  235A  160A  118A  	fcall	_clcd_print
  6718     1578                     l4537:
  6719                           
  6720                           ;car_block_box_def.c: 57:     display_time();
  6721     1578  160A  118A  2672  160A  118A  	fcall	_display_time
  6722     157D                     l4539:
  6723                           
  6724                           ;car_block_box_def.c: 59:     clcd_print(event,(0xC0 + 11));
  6725     157D  1283               	bcf	3,5	;RP0=0, select bank0
  6726     157E  1303               	bcf	3,6	;RP1=0, select bank0
  6727     157F  0822               	movf	display_dashboard@event,w
  6728     1580  00F6               	movwf	clcd_print@str
  6729     1581  3001               	movlw	1
  6730     1582  00F7               	movwf	clcd_print@str+1
  6731     1583  30CB               	movlw	203
  6732     1584  00F8               	movwf	clcd_print@addr
  6733     1585  160A  118A  235A  160A  118A  	fcall	_clcd_print
  6734                           
  6735                           ;car_block_box_def.c: 61:     clcd_putch((speed / 10) + '0', (0xC0 + 14));
  6736     158A  30CE               	movlw	206
  6737     158B  1283               	bcf	3,5	;RP0=0, select bank0
  6738     158C  1303               	bcf	3,6	;RP1=0, select bank0
  6739     158D  00A0               	movwf	clcd_putch@addr
  6740     158E  300A               	movlw	10
  6741     158F  00F2               	movwf	___awdiv@divisor
  6742     1590  3000               	movlw	0
  6743     1591  00F3               	movwf	___awdiv@divisor+1
  6744     1592  0823               	movf	display_dashboard@speed,w
  6745     1593  00A4               	movwf	??_display_dashboard
  6746     1594  01A5               	clrf	??_display_dashboard+1
  6747     1595  0824               	movf	??_display_dashboard,w
  6748     1596  00F4               	movwf	___awdiv@dividend
  6749     1597  0825               	movf	??_display_dashboard+1,w
  6750     1598  00F5               	movwf	___awdiv@dividend+1
  6751     1599  160A  118A  26D4  160A  118A  	fcall	___awdiv
  6752     159E  0872               	movf	?___awdiv,w
  6753     159F  3E30               	addlw	48
  6754     15A0  160A  118A  21D6  160A  118A  	fcall	_clcd_putch
  6755                           
  6756                           ;car_block_box_def.c: 62:     clcd_putch((speed % 10) + '0', (0xC0 + 15));
  6757     15A5  30CF               	movlw	207
  6758     15A6  1283               	bcf	3,5	;RP0=0, select bank0
  6759     15A7  1303               	bcf	3,6	;RP1=0, select bank0
  6760     15A8  00A0               	movwf	clcd_putch@addr
  6761     15A9  300A               	movlw	10
  6762     15AA  00F2               	movwf	___awmod@divisor
  6763     15AB  3000               	movlw	0
  6764     15AC  00F3               	movwf	___awmod@divisor+1
  6765     15AD  0823               	movf	display_dashboard@speed,w
  6766     15AE  00A4               	movwf	??_display_dashboard
  6767     15AF  01A5               	clrf	??_display_dashboard+1
  6768     15B0  0824               	movf	??_display_dashboard,w
  6769     15B1  00F4               	movwf	___awmod@dividend
  6770     15B2  0825               	movf	??_display_dashboard+1,w
  6771     15B3  00F5               	movwf	___awmod@dividend+1
  6772     15B4  160A  118A  25C1  160A  118A  	fcall	___awmod
  6773     15B9  0872               	movf	?___awmod,w
  6774     15BA  3E30               	addlw	48
  6775     15BB  160A  118A  21D6  160A  118A  	fcall	_clcd_putch
  6776     15C0                     l319:
  6777     15C0  0008               	return
  6778     15C1                     __end_of_display_dashboard:
  6779                           
  6780                           	psect	text24
  6781     1672                     __ptext24:	
  6782 ;; *************** function _display_time *****************
  6783 ;; Defined at:
  6784 ;;		line 31 in file "car_block_box_def.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;		None
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;		None
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0, pclath, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6798 ;;      Params:         0       0       0       0       0
  6799 ;;      Locals:         0       0       0       0       0
  6800 ;;      Temps:          0       0       0       0       0
  6801 ;;      Totals:         0       0       0       0       0
  6802 ;;Total ram usage:        0 bytes
  6803 ;; Hardware stack levels used: 1
  6804 ;; Hardware stack levels required when called: 6
  6805 ;; This function calls:
  6806 ;;		_clcd_putch
  6807 ;;		_get_time
  6808 ;; This function is called by:
  6809 ;;		_display_dashboard
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813     1672                     _display_time:	
  6814                           ;psect for function _display_time
  6815                           
  6816     1672                     l4297:	
  6817                           ;incstack = 0
  6818                           ; Regs used in _display_time: [wreg+status,2+status,0+pclath+cstack]
  6819                           
  6820                           
  6821                           ;car_block_box_def.c: 33:     get_time();
  6822     1672  160A  118A  2520  160A  118A  	fcall	_get_time
  6823                           
  6824                           ;car_block_box_def.c: 35:     clcd_putch(time[0], (0xC0 + 1));
  6825     1677  30C1               	movlw	193
  6826     1678  1283               	bcf	3,5	;RP0=0, select bank0
  6827     1679  1303               	bcf	3,6	;RP1=0, select bank0
  6828     167A  00A0               	movwf	clcd_putch@addr
  6829     167B  1683               	bsf	3,5	;RP0=1, select bank1
  6830     167C  1303               	bcf	3,6	;RP1=0, select bank1
  6831     167D  0842               	movf	_time^(0+128),w
  6832     167E  160A  118A  21D6  160A  118A  	fcall	_clcd_putch
  6833                           
  6834                           ;car_block_box_def.c: 36:     clcd_putch(time[1], (0xC0 + 2));
  6835     1683  30C2               	movlw	194
  6836     1684  1283               	bcf	3,5	;RP0=0, select bank0
  6837     1685  1303               	bcf	3,6	;RP1=0, select bank0
  6838     1686  00A0               	movwf	clcd_putch@addr
  6839     1687  1683               	bsf	3,5	;RP0=1, select bank1
  6840     1688  1303               	bcf	3,6	;RP1=0, select bank1
  6841     1689  0843               	movf	(_time^(0+128)+1),w
  6842     168A  160A  118A  21D6  160A  118A  	fcall	_clcd_putch
  6843                           
  6844                           ;car_block_box_def.c: 38:     clcd_putch(':', (0xC0 + 3));
  6845     168F  30C3               	movlw	195
  6846     1690  1283               	bcf	3,5	;RP0=0, select bank0
  6847     1691  1303               	bcf	3,6	;RP1=0, select bank0
  6848     1692  00A0               	movwf	clcd_putch@addr
  6849     1693  303A               	movlw	58
  6850     1694  160A  118A  21D6  160A  118A  	fcall	_clcd_putch
  6851                           
  6852                           ;car_block_box_def.c: 40:     clcd_putch(time[2], (0xC0 + 4));
  6853     1699  30C4               	movlw	196
  6854     169A  1283               	bcf	3,5	;RP0=0, select bank0
  6855     169B  1303               	bcf	3,6	;RP1=0, select bank0
  6856     169C  00A0               	movwf	clcd_putch@addr
  6857     169D  1683               	bsf	3,5	;RP0=1, select bank1
  6858     169E  1303               	bcf	3,6	;RP1=0, select bank1
  6859     169F  0844               	movf	(_time^(0+128)+2),w
  6860     16A0  160A  118A  21D6  160A  118A  	fcall	_clcd_putch
  6861                           
  6862                           ;car_block_box_def.c: 41:     clcd_putch(time[3], (0xC0 + 5));
  6863     16A5  30C5               	movlw	197
  6864     16A6  1283               	bcf	3,5	;RP0=0, select bank0
  6865     16A7  1303               	bcf	3,6	;RP1=0, select bank0
  6866     16A8  00A0               	movwf	clcd_putch@addr
  6867     16A9  1683               	bsf	3,5	;RP0=1, select bank1
  6868     16AA  1303               	bcf	3,6	;RP1=0, select bank1
  6869     16AB  0845               	movf	(_time^(0+128)+3),w
  6870     16AC  160A  118A  21D6  160A  118A  	fcall	_clcd_putch
  6871                           
  6872                           ;car_block_box_def.c: 43:     clcd_putch(':', (0xC0 + 6));
  6873     16B1  30C6               	movlw	198
  6874     16B2  1283               	bcf	3,5	;RP0=0, select bank0
  6875     16B3  1303               	bcf	3,6	;RP1=0, select bank0
  6876     16B4  00A0               	movwf	clcd_putch@addr
  6877     16B5  303A               	movlw	58
  6878     16B6  160A  118A  21D6  160A  118A  	fcall	_clcd_putch
  6879                           
  6880                           ;car_block_box_def.c: 45:     clcd_putch(time[4], (0xC0 + 7));
  6881     16BB  30C7               	movlw	199
  6882     16BC  1283               	bcf	3,5	;RP0=0, select bank0
  6883     16BD  1303               	bcf	3,6	;RP1=0, select bank0
  6884     16BE  00A0               	movwf	clcd_putch@addr
  6885     16BF  1683               	bsf	3,5	;RP0=1, select bank1
  6886     16C0  1303               	bcf	3,6	;RP1=0, select bank1
  6887     16C1  0846               	movf	(_time^(0+128)+4),w
  6888     16C2  160A  118A  21D6  160A  118A  	fcall	_clcd_putch
  6889                           
  6890                           ;car_block_box_def.c: 46:     clcd_putch(time[5], (0xC0 + 8));
  6891     16C7  30C8               	movlw	200
  6892     16C8  1283               	bcf	3,5	;RP0=0, select bank0
  6893     16C9  1303               	bcf	3,6	;RP1=0, select bank0
  6894     16CA  00A0               	movwf	clcd_putch@addr
  6895     16CB  1683               	bsf	3,5	;RP0=1, select bank1
  6896     16CC  1303               	bcf	3,6	;RP1=0, select bank1
  6897     16CD  0847               	movf	(_time^(0+128)+5),w
  6898     16CE  160A  118A  21D6  160A  118A  	fcall	_clcd_putch
  6899     16D3                     l316:
  6900     16D3  0008               	return
  6901     16D4                     __end_of_display_time:
  6902                           
  6903                           	psect	text25
  6904     132D                     __ptext25:	
  6905 ;; *************** function _clear_log *****************
  6906 ;; Defined at:
  6907 ;;		line 297 in file "car_block_box_def.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;		None
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;		None
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  1    wreg      void 
  6914 ;; Registers used:
  6915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6921 ;;      Params:         0       0       0       0       0
  6922 ;;      Locals:         0       0       0       0       0
  6923 ;;      Temps:          0       3       0       0       0
  6924 ;;      Totals:         0       3       0       0       0
  6925 ;;Total ram usage:        3 bytes
  6926 ;; Hardware stack levels used: 1
  6927 ;; Hardware stack levels required when called: 3
  6928 ;; This function calls:
  6929 ;;		_clcd_print
  6930 ;;		_clear_clcd_screen
  6931 ;; This function is called by:
  6932 ;;		_main
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936     132D                     _clear_log:	
  6937                           ;psect for function _clear_log
  6938                           
  6939     132D                     l4763:	
  6940                           ;incstack = 0
  6941                           ; Regs used in _clear_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6942                           
  6943                           
  6944                           ;car_block_box_def.c: 299:     log_count = 0;
  6945     132D  1283               	bcf	3,5	;RP0=0, select bank0
  6946     132E  1303               	bcf	3,6	;RP1=0, select bank0
  6947     132F  01D8               	clrf	_log_count
  6948     1330                     l4765:
  6949                           
  6950                           ;car_block_box_def.c: 302:     clear_clcd_screen();
  6951     1330  160A  158A  27B8  160A  118A  	fcall	_clear_clcd_screen
  6952     1335                     l4767:
  6953                           
  6954                           ;car_block_box_def.c: 303:     clcd_print("Logged data", (0x80 + 2));
  6955     1335  3038               	movlw	low (STR_29| (0+32768))
  6956     1336  00F6               	movwf	clcd_print@str
  6957     1337  3091               	movlw	high (STR_29| (0+32768))
  6958     1338  00F7               	movwf	clcd_print@str+1
  6959     1339  3082               	movlw	130
  6960     133A  00F8               	movwf	clcd_print@addr
  6961     133B  160A  118A  235A  160A  118A  	fcall	_clcd_print
  6962     1340                     l4769:
  6963                           
  6964                           ;car_block_box_def.c: 304:     clcd_print("cleared..!", (0xC0 + 2));
  6965     1340  3044               	movlw	low (STR_30| (0+32768))
  6966     1341  00F6               	movwf	clcd_print@str
  6967     1342  3091               	movlw	high (STR_30| (0+32768))
  6968     1343  00F7               	movwf	clcd_print@str+1
  6969     1344  30C2               	movlw	194
  6970     1345  00F8               	movwf	clcd_print@addr
  6971     1346  160A  118A  235A  160A  118A  	fcall	_clcd_print
  6972     134B                     l4771:
  6973                           
  6974                           ;car_block_box_def.c: 305:     _delay((unsigned long)((2500)*(20000000/4000.0)));
  6975     134B  3040               	movlw	64
  6976     134C  1283               	bcf	3,5	;RP0=0, select bank0
  6977     134D  1303               	bcf	3,6	;RP1=0, select bank0
  6978     134E  00A2               	movwf	??_clear_log+2
  6979     134F  306A               	movlw	106
  6980     1350  00A1               	movwf	??_clear_log+1
  6981     1351  3097               	movlw	151
  6982     1352  00A0               	movwf	??_clear_log
  6983     1353                     u6207:
  6984     1353  0BA0               	decfsz	??_clear_log,f
  6985     1354  2B53               	goto	u6207
  6986     1355  0BA1               	decfsz	??_clear_log+1,f
  6987     1356  2B53               	goto	u6207
  6988     1357  0BA2               	decfsz	??_clear_log+2,f
  6989     1358  2B53               	goto	u6207
  6990     1359                     l381:
  6991     1359  0008               	return
  6992     135A                     __end_of_clear_log:
  6993                           
  6994                           	psect	text26
  6995     037F                     __ptext26:	
  6996 ;; *************** function _change_time *****************
  6997 ;; Defined at:
  6998 ;;		line 364 in file "car_block_box_def.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;  key             1    wreg     unsigned char 
  7001 ;;  reset_flag      1    2[BANK0 ] unsigned char 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  key             1   10[BANK0 ] unsigned char 
  7004 ;;  buffer          1   11[BANK0 ] unsigned char 
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  1    wreg      unsigned char 
  7007 ;; Registers used:
  7008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7014 ;;      Params:         0       1       0       0       0
  7015 ;;      Locals:         0       2       0       0       0
  7016 ;;      Temps:          0       7       0       0       0
  7017 ;;      Totals:         0      10       0       0       0
  7018 ;;Total ram usage:       10 bytes
  7019 ;; Hardware stack levels used: 1
  7020 ;; Hardware stack levels required when called: 6
  7021 ;; This function calls:
  7022 ;;		___awdiv
  7023 ;;		___awmod
  7024 ;;		___bmul
  7025 ;;		_clcd_print
  7026 ;;		_clcd_putch
  7027 ;;		_clear_clcd_screen
  7028 ;;		_get_time
  7029 ;;		_write_ds1307
  7030 ;; This function is called by:
  7031 ;;		_main
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035     037F                     _change_time:	
  7036                           ;psect for function _change_time
  7037                           
  7038                           
  7039                           ;incstack = 0
  7040                           ; Regs used in _change_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7041                           ;change_time@key stored from wreg
  7042     037F  1283               	bcf	3,5	;RP0=0, select bank0
  7043     0380  1303               	bcf	3,6	;RP1=0, select bank0
  7044     0381  00AA               	movwf	change_time@key
  7045     0382                     l4841:
  7046                           
  7047                           ;car_block_box_def.c: 364: unsigned char change_time(unsigned char key, unsigned char re
      +                          set_flag);car_block_box_def.c: 365: {;car_block_box_def.c: 366:     static unsigned char
      +                           new_time[3], blink_pos, blink, wait, done = 0;;car_block_box_def.c: 367:     char buffe
      +                          r;;car_block_box_def.c: 370:     if(reset_flag == 0x24)
  7048     0382  3024               	movlw	36
  7049     0383  0622               	xorwf	change_time@reset_flag,w
  7050     0384  1D03               	btfss	3,2
  7051     0385  2B87               	goto	u5011
  7052     0386  2B88               	goto	u5010
  7053     0387                     u5011:
  7054     0387  2BE7               	goto	l4859
  7055     0388                     u5010:
  7056     0388                     l4843:
  7057                           
  7058                           ;car_block_box_def.c: 371:     {;car_block_box_def.c: 372:         get_time();
  7059     0388  160A  118A  2520  120A  118A  	fcall	_get_time
  7060                           
  7061                           ;car_block_box_def.c: 374:         new_time[0] = ((time[0] & 0x0F) * 10) + (time[1] & 0x
      +                          0F);
  7062     038D  300F               	movlw	15
  7063     038E  1683               	bsf	3,5	;RP0=1, select bank1
  7064     038F  1303               	bcf	3,6	;RP1=0, select bank1
  7065     0390  0543               	andwf	(_time^(0+128)+1),w
  7066     0391  1283               	bcf	3,5	;RP0=0, select bank0
  7067     0392  1303               	bcf	3,6	;RP1=0, select bank0
  7068     0393  00A3               	movwf	??_change_time
  7069     0394  300A               	movlw	10
  7070     0395  00F2               	movwf	___bmul@multiplicand
  7071     0396  1683               	bsf	3,5	;RP0=1, select bank1
  7072     0397  1303               	bcf	3,6	;RP1=0, select bank1
  7073     0398  0842               	movf	_time^(0+128),w
  7074     0399  390F               	andlw	15
  7075     039A  160A  158A  27ED  120A  118A  	fcall	___bmul
  7076     039F  1283               	bcf	3,5	;RP0=0, select bank0
  7077     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  7078     03A1  0723               	addwf	??_change_time,w
  7079     03A2  00D2               	movwf	change_time@new_time
  7080                           
  7081                           ;car_block_box_def.c: 375:         new_time[1] = ((time[2] & 0x0F) * 10) + (time[3] & 0x
      +                          0F);
  7082     03A3  300F               	movlw	15
  7083     03A4  1683               	bsf	3,5	;RP0=1, select bank1
  7084     03A5  1303               	bcf	3,6	;RP1=0, select bank1
  7085     03A6  0545               	andwf	(_time^(0+128)+3),w
  7086     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  7087     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  7088     03A9  00A3               	movwf	??_change_time
  7089     03AA  300A               	movlw	10
  7090     03AB  00F2               	movwf	___bmul@multiplicand
  7091     03AC  1683               	bsf	3,5	;RP0=1, select bank1
  7092     03AD  1303               	bcf	3,6	;RP1=0, select bank1
  7093     03AE  0844               	movf	(_time^(0+128)+2),w
  7094     03AF  390F               	andlw	15
  7095     03B0  160A  158A  27ED  120A  118A  	fcall	___bmul
  7096     03B5  1283               	bcf	3,5	;RP0=0, select bank0
  7097     03B6  1303               	bcf	3,6	;RP1=0, select bank0
  7098     03B7  0723               	addwf	??_change_time,w
  7099     03B8  00D3               	movwf	change_time@new_time+1
  7100                           
  7101                           ;car_block_box_def.c: 376:         new_time[2] = ((time[4] & 0x0F) * 10) + (time[5] & 0x
      +                          0F);
  7102     03B9  300F               	movlw	15
  7103     03BA  1683               	bsf	3,5	;RP0=1, select bank1
  7104     03BB  1303               	bcf	3,6	;RP1=0, select bank1
  7105     03BC  0547               	andwf	(_time^(0+128)+5),w
  7106     03BD  1283               	bcf	3,5	;RP0=0, select bank0
  7107     03BE  1303               	bcf	3,6	;RP1=0, select bank0
  7108     03BF  00A3               	movwf	??_change_time
  7109     03C0  300A               	movlw	10
  7110     03C1  00F2               	movwf	___bmul@multiplicand
  7111     03C2  1683               	bsf	3,5	;RP0=1, select bank1
  7112     03C3  1303               	bcf	3,6	;RP1=0, select bank1
  7113     03C4  0846               	movf	(_time^(0+128)+4),w
  7114     03C5  390F               	andlw	15
  7115     03C6  160A  158A  27ED  120A  118A  	fcall	___bmul
  7116     03CB  1283               	bcf	3,5	;RP0=0, select bank0
  7117     03CC  1303               	bcf	3,6	;RP1=0, select bank0
  7118     03CD  0723               	addwf	??_change_time,w
  7119     03CE  00D4               	movwf	change_time@new_time+2
  7120     03CF                     l4845:
  7121                           
  7122                           ;car_block_box_def.c: 378:         clcd_print("Time <HH:MM:SS>", (0x80 + 0));
  7123     03CF  308B               	movlw	low (STR_37| (0+32768))
  7124     03D0  00F6               	movwf	clcd_print@str
  7125     03D1  3090               	movlw	high (STR_37| (0+32768))
  7126     03D2  00F7               	movwf	clcd_print@str+1
  7127     03D3  3080               	movlw	128
  7128     03D4  00F8               	movwf	clcd_print@addr
  7129     03D5  160A  118A  235A  120A  118A  	fcall	_clcd_print
  7130     03DA                     l4847:
  7131                           
  7132                           ;car_block_box_def.c: 379:         blink_pos = 2;
  7133     03DA  3002               	movlw	2
  7134     03DB  1683               	bsf	3,5	;RP0=1, select bank1
  7135     03DC  1303               	bcf	3,6	;RP1=0, select bank1
  7136     03DD  00AB               	movwf	change_time@blink_pos^(0+128)
  7137     03DE                     l4849:
  7138                           
  7139                           ;car_block_box_def.c: 380:         blink = 0;
  7140     03DE  01AA               	clrf	change_time@blink^(0+128)
  7141     03DF                     l4851:
  7142                           
  7143                           ;car_block_box_def.c: 381:         wait = 0;
  7144     03DF  01A9               	clrf	change_time@wait^(0+128)
  7145     03E0                     l4853:
  7146                           
  7147                           ;car_block_box_def.c: 382:         done = 0;
  7148     03E0  01A8               	clrf	change_time@done^(0+128)
  7149     03E1                     l4855:
  7150                           
  7151                           ;car_block_box_def.c: 383:         return_time = 10;
  7152     03E1  300A               	movlw	10
  7153     03E2  1283               	bcf	3,5	;RP0=0, select bank0
  7154     03E3  1303               	bcf	3,6	;RP1=0, select bank0
  7155     03E4  00DA               	movwf	_return_time
  7156     03E5                     l4857:
  7157                           
  7158                           ;car_block_box_def.c: 384:         key = 0x3F;
  7159     03E5  303F               	movlw	63
  7160     03E6  00AA               	movwf	change_time@key
  7161     03E7                     l4859:
  7162                           
  7163                           ;car_block_box_def.c: 387:     if(return_time == 0)
  7164     03E7  085A               	movf	_return_time,w
  7165     03E8  1D03               	btfss	3,2
  7166     03E9  2BEB               	goto	u5021
  7167     03EA  2BEC               	goto	u5020
  7168     03EB                     u5021:
  7169     03EB  2BEE               	goto	l4865
  7170     03EC                     u5020:
  7171     03EC                     l4861:
  7172                           
  7173                           ;car_block_box_def.c: 388:         return 0x33;
  7174     03EC  3033               	movlw	51
  7175     03ED  2E58               	goto	l406
  7176     03EE                     l4865:
  7177                           
  7178                           ;car_block_box_def.c: 390:     if(done)
  7179     03EE  1683               	bsf	3,5	;RP0=1, select bank1
  7180     03EF  1303               	bcf	3,6	;RP1=0, select bank1
  7181     03F0  0828               	movf	change_time@done^(0+128),w
  7182     03F1  1903               	btfsc	3,2
  7183     03F2  2BF4               	goto	u5031
  7184     03F3  2BF5               	goto	u5030
  7185     03F4                     u5031:
  7186     03F4  2D28               	goto	l4909
  7187     03F5                     u5030:
  7188     03F5                     l4867:
  7189                           
  7190                           ;car_block_box_def.c: 391:         return 0x66;
  7191     03F5  3066               	movlw	102
  7192     03F6  2E58               	goto	l406
  7193     03F7                     l4871:
  7194                           
  7195                           ;car_block_box_def.c: 396:             new_time[blink_pos]++;
  7196     03F7  1683               	bsf	3,5	;RP0=1, select bank1
  7197     03F8  1303               	bcf	3,6	;RP1=0, select bank1
  7198     03F9  082B               	movf	change_time@blink_pos^(0+128),w
  7199     03FA  3E52               	addlw	(low (change_time@new_time| 0))& (0+255)
  7200     03FB  0084               	movwf	4
  7201     03FC  3001               	movlw	1
  7202     03FD  1383               	bcf	3,7	;select IRP bank0
  7203     03FE  0780               	addwf	0,f
  7204     03FF                     l4873:
  7205                           
  7206                           ;car_block_box_def.c: 397:             return_time = 7;
  7207     03FF  3007               	movlw	7
  7208     0400  1283               	bcf	3,5	;RP0=0, select bank0
  7209     0401  1303               	bcf	3,6	;RP1=0, select bank0
  7210     0402  00DA               	movwf	_return_time
  7211                           
  7212                           ;car_block_box_def.c: 398:             break;
  7213     0403  2D35               	goto	l4911
  7214     0404                     l4875:
  7215                           
  7216                           ;car_block_box_def.c: 400:             blink_pos = (blink_pos + 1) % 3;
  7217     0404  3003               	movlw	3
  7218     0405  00F2               	movwf	___awmod@divisor
  7219     0406  3000               	movlw	0
  7220     0407  00F3               	movwf	___awmod@divisor+1
  7221     0408  1683               	bsf	3,5	;RP0=1, select bank1
  7222     0409  1303               	bcf	3,6	;RP1=0, select bank1
  7223     040A  082B               	movf	change_time@blink_pos^(0+128),w
  7224     040B  3E01               	addlw	1
  7225     040C  00F4               	movwf	___awmod@dividend
  7226     040D  3000               	movlw	0
  7227     040E  1803               	skipnc
  7228     040F  3001               	movlw	1
  7229     0410  00F5               	movwf	___awmod@dividend+1
  7230     0411  160A  118A  25C1  120A  118A  	fcall	___awmod
  7231     0416  0872               	movf	?___awmod,w
  7232     0417  1683               	bsf	3,5	;RP0=1, select bank1
  7233     0418  1303               	bcf	3,6	;RP1=0, select bank1
  7234     0419  00AB               	movwf	change_time@blink_pos^(0+128)
  7235     041A  2BFF               	goto	l4873
  7236     041B                     l4879:
  7237                           
  7238                           ;car_block_box_def.c: 406:             get_time();
  7239     041B  160A  118A  2520  120A  118A  	fcall	_get_time
  7240                           
  7241                           ;car_block_box_def.c: 409:             buffer = (char)((new_time[0] / 10) << 4) | (new_t
      +                          ime[0] % 10);
  7242     0420  300A               	movlw	10
  7243     0421  00F2               	movwf	___awmod@divisor
  7244     0422  3000               	movlw	0
  7245     0423  00F3               	movwf	___awmod@divisor+1
  7246     0424  1283               	bcf	3,5	;RP0=0, select bank0
  7247     0425  1303               	bcf	3,6	;RP1=0, select bank0
  7248     0426  0852               	movf	change_time@new_time,w
  7249     0427  00A3               	movwf	??_change_time
  7250     0428  01A4               	clrf	??_change_time+1
  7251     0429  0823               	movf	??_change_time,w
  7252     042A  00F4               	movwf	___awmod@dividend
  7253     042B  0824               	movf	??_change_time+1,w
  7254     042C  00F5               	movwf	___awmod@dividend+1
  7255     042D  160A  118A  25C1  120A  118A  	fcall	___awmod
  7256     0432  0872               	movf	?___awmod,w
  7257     0433  1283               	bcf	3,5	;RP0=0, select bank0
  7258     0434  1303               	bcf	3,6	;RP1=0, select bank0
  7259     0435  00A5               	movwf	??_change_time+2
  7260     0436  0873               	movf	?___awmod+1,w
  7261     0437  00A6               	movwf	??_change_time+3
  7262     0438  300A               	movlw	10
  7263     0439  00F2               	movwf	___awdiv@divisor
  7264     043A  3000               	movlw	0
  7265     043B  00F3               	movwf	___awdiv@divisor+1
  7266     043C  0852               	movf	change_time@new_time,w
  7267     043D  00A7               	movwf	??_change_time+4
  7268     043E  01A8               	clrf	??_change_time+5
  7269     043F  0827               	movf	??_change_time+4,w
  7270     0440  00F4               	movwf	___awdiv@dividend
  7271     0441  0828               	movf	??_change_time+5,w
  7272     0442  00F5               	movwf	___awdiv@dividend+1
  7273     0443  160A  118A  26D4  120A  118A  	fcall	___awdiv
  7274     0448  0872               	movf	?___awdiv,w
  7275     0449  1283               	bcf	3,5	;RP0=0, select bank0
  7276     044A  1303               	bcf	3,6	;RP1=0, select bank0
  7277     044B  00A9               	movwf	??_change_time+6
  7278     044C  3003               	movlw	3
  7279     044D                     u5045:
  7280     044D  1003               	clrc
  7281     044E  0DA9               	rlf	??_change_time+6,f
  7282     044F  3EFF               	addlw	-1
  7283     0450  1D03               	skipz
  7284     0451  2C4D               	goto	u5045
  7285     0452  1003               	clrc
  7286     0453  0D29               	rlf	??_change_time+6,w
  7287     0454  0425               	iorwf	??_change_time+2,w
  7288     0455  00AB               	movwf	change_time@buffer
  7289     0456                     l4881:
  7290                           
  7291                           ;car_block_box_def.c: 410:             clock_reg[0] = (clock_reg[0] & 0xC0) | buffer;
  7292     0456  1683               	bsf	3,5	;RP0=1, select bank1
  7293     0457  1303               	bcf	3,6	;RP1=0, select bank1
  7294     0458  0820               	movf	_clock_reg^(0+128),w
  7295     0459  39C0               	andlw	192
  7296     045A  1283               	bcf	3,5	;RP0=0, select bank0
  7297     045B  1303               	bcf	3,6	;RP1=0, select bank0
  7298     045C  042B               	iorwf	change_time@buffer,w
  7299     045D  1683               	bsf	3,5	;RP0=1, select bank1
  7300     045E  1303               	bcf	3,6	;RP1=0, select bank1
  7301     045F  00A0               	movwf	_clock_reg^(0+128)
  7302     0460                     l4883:
  7303                           
  7304                           ;car_block_box_def.c: 411:             write_ds1307(0x02, clock_reg[0]);
  7305     0460  0820               	movf	_clock_reg^(0+128),w
  7306     0461  00F3               	movwf	write_ds1307@data
  7307     0462  3002               	movlw	2
  7308     0463  160A  118A  2204  120A  118A  	fcall	_write_ds1307
  7309     0468                     l4885:
  7310                           
  7311                           ;car_block_box_def.c: 414:             buffer = (char)((new_time[1] / 10) << 4) | (new_t
      +                          ime[1] % 10);
  7312     0468  300A               	movlw	10
  7313     0469  00F2               	movwf	___awmod@divisor
  7314     046A  3000               	movlw	0
  7315     046B  00F3               	movwf	___awmod@divisor+1
  7316     046C  1283               	bcf	3,5	;RP0=0, select bank0
  7317     046D  1303               	bcf	3,6	;RP1=0, select bank0
  7318     046E  0853               	movf	change_time@new_time+1,w
  7319     046F  00A3               	movwf	??_change_time
  7320     0470  01A4               	clrf	??_change_time+1
  7321     0471  0823               	movf	??_change_time,w
  7322     0472  00F4               	movwf	___awmod@dividend
  7323     0473  0824               	movf	??_change_time+1,w
  7324     0474  00F5               	movwf	___awmod@dividend+1
  7325     0475  160A  118A  25C1  120A  118A  	fcall	___awmod
  7326     047A  0872               	movf	?___awmod,w
  7327     047B  1283               	bcf	3,5	;RP0=0, select bank0
  7328     047C  1303               	bcf	3,6	;RP1=0, select bank0
  7329     047D  00A5               	movwf	??_change_time+2
  7330     047E  0873               	movf	?___awmod+1,w
  7331     047F  00A6               	movwf	??_change_time+3
  7332     0480  300A               	movlw	10
  7333     0481  00F2               	movwf	___awdiv@divisor
  7334     0482  3000               	movlw	0
  7335     0483  00F3               	movwf	___awdiv@divisor+1
  7336     0484  0853               	movf	change_time@new_time+1,w
  7337     0485  00A7               	movwf	??_change_time+4
  7338     0486  01A8               	clrf	??_change_time+5
  7339     0487  0827               	movf	??_change_time+4,w
  7340     0488  00F4               	movwf	___awdiv@dividend
  7341     0489  0828               	movf	??_change_time+5,w
  7342     048A  00F5               	movwf	___awdiv@dividend+1
  7343     048B  160A  118A  26D4  120A  118A  	fcall	___awdiv
  7344     0490  0872               	movf	?___awdiv,w
  7345     0491  1283               	bcf	3,5	;RP0=0, select bank0
  7346     0492  1303               	bcf	3,6	;RP1=0, select bank0
  7347     0493  00A9               	movwf	??_change_time+6
  7348     0494  3003               	movlw	3
  7349     0495                     u5055:
  7350     0495  1003               	clrc
  7351     0496  0DA9               	rlf	??_change_time+6,f
  7352     0497  3EFF               	addlw	-1
  7353     0498  1D03               	skipz
  7354     0499  2C95               	goto	u5055
  7355     049A  1003               	clrc
  7356     049B  0D29               	rlf	??_change_time+6,w
  7357     049C  0425               	iorwf	??_change_time+2,w
  7358     049D  00AB               	movwf	change_time@buffer
  7359     049E                     l4887:
  7360                           
  7361                           ;car_block_box_def.c: 415:             clock_reg[1] = (clock_reg[1] & 0x80) | buffer;
  7362     049E  1683               	bsf	3,5	;RP0=1, select bank1
  7363     049F  1303               	bcf	3,6	;RP1=0, select bank1
  7364     04A0  0821               	movf	(_clock_reg^(0+128)+1),w
  7365     04A1  3980               	andlw	128
  7366     04A2  1283               	bcf	3,5	;RP0=0, select bank0
  7367     04A3  1303               	bcf	3,6	;RP1=0, select bank0
  7368     04A4  042B               	iorwf	change_time@buffer,w
  7369     04A5  1683               	bsf	3,5	;RP0=1, select bank1
  7370     04A6  1303               	bcf	3,6	;RP1=0, select bank1
  7371     04A7  00A1               	movwf	(_clock_reg^(0+128)+1)
  7372                           
  7373                           ;car_block_box_def.c: 416:             write_ds1307(0x01, clock_reg[1]);
  7374     04A8  0821               	movf	(_clock_reg^(0+128)+1),w
  7375     04A9  00F3               	movwf	write_ds1307@data
  7376     04AA  3001               	movlw	1
  7377     04AB  160A  118A  2204  120A  118A  	fcall	_write_ds1307
  7378                           
  7379                           ;car_block_box_def.c: 419:             buffer = (char)((new_time[2] / 10) << 4) | (new_t
      +                          ime[2] % 10);
  7380     04B0  300A               	movlw	10
  7381     04B1  00F2               	movwf	___awmod@divisor
  7382     04B2  3000               	movlw	0
  7383     04B3  00F3               	movwf	___awmod@divisor+1
  7384     04B4  1283               	bcf	3,5	;RP0=0, select bank0
  7385     04B5  1303               	bcf	3,6	;RP1=0, select bank0
  7386     04B6  0854               	movf	change_time@new_time+2,w
  7387     04B7  00A3               	movwf	??_change_time
  7388     04B8  01A4               	clrf	??_change_time+1
  7389     04B9  0823               	movf	??_change_time,w
  7390     04BA  00F4               	movwf	___awmod@dividend
  7391     04BB  0824               	movf	??_change_time+1,w
  7392     04BC  00F5               	movwf	___awmod@dividend+1
  7393     04BD  160A  118A  25C1  120A  118A  	fcall	___awmod
  7394     04C2  0872               	movf	?___awmod,w
  7395     04C3  1283               	bcf	3,5	;RP0=0, select bank0
  7396     04C4  1303               	bcf	3,6	;RP1=0, select bank0
  7397     04C5  00A5               	movwf	??_change_time+2
  7398     04C6  0873               	movf	?___awmod+1,w
  7399     04C7  00A6               	movwf	??_change_time+3
  7400     04C8  300A               	movlw	10
  7401     04C9  00F2               	movwf	___awdiv@divisor
  7402     04CA  3000               	movlw	0
  7403     04CB  00F3               	movwf	___awdiv@divisor+1
  7404     04CC  0854               	movf	change_time@new_time+2,w
  7405     04CD  00A7               	movwf	??_change_time+4
  7406     04CE  01A8               	clrf	??_change_time+5
  7407     04CF  0827               	movf	??_change_time+4,w
  7408     04D0  00F4               	movwf	___awdiv@dividend
  7409     04D1  0828               	movf	??_change_time+5,w
  7410     04D2  00F5               	movwf	___awdiv@dividend+1
  7411     04D3  160A  118A  26D4  120A  118A  	fcall	___awdiv
  7412     04D8  0872               	movf	?___awdiv,w
  7413     04D9  1283               	bcf	3,5	;RP0=0, select bank0
  7414     04DA  1303               	bcf	3,6	;RP1=0, select bank0
  7415     04DB  00A9               	movwf	??_change_time+6
  7416     04DC  3003               	movlw	3
  7417     04DD                     u5065:
  7418     04DD  1003               	clrc
  7419     04DE  0DA9               	rlf	??_change_time+6,f
  7420     04DF  3EFF               	addlw	-1
  7421     04E0  1D03               	skipz
  7422     04E1  2CDD               	goto	u5065
  7423     04E2  1003               	clrc
  7424     04E3  0D29               	rlf	??_change_time+6,w
  7425     04E4  0425               	iorwf	??_change_time+2,w
  7426     04E5  00AB               	movwf	change_time@buffer
  7427     04E6                     l4889:
  7428                           
  7429                           ;car_block_box_def.c: 420:             clock_reg[2] = (clock_reg[2] & 0x80) | buffer;
  7430     04E6  1683               	bsf	3,5	;RP0=1, select bank1
  7431     04E7  1303               	bcf	3,6	;RP1=0, select bank1
  7432     04E8  0822               	movf	(_clock_reg^(0+128)+2),w
  7433     04E9  3980               	andlw	128
  7434     04EA  1283               	bcf	3,5	;RP0=0, select bank0
  7435     04EB  1303               	bcf	3,6	;RP1=0, select bank0
  7436     04EC  042B               	iorwf	change_time@buffer,w
  7437     04ED  1683               	bsf	3,5	;RP0=1, select bank1
  7438     04EE  1303               	bcf	3,6	;RP1=0, select bank1
  7439     04EF  00A2               	movwf	(_clock_reg^(0+128)+2)
  7440     04F0                     l4891:
  7441                           
  7442                           ;car_block_box_def.c: 421:             write_ds1307(0x00, clock_reg[2]);
  7443     04F0  0822               	movf	(_clock_reg^(0+128)+2),w
  7444     04F1  00F3               	movwf	write_ds1307@data
  7445     04F2  3000               	movlw	0
  7446     04F3  160A  118A  2204  120A  118A  	fcall	_write_ds1307
  7447     04F8                     l4893:
  7448                           
  7449                           ;car_block_box_def.c: 423:             clear_clcd_screen();
  7450     04F8  160A  158A  27B8  120A  118A  	fcall	_clear_clcd_screen
  7451     04FD                     l4895:
  7452                           
  7453                           ;car_block_box_def.c: 424:             clcd_print("Time Changed", (0x80 + 2));
  7454     04FD  3004               	movlw	low (STR_38| (0+32768))
  7455     04FE  00F6               	movwf	clcd_print@str
  7456     04FF  3091               	movlw	high (STR_38| (0+32768))
  7457     0500  00F7               	movwf	clcd_print@str+1
  7458     0501  3082               	movlw	130
  7459     0502  00F8               	movwf	clcd_print@addr
  7460     0503  160A  118A  235A  120A  118A  	fcall	_clcd_print
  7461     0508                     l4897:
  7462                           
  7463                           ;car_block_box_def.c: 425:             clcd_print("Successfully", (0xC0 + 2));
  7464     0508  302B               	movlw	low (STR_39| (0+32768))
  7465     0509  00F6               	movwf	clcd_print@str
  7466     050A  3091               	movlw	high (STR_39| (0+32768))
  7467     050B  00F7               	movwf	clcd_print@str+1
  7468     050C  30C2               	movlw	194
  7469     050D  00F8               	movwf	clcd_print@addr
  7470     050E  160A  118A  235A  120A  118A  	fcall	_clcd_print
  7471     0513                     l4899:
  7472                           
  7473                           ;car_block_box_def.c: 426:             done = 1;
  7474     0513  3001               	movlw	1
  7475     0514  1683               	bsf	3,5	;RP0=1, select bank1
  7476     0515  1303               	bcf	3,6	;RP1=0, select bank1
  7477     0516  00A8               	movwf	change_time@done^(0+128)
  7478     0517                     l4901:
  7479                           
  7480                           ;car_block_box_def.c: 427:             _delay((unsigned long)((1500)*(20000000/4000.0)))
      +                          ;
  7481     0517  3027               	movlw	39
  7482     0518  1283               	bcf	3,5	;RP0=0, select bank0
  7483     0519  1303               	bcf	3,6	;RP1=0, select bank0
  7484     051A  00A5               	movwf	??_change_time+2
  7485     051B  300D               	movlw	13
  7486     051C  00A4               	movwf	??_change_time+1
  7487     051D  3025               	movlw	37
  7488     051E  00A3               	movwf	??_change_time
  7489     051F                     u6217:
  7490     051F  0BA3               	decfsz	??_change_time,f
  7491     0520  2D1F               	goto	u6217
  7492     0521  0BA4               	decfsz	??_change_time+1,f
  7493     0522  2D1F               	goto	u6217
  7494     0523  0BA5               	decfsz	??_change_time+2,f
  7495     0524  2D1F               	goto	u6217
  7496     0525  2D26               	nop2
  7497     0526                     l4903:
  7498                           
  7499                           ;car_block_box_def.c: 429:             return 0x77;
  7500     0526  3077               	movlw	119
  7501     0527  2E58               	goto	l406
  7502     0528                     l4909:
  7503     0528  1283               	bcf	3,5	;RP0=0, select bank0
  7504     0529  1303               	bcf	3,6	;RP1=0, select bank0
  7505     052A  082A               	movf	change_time@key,w
  7506                           
  7507                           ; Switch size 1, requested type "simple"
  7508                           ; Number of cases is 3, Range of values is 47 to 128
  7509                           ; switch strategies available:
  7510                           ; Name         Instructions Cycles
  7511                           ; simple_byte           10     6 (average)
  7512                           ; direct_byte          257    11 (fixed)
  7513                           ; jumptable            263     9 (fixed)
  7514                           ;	Chosen strategy is simple_byte
  7515     052B  3A2F               	xorlw	47	; case 47
  7516     052C  1903               	skipnz
  7517     052D  2C04               	goto	l4875
  7518     052E  3A18               	xorlw	24	; case 55
  7519     052F  1903               	skipnz
  7520     0530  2BF7               	goto	l4871
  7521     0531  3AB7               	xorlw	183	; case 128
  7522     0532  1903               	skipnz
  7523     0533  2C1B               	goto	l4879
  7524     0534  2D35               	goto	l4911
  7525     0535                     l4911:
  7526                           
  7527                           ;car_block_box_def.c: 432:     if(new_time[0] > 23) new_time[0] = 0;
  7528     0535  3018               	movlw	24
  7529     0536  0252               	subwf	change_time@new_time,w
  7530     0537  1C03               	skipc
  7531     0538  2D3A               	goto	u5071
  7532     0539  2D3B               	goto	u5070
  7533     053A                     u5071:
  7534     053A  2D3C               	goto	l4915
  7535     053B                     u5070:
  7536     053B                     l4913:
  7537     053B  01D2               	clrf	change_time@new_time
  7538     053C                     l4915:
  7539                           
  7540                           ;car_block_box_def.c: 433:     if(new_time[1] > 59) new_time[1] = 0;
  7541     053C  303C               	movlw	60
  7542     053D  0253               	subwf	change_time@new_time+1,w
  7543     053E  1C03               	skipc
  7544     053F  2D41               	goto	u5081
  7545     0540  2D42               	goto	u5080
  7546     0541                     u5081:
  7547     0541  2D43               	goto	l4919
  7548     0542                     u5080:
  7549     0542                     l4917:
  7550     0542  01D3               	clrf	change_time@new_time+1
  7551     0543                     l4919:
  7552                           
  7553                           ;car_block_box_def.c: 434:     if(new_time[2] > 59) new_time[2] = 0;
  7554     0543  303C               	movlw	60
  7555     0544  0254               	subwf	change_time@new_time+2,w
  7556     0545  1C03               	skipc
  7557     0546  2D48               	goto	u5091
  7558     0547  2D49               	goto	u5090
  7559     0548                     u5091:
  7560     0548  2D4A               	goto	l4923
  7561     0549                     u5090:
  7562     0549                     l4921:
  7563     0549  01D4               	clrf	change_time@new_time+2
  7564     054A                     l4923:
  7565                           
  7566                           ;car_block_box_def.c: 437:     if(wait++ == 1)
  7567     054A  3001               	movlw	1
  7568     054B  1683               	bsf	3,5	;RP0=1, select bank1
  7569     054C  1303               	bcf	3,6	;RP1=0, select bank1
  7570     054D  07A9               	addwf	change_time@wait^(0+128),f
  7571     054E  3002               	movlw	2
  7572     054F  0629               	xorwf	change_time@wait^(0+128),w
  7573     0550  1D03               	btfss	3,2
  7574     0551  2D53               	goto	u5101
  7575     0552  2D54               	goto	u5100
  7576     0553                     u5101:
  7577     0553  2DA1               	goto	l4949
  7578     0554                     u5100:
  7579     0554                     l4925:
  7580                           
  7581                           ;car_block_box_def.c: 438:     {;car_block_box_def.c: 439:         wait = 0;
  7582     0554  01A9               	clrf	change_time@wait^(0+128)
  7583     0555                     l4927:
  7584                           
  7585                           ;car_block_box_def.c: 440:         blink = !blink;
  7586     0555  082A               	movf	change_time@blink^(0+128),w
  7587     0556  1903               	btfsc	3,2
  7588     0557  2D59               	goto	u5111
  7589     0558  2D5B               	goto	u5110
  7590     0559                     u5111:
  7591     0559  3001               	movlw	1
  7592     055A  2D5C               	goto	u5120
  7593     055B                     u5110:
  7594     055B  3000               	movlw	0
  7595     055C                     u5120:
  7596     055C  00AA               	movwf	change_time@blink^(0+128)
  7597     055D                     l4929:
  7598                           
  7599                           ;car_block_box_def.c: 441:         if(blink)
  7600     055D  082A               	movf	change_time@blink^(0+128),w
  7601     055E  1903               	btfsc	3,2
  7602     055F  2D61               	goto	u5131
  7603     0560  2D62               	goto	u5130
  7604     0561                     u5131:
  7605     0561  2DA1               	goto	l4949
  7606     0562                     u5130:
  7607     0562  2D96               	goto	l4947
  7608     0563                     l4933:
  7609                           
  7610                           ;car_block_box_def.c: 446:                     clcd_print("  ", (0xC0 + 0));
  7611     0563  3044               	movlw	low ((STR_46+15)| (0+32768))
  7612     0564  00F6               	movwf	clcd_print@str
  7613     0565  3090               	movlw	high ((STR_46+15)| (0+32768))
  7614     0566  00F7               	movwf	clcd_print@str+1
  7615     0567  30C0               	movlw	192
  7616     0568  00F8               	movwf	clcd_print@addr
  7617     0569  160A  118A  235A  120A  118A  	fcall	_clcd_print
  7618     056E                     l4935:
  7619                           
  7620                           ;car_block_box_def.c: 447:                     _delay((unsigned long)((170)*(20000000/40
      +                          00.0)));
  7621     056E  3005               	movlw	5
  7622     056F  1283               	bcf	3,5	;RP0=0, select bank0
  7623     0570  1303               	bcf	3,6	;RP1=0, select bank0
  7624     0571  00A5               	movwf	??_change_time+2
  7625     0572  3050               	movlw	80
  7626     0573  00A4               	movwf	??_change_time+1
  7627     0574  30DF               	movlw	223
  7628     0575  00A3               	movwf	??_change_time
  7629     0576                     u6227:
  7630     0576  0BA3               	decfsz	??_change_time,f
  7631     0577  2D76               	goto	u6227
  7632     0578  0BA4               	decfsz	??_change_time+1,f
  7633     0579  2D76               	goto	u6227
  7634     057A  0BA5               	decfsz	??_change_time+2,f
  7635     057B  2D76               	goto	u6227
  7636     057C  2D7D               	nop2
  7637                           
  7638                           ;car_block_box_def.c: 448:                     break;
  7639     057D  2DA1               	goto	l4949
  7640     057E                     l4937:
  7641                           
  7642                           ;car_block_box_def.c: 450:                     clcd_print("  ", (0xC0 + 3));
  7643     057E  3044               	movlw	low ((STR_46+15)| (0+32768))
  7644     057F  00F6               	movwf	clcd_print@str
  7645     0580  3090               	movlw	high ((STR_46+15)| (0+32768))
  7646     0581  00F7               	movwf	clcd_print@str+1
  7647     0582  30C3               	movlw	195
  7648     0583  00F8               	movwf	clcd_print@addr
  7649     0584  160A  118A  235A  120A  118A  	fcall	_clcd_print
  7650     0589  2D6E               	goto	l4935
  7651     058A                     l4941:
  7652                           
  7653                           ;car_block_box_def.c: 454:                     clcd_print("  ", (0xC0 + 6));
  7654     058A  3044               	movlw	low ((STR_46+15)| (0+32768))
  7655     058B  00F6               	movwf	clcd_print@str
  7656     058C  3090               	movlw	high ((STR_46+15)| (0+32768))
  7657     058D  00F7               	movwf	clcd_print@str+1
  7658     058E  30C6               	movlw	198
  7659     058F  00F8               	movwf	clcd_print@addr
  7660     0590  160A  118A  235A  120A  118A  	fcall	_clcd_print
  7661     0595  2D6E               	goto	l4935
  7662     0596                     l4947:
  7663     0596  082B               	movf	change_time@blink_pos^(0+128),w
  7664                           
  7665                           ; Switch size 1, requested type "simple"
  7666                           ; Number of cases is 3, Range of values is 0 to 2
  7667                           ; switch strategies available:
  7668                           ; Name         Instructions Cycles
  7669                           ; simple_byte           10     6 (average)
  7670                           ; direct_byte           17     8 (fixed)
  7671                           ; jumptable            260     6 (fixed)
  7672                           ;	Chosen strategy is simple_byte
  7673     0597  3A00               	xorlw	0	; case 0
  7674     0598  1903               	skipnz
  7675     0599  2D63               	goto	l4933
  7676     059A  3A01               	xorlw	1	; case 1
  7677     059B  1903               	skipnz
  7678     059C  2D7E               	goto	l4937
  7679     059D  3A03               	xorlw	3	; case 2
  7680     059E  1903               	skipnz
  7681     059F  2D8A               	goto	l4941
  7682     05A0  2DA1               	goto	l4949
  7683     05A1                     l4949:
  7684                           
  7685                           ;car_block_box_def.c: 462:     clcd_putch(new_time[0] / 10 + '0', (0xC0 + 0));
  7686     05A1  30C0               	movlw	192
  7687     05A2  1283               	bcf	3,5	;RP0=0, select bank0
  7688     05A3  1303               	bcf	3,6	;RP1=0, select bank0
  7689     05A4  00A0               	movwf	clcd_putch@addr
  7690     05A5  300A               	movlw	10
  7691     05A6  00F2               	movwf	___awdiv@divisor
  7692     05A7  3000               	movlw	0
  7693     05A8  00F3               	movwf	___awdiv@divisor+1
  7694     05A9  0852               	movf	change_time@new_time,w
  7695     05AA  00A3               	movwf	??_change_time
  7696     05AB  01A4               	clrf	??_change_time+1
  7697     05AC  0823               	movf	??_change_time,w
  7698     05AD  00F4               	movwf	___awdiv@dividend
  7699     05AE  0824               	movf	??_change_time+1,w
  7700     05AF  00F5               	movwf	___awdiv@dividend+1
  7701     05B0  160A  118A  26D4  120A  118A  	fcall	___awdiv
  7702     05B5  0872               	movf	?___awdiv,w
  7703     05B6  3E30               	addlw	48
  7704     05B7  160A  118A  21D6  120A  118A  	fcall	_clcd_putch
  7705                           
  7706                           ;car_block_box_def.c: 463:     clcd_putch(new_time[0] % 10 + '0', (0xC0 + 1));
  7707     05BC  30C1               	movlw	193
  7708     05BD  1283               	bcf	3,5	;RP0=0, select bank0
  7709     05BE  1303               	bcf	3,6	;RP1=0, select bank0
  7710     05BF  00A0               	movwf	clcd_putch@addr
  7711     05C0  300A               	movlw	10
  7712     05C1  00F2               	movwf	___awmod@divisor
  7713     05C2  3000               	movlw	0
  7714     05C3  00F3               	movwf	___awmod@divisor+1
  7715     05C4  0852               	movf	change_time@new_time,w
  7716     05C5  00A3               	movwf	??_change_time
  7717     05C6  01A4               	clrf	??_change_time+1
  7718     05C7  0823               	movf	??_change_time,w
  7719     05C8  00F4               	movwf	___awmod@dividend
  7720     05C9  0824               	movf	??_change_time+1,w
  7721     05CA  00F5               	movwf	___awmod@dividend+1
  7722     05CB  160A  118A  25C1  120A  118A  	fcall	___awmod
  7723     05D0  0872               	movf	?___awmod,w
  7724     05D1  3E30               	addlw	48
  7725     05D2  160A  118A  21D6  120A  118A  	fcall	_clcd_putch
  7726                           
  7727                           ;car_block_box_def.c: 465:     clcd_putch(':', (0xC0 + 2));
  7728     05D7  30C2               	movlw	194
  7729     05D8  1283               	bcf	3,5	;RP0=0, select bank0
  7730     05D9  1303               	bcf	3,6	;RP1=0, select bank0
  7731     05DA  00A0               	movwf	clcd_putch@addr
  7732     05DB  303A               	movlw	58
  7733     05DC  160A  118A  21D6  120A  118A  	fcall	_clcd_putch
  7734                           
  7735                           ;car_block_box_def.c: 467:     clcd_putch(new_time[1] / 10 + '0', (0xC0 + 3));
  7736     05E1  30C3               	movlw	195
  7737     05E2  1283               	bcf	3,5	;RP0=0, select bank0
  7738     05E3  1303               	bcf	3,6	;RP1=0, select bank0
  7739     05E4  00A0               	movwf	clcd_putch@addr
  7740     05E5  300A               	movlw	10
  7741     05E6  00F2               	movwf	___awdiv@divisor
  7742     05E7  3000               	movlw	0
  7743     05E8  00F3               	movwf	___awdiv@divisor+1
  7744     05E9  0853               	movf	change_time@new_time+1,w
  7745     05EA  00A3               	movwf	??_change_time
  7746     05EB  01A4               	clrf	??_change_time+1
  7747     05EC  0823               	movf	??_change_time,w
  7748     05ED  00F4               	movwf	___awdiv@dividend
  7749     05EE  0824               	movf	??_change_time+1,w
  7750     05EF  00F5               	movwf	___awdiv@dividend+1
  7751     05F0  160A  118A  26D4  120A  118A  	fcall	___awdiv
  7752     05F5  0872               	movf	?___awdiv,w
  7753     05F6  3E30               	addlw	48
  7754     05F7  160A  118A  21D6  120A  118A  	fcall	_clcd_putch
  7755                           
  7756                           ;car_block_box_def.c: 468:     clcd_putch(new_time[1] % 10 + '0', (0xC0 + 4));
  7757     05FC  30C4               	movlw	196
  7758     05FD  1283               	bcf	3,5	;RP0=0, select bank0
  7759     05FE  1303               	bcf	3,6	;RP1=0, select bank0
  7760     05FF  00A0               	movwf	clcd_putch@addr
  7761     0600  300A               	movlw	10
  7762     0601  00F2               	movwf	___awmod@divisor
  7763     0602  3000               	movlw	0
  7764     0603  00F3               	movwf	___awmod@divisor+1
  7765     0604  0853               	movf	change_time@new_time+1,w
  7766     0605  00A3               	movwf	??_change_time
  7767     0606  01A4               	clrf	??_change_time+1
  7768     0607  0823               	movf	??_change_time,w
  7769     0608  00F4               	movwf	___awmod@dividend
  7770     0609  0824               	movf	??_change_time+1,w
  7771     060A  00F5               	movwf	___awmod@dividend+1
  7772     060B  160A  118A  25C1  120A  118A  	fcall	___awmod
  7773     0610  0872               	movf	?___awmod,w
  7774     0611  3E30               	addlw	48
  7775     0612  160A  118A  21D6  120A  118A  	fcall	_clcd_putch
  7776                           
  7777                           ;car_block_box_def.c: 470:     clcd_putch(':', (0xC0 + 5));
  7778     0617  30C5               	movlw	197
  7779     0618  1283               	bcf	3,5	;RP0=0, select bank0
  7780     0619  1303               	bcf	3,6	;RP1=0, select bank0
  7781     061A  00A0               	movwf	clcd_putch@addr
  7782     061B  303A               	movlw	58
  7783     061C  160A  118A  21D6  120A  118A  	fcall	_clcd_putch
  7784                           
  7785                           ;car_block_box_def.c: 472:     clcd_putch(new_time[2]/ 10 + '0', (0xC0 + 6));
  7786     0621  30C6               	movlw	198
  7787     0622  1283               	bcf	3,5	;RP0=0, select bank0
  7788     0623  1303               	bcf	3,6	;RP1=0, select bank0
  7789     0624  00A0               	movwf	clcd_putch@addr
  7790     0625  300A               	movlw	10
  7791     0626  00F2               	movwf	___awdiv@divisor
  7792     0627  3000               	movlw	0
  7793     0628  00F3               	movwf	___awdiv@divisor+1
  7794     0629  0854               	movf	change_time@new_time+2,w
  7795     062A  00A3               	movwf	??_change_time
  7796     062B  01A4               	clrf	??_change_time+1
  7797     062C  0823               	movf	??_change_time,w
  7798     062D  00F4               	movwf	___awdiv@dividend
  7799     062E  0824               	movf	??_change_time+1,w
  7800     062F  00F5               	movwf	___awdiv@dividend+1
  7801     0630  160A  118A  26D4  120A  118A  	fcall	___awdiv
  7802     0635  0872               	movf	?___awdiv,w
  7803     0636  3E30               	addlw	48
  7804     0637  160A  118A  21D6  120A  118A  	fcall	_clcd_putch
  7805                           
  7806                           ;car_block_box_def.c: 473:     clcd_putch(new_time[2] % 10 + '0', (0xC0 + 7));
  7807     063C  30C7               	movlw	199
  7808     063D  1283               	bcf	3,5	;RP0=0, select bank0
  7809     063E  1303               	bcf	3,6	;RP1=0, select bank0
  7810     063F  00A0               	movwf	clcd_putch@addr
  7811     0640  300A               	movlw	10
  7812     0641  00F2               	movwf	___awmod@divisor
  7813     0642  3000               	movlw	0
  7814     0643  00F3               	movwf	___awmod@divisor+1
  7815     0644  0854               	movf	change_time@new_time+2,w
  7816     0645  00A3               	movwf	??_change_time
  7817     0646  01A4               	clrf	??_change_time+1
  7818     0647  0823               	movf	??_change_time,w
  7819     0648  00F4               	movwf	___awmod@dividend
  7820     0649  0824               	movf	??_change_time+1,w
  7821     064A  00F5               	movwf	___awmod@dividend+1
  7822     064B  160A  118A  25C1  120A  118A  	fcall	___awmod
  7823     0650  0872               	movf	?___awmod,w
  7824     0651  3E30               	addlw	48
  7825     0652  160A  118A  21D6  120A  118A  	fcall	_clcd_putch
  7826     0657  2BF5               	goto	l4867
  7827     0658                     l406:
  7828     0658  0008               	return
  7829     0659                     __end_of_change_time:
  7830                           
  7831                           	psect	text27
  7832     1204                     __ptext27:	
  7833 ;; *************** function _write_ds1307 *****************
  7834 ;; Defined at:
  7835 ;;		line 29 in file "ds1307.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  addr            1    wreg     unsigned char 
  7838 ;;  data            1    3[COMMON] unsigned char 
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;  addr            1    4[COMMON] unsigned char 
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  1    wreg      void 
  7843 ;; Registers used:
  7844 ;;		wreg, status,2, status,0, pclath, cstack
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7850 ;;      Params:         1       0       0       0       0
  7851 ;;      Locals:         1       0       0       0       0
  7852 ;;      Temps:          0       0       0       0       0
  7853 ;;      Totals:         2       0       0       0       0
  7854 ;;Total ram usage:        2 bytes
  7855 ;; Hardware stack levels used: 1
  7856 ;; Hardware stack levels required when called: 3
  7857 ;; This function calls:
  7858 ;;		_i2c_start
  7859 ;;		_i2c_stop
  7860 ;;		_i2c_write
  7861 ;; This function is called by:
  7862 ;;		_init_ds1307
  7863 ;;		_change_time
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867     1204                     _write_ds1307:	
  7868                           ;psect for function _write_ds1307
  7869                           
  7870                           
  7871                           ;incstack = 0
  7872                           ; Regs used in _write_ds1307: [wreg+status,2+status,0+pclath+cstack]
  7873                           ;write_ds1307@addr stored from wreg
  7874     1204  00F4               	movwf	write_ds1307@addr
  7875     1205                     l4187:
  7876                           
  7877                           ;ds1307.c: 29: void write_ds1307(unsigned char addr, unsigned char data);ds1307.c: 30: {
      +                          ;ds1307.c: 31:     i2c_start();
  7878     1205  160A  158A  2762  160A  118A  	fcall	_i2c_start
  7879                           
  7880                           ;ds1307.c: 32:     i2c_write(0b11010000);
  7881     120A  30D0               	movlw	208
  7882     120B  160A  158A  2774  160A  118A  	fcall	_i2c_write
  7883                           
  7884                           ;ds1307.c: 33:     i2c_write(addr);
  7885     1210  0874               	movf	write_ds1307@addr,w
  7886     1211  160A  158A  2774  160A  118A  	fcall	_i2c_write
  7887                           
  7888                           ;ds1307.c: 34:     i2c_write(data);
  7889     1216  0873               	movf	write_ds1307@data,w
  7890     1217  160A  158A  2774  160A  118A  	fcall	_i2c_write
  7891                           
  7892                           ;ds1307.c: 35:     i2c_stop();
  7893     121C  160A  158A  276B  160A  118A  	fcall	_i2c_stop
  7894     1221                     l55:
  7895     1221  0008               	return
  7896     1222                     __end_of_write_ds1307:
  7897                           
  7898                           	psect	text28
  7899     1520                     __ptext28:	
  7900 ;; *************** function _get_time *****************
  7901 ;; Defined at:
  7902 ;;		line 10 in file "car_block_box_def.c"
  7903 ;; Parameters:    Size  Location     Type
  7904 ;;		None
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;		None
  7907 ;; Return value:  Size  Location     Type
  7908 ;;                  1    wreg      void 
  7909 ;; Registers used:
  7910 ;;		wreg, status,2, status,0, pclath, cstack
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7916 ;;      Params:         0       0       0       0       0
  7917 ;;      Locals:         0       0       0       0       0
  7918 ;;      Temps:          1       0       0       0       0
  7919 ;;      Totals:         1       0       0       0       0
  7920 ;;Total ram usage:        1 bytes
  7921 ;; Hardware stack levels used: 1
  7922 ;; Hardware stack levels required when called: 5
  7923 ;; This function calls:
  7924 ;;		_read_ds1307
  7925 ;; This function is called by:
  7926 ;;		_display_time
  7927 ;;		_log_car_event
  7928 ;;		_change_time
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932     1520                     _get_time:	
  7933                           ;psect for function _get_time
  7934                           
  7935     1520                     l4199:	
  7936                           ;incstack = 0
  7937                           ; Regs used in _get_time: [wreg+status,2+status,0+pclath+cstack]
  7938                           
  7939                           
  7940                           ;car_block_box_def.c: 12:     clock_reg[0] = read_ds1307(0x02);
  7941     1520  3002               	movlw	2
  7942     1521  160A  118A  22D7  160A  118A  	fcall	_read_ds1307
  7943     1526  1683               	bsf	3,5	;RP0=1, select bank1
  7944     1527  1303               	bcf	3,6	;RP1=0, select bank1
  7945     1528  00A0               	movwf	_clock_reg^(0+128)
  7946                           
  7947                           ;car_block_box_def.c: 13:     clock_reg[1] = read_ds1307(0x01);
  7948     1529  3001               	movlw	1
  7949     152A  160A  118A  22D7  160A  118A  	fcall	_read_ds1307
  7950     152F  1683               	bsf	3,5	;RP0=1, select bank1
  7951     1530  1303               	bcf	3,6	;RP1=0, select bank1
  7952     1531  00A1               	movwf	(_clock_reg^(0+128)+1)
  7953                           
  7954                           ;car_block_box_def.c: 14:     clock_reg[2] = read_ds1307(0x00);
  7955     1532  3000               	movlw	0
  7956     1533  160A  118A  22D7  160A  118A  	fcall	_read_ds1307
  7957     1538  1683               	bsf	3,5	;RP0=1, select bank1
  7958     1539  1303               	bcf	3,6	;RP1=0, select bank1
  7959     153A  00A2               	movwf	(_clock_reg^(0+128)+2)
  7960     153B                     l4201:
  7961                           
  7962                           ;car_block_box_def.c: 17:     time[0] = ((clock_reg[0] >> 4) & 0x03) + '0';
  7963     153B  0820               	movf	_clock_reg^(0+128),w
  7964     153C  00F6               	movwf	??_get_time
  7965     153D  3004               	movlw	4
  7966     153E                     u4115:
  7967     153E  1003               	clrc
  7968     153F  0CF6               	rrf	??_get_time,f
  7969     1540  3EFF               	addlw	-1
  7970     1541  1D03               	skipz
  7971     1542  2D3E               	goto	u4115
  7972     1543  0876               	movf	??_get_time,w
  7973     1544  3903               	andlw	3
  7974     1545  3E30               	addlw	48
  7975     1546  00C2               	movwf	_time^(0+128)
  7976     1547                     l4203:
  7977                           
  7978                           ;car_block_box_def.c: 18:     time[1] = (clock_reg[0] & 0x0F) + '0';
  7979     1547  0820               	movf	_clock_reg^(0+128),w
  7980     1548  390F               	andlw	15
  7981     1549  3E30               	addlw	48
  7982     154A  00C3               	movwf	(_time^(0+128)+1)
  7983     154B                     l4205:
  7984                           
  7985                           ;car_block_box_def.c: 21:     time[2] = ((clock_reg[1] >> 4) & 0x07) + '0';
  7986     154B  0821               	movf	(_clock_reg^(0+128)+1),w
  7987     154C  00F6               	movwf	??_get_time
  7988     154D  3004               	movlw	4
  7989     154E                     u4125:
  7990     154E  1003               	clrc
  7991     154F  0CF6               	rrf	??_get_time,f
  7992     1550  3EFF               	addlw	-1
  7993     1551  1D03               	skipz
  7994     1552  2D4E               	goto	u4125
  7995     1553  0876               	movf	??_get_time,w
  7996     1554  3907               	andlw	7
  7997     1555  3E30               	addlw	48
  7998     1556  00C4               	movwf	(_time^(0+128)+2)
  7999     1557                     l4207:
  8000                           
  8001                           ;car_block_box_def.c: 22:     time[3] = (clock_reg[1] & 0x0F) + '0';
  8002     1557  0821               	movf	(_clock_reg^(0+128)+1),w
  8003     1558  390F               	andlw	15
  8004     1559  3E30               	addlw	48
  8005     155A  00C5               	movwf	(_time^(0+128)+3)
  8006     155B                     l4209:
  8007                           
  8008                           ;car_block_box_def.c: 25:     time[4] = ((clock_reg[2] >> 4) & 0x07) + '0';
  8009     155B  0822               	movf	(_clock_reg^(0+128)+2),w
  8010     155C  00F6               	movwf	??_get_time
  8011     155D  3004               	movlw	4
  8012     155E                     u4135:
  8013     155E  1003               	clrc
  8014     155F  0CF6               	rrf	??_get_time,f
  8015     1560  3EFF               	addlw	-1
  8016     1561  1D03               	skipz
  8017     1562  2D5E               	goto	u4135
  8018     1563  0876               	movf	??_get_time,w
  8019     1564  3907               	andlw	7
  8020     1565  3E30               	addlw	48
  8021     1566  00C6               	movwf	(_time^(0+128)+4)
  8022     1567                     l4211:
  8023                           
  8024                           ;car_block_box_def.c: 26:     time[5] = (clock_reg[2] & 0x0F) + '0';
  8025     1567  0822               	movf	(_clock_reg^(0+128)+2),w
  8026     1568  390F               	andlw	15
  8027     1569  3E30               	addlw	48
  8028     156A  00C7               	movwf	(_time^(0+128)+5)
  8029     156B                     l4213:
  8030                           
  8031                           ;car_block_box_def.c: 27:     time[6] = '\0';
  8032     156B  01C8               	clrf	(_time^(0+128)+6)
  8033     156C                     l313:
  8034     156C  0008               	return
  8035     156D                     __end_of_get_time:
  8036                           
  8037                           	psect	text29
  8038     12D7                     __ptext29:	
  8039 ;; *************** function _read_ds1307 *****************
  8040 ;; Defined at:
  8041 ;;		line 14 in file "ds1307.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  addr            1    wreg     unsigned char 
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;  addr            1    4[COMMON] unsigned char 
  8046 ;;  data            1    5[COMMON] unsigned char 
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1    wreg      unsigned char 
  8049 ;; Registers used:
  8050 ;;		wreg, status,2, status,0, pclath, cstack
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8056 ;;      Params:         0       0       0       0       0
  8057 ;;      Locals:         2       0       0       0       0
  8058 ;;      Temps:          0       0       0       0       0
  8059 ;;      Totals:         2       0       0       0       0
  8060 ;;Total ram usage:        2 bytes
  8061 ;; Hardware stack levels used: 1
  8062 ;; Hardware stack levels required when called: 4
  8063 ;; This function calls:
  8064 ;;		_i2c_read
  8065 ;;		_i2c_rep_start
  8066 ;;		_i2c_start
  8067 ;;		_i2c_stop
  8068 ;;		_i2c_write
  8069 ;; This function is called by:
  8070 ;;		_init_ds1307
  8071 ;;		_get_time
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075     12D7                     _read_ds1307:	
  8076                           ;psect for function _read_ds1307
  8077                           
  8078                           
  8079                           ;incstack = 0
  8080                           ; Regs used in _read_ds1307: [wreg+status,2+status,0+pclath+cstack]
  8081                           ;read_ds1307@addr stored from wreg
  8082     12D7  00F4               	movwf	read_ds1307@addr
  8083     12D8                     l4151:
  8084                           
  8085                           ;ds1307.c: 14: unsigned char read_ds1307(unsigned char addr);ds1307.c: 15: {;ds1307.c: 1
      +                          6:     unsigned char data;;ds1307.c: 18:     i2c_start();
  8086     12D8  160A  158A  2762  160A  118A  	fcall	_i2c_start
  8087                           
  8088                           ;ds1307.c: 19:     i2c_write(0b11010000);
  8089     12DD  30D0               	movlw	208
  8090     12DE  160A  158A  2774  160A  118A  	fcall	_i2c_write
  8091                           
  8092                           ;ds1307.c: 20:     i2c_write(addr);
  8093     12E3  0874               	movf	read_ds1307@addr,w
  8094     12E4  160A  158A  2774  160A  118A  	fcall	_i2c_write
  8095                           
  8096                           ;ds1307.c: 21:     i2c_rep_start();
  8097     12E9  160A  158A  277F  160A  118A  	fcall	_i2c_rep_start
  8098                           
  8099                           ;ds1307.c: 22:     i2c_write(0b11010001);
  8100     12EE  30D1               	movlw	209
  8101     12EF  160A  158A  2774  160A  118A  	fcall	_i2c_write
  8102                           
  8103                           ;ds1307.c: 23:     data = i2c_read(0);
  8104     12F4  3000               	movlw	0
  8105     12F5  160A  118A  2222  160A  118A  	fcall	_i2c_read
  8106     12FA  00F5               	movwf	read_ds1307@data
  8107                           
  8108                           ;ds1307.c: 24:     i2c_stop();
  8109     12FB  160A  158A  276B  160A  118A  	fcall	_i2c_stop
  8110     1300                     l4153:
  8111                           
  8112                           ;ds1307.c: 26:     return data;
  8113     1300  0875               	movf	read_ds1307@data,w
  8114     1301                     l52:
  8115     1301  0008               	return
  8116     1302                     __end_of_read_ds1307:
  8117                           
  8118                           	psect	text30
  8119     1F7F                     __ptext30:	
  8120 ;; *************** function _i2c_rep_start *****************
  8121 ;; Defined at:
  8122 ;;		line 28 in file "i2c.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;		None
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;		None
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1    wreg      void 
  8129 ;; Registers used:
  8130 ;;		wreg, status,2, status,0, pclath, cstack
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8136 ;;      Params:         0       0       0       0       0
  8137 ;;      Locals:         0       0       0       0       0
  8138 ;;      Temps:          0       0       0       0       0
  8139 ;;      Totals:         0       0       0       0       0
  8140 ;;Total ram usage:        0 bytes
  8141 ;; Hardware stack levels used: 1
  8142 ;; Hardware stack levels required when called: 3
  8143 ;; This function calls:
  8144 ;;		_i2c_start
  8145 ;;		_i2c_stop
  8146 ;; This function is called by:
  8147 ;;		_read_ds1307
  8148 ;;		_read_at24c04
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           
  8152     1F7F                     _i2c_rep_start:	
  8153                           ;psect for function _i2c_rep_start
  8154                           
  8155     1F7F                     l4115:	
  8156                           ;incstack = 0
  8157                           ; Regs used in _i2c_rep_start: [wreg+status,2+status,0+pclath+cstack]
  8158                           
  8159                           
  8160                           ;i2c.c: 30:     i2c_stop();
  8161     1F7F  160A  158A  276B  160A  158A  	fcall	_i2c_stop
  8162                           
  8163                           ;i2c.c: 31:     i2c_start();
  8164     1F84  160A  158A  2762  160A  158A  	fcall	_i2c_start
  8165     1F89                     l96:
  8166     1F89  0008               	return
  8167     1F8A                     __end_of_i2c_rep_start:
  8168                           
  8169                           	psect	text31
  8170     1222                     __ptext31:	
  8171 ;; *************** function _i2c_read *****************
  8172 ;; Defined at:
  8173 ;;		line 41 in file "i2c.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;  ack             1    wreg     unsigned char 
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;  ack             1    2[COMMON] unsigned char 
  8178 ;;  data            1    3[COMMON] unsigned char 
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1    wreg      unsigned char 
  8181 ;; Registers used:
  8182 ;;		wreg, status,2, status,0, pclath, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8188 ;;      Params:         0       0       0       0       0
  8189 ;;      Locals:         2       0       0       0       0
  8190 ;;      Temps:          0       0       0       0       0
  8191 ;;      Totals:         2       0       0       0       0
  8192 ;;Total ram usage:        2 bytes
  8193 ;; Hardware stack levels used: 1
  8194 ;; Hardware stack levels required when called: 2
  8195 ;; This function calls:
  8196 ;;		_i2c_wait_for_idle
  8197 ;; This function is called by:
  8198 ;;		_read_ds1307
  8199 ;;		_read_at24c04
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203     1222                     _i2c_read:	
  8204                           ;psect for function _i2c_read
  8205                           
  8206                           
  8207                           ;incstack = 0
  8208                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  8209                           ;i2c_read@ack stored from wreg
  8210     1222  00F2               	movwf	i2c_read@ack
  8211     1223                     l4117:
  8212                           
  8213                           ;i2c.c: 41: unsigned char i2c_read(unsigned char ack);i2c.c: 42: {;i2c.c: 43:     unsign
      +                          ed char data;;i2c.c: 45:     i2c_wait_for_idle();
  8214     1223  160A  158A  27AB  160A  118A  	fcall	_i2c_wait_for_idle
  8215     1228                     l4119:
  8216                           
  8217                           ;i2c.c: 46:     RCEN = 1;
  8218     1228  1683               	bsf	3,5	;RP0=1, select bank1
  8219     1229  1303               	bcf	3,6	;RP1=0, select bank1
  8220     122A  1591               	bsf	17,3	;volatile
  8221                           
  8222                           ;i2c.c: 48:     i2c_wait_for_idle();
  8223     122B  160A  158A  27AB  160A  118A  	fcall	_i2c_wait_for_idle
  8224     1230                     l4121:
  8225                           
  8226                           ;i2c.c: 49:     data = SSPBUF;
  8227     1230  1283               	bcf	3,5	;RP0=0, select bank0
  8228     1231  1303               	bcf	3,6	;RP1=0, select bank0
  8229     1232  0813               	movf	19,w	;volatile
  8230     1233  00F3               	movwf	i2c_read@data
  8231     1234                     l4123:
  8232                           
  8233                           ;i2c.c: 51:     if (ack == 1)
  8234     1234  0372               	decf	i2c_read@ack,w
  8235     1235  1D03               	btfss	3,2
  8236     1236  2A38               	goto	u4061
  8237     1237  2A39               	goto	u4060
  8238     1238                     u4061:
  8239     1238  2A3D               	goto	l102
  8240     1239                     u4060:
  8241     1239                     l4125:
  8242                           
  8243                           ;i2c.c: 52:     {;i2c.c: 53:         ACKDT = 1;
  8244     1239  1683               	bsf	3,5	;RP0=1, select bank1
  8245     123A  1303               	bcf	3,6	;RP1=0, select bank1
  8246     123B  1691               	bsf	17,5	;volatile
  8247                           
  8248                           ;i2c.c: 54:     }
  8249     123C  2A41               	goto	l4127
  8250     123D                     l102:	
  8251                           ;i2c.c: 55:     else
  8252                           
  8253                           
  8254                           ;i2c.c: 56:     {;i2c.c: 57:         ACKDT = 0;
  8255     123D  1683               	bsf	3,5	;RP0=1, select bank1
  8256     123E  1303               	bcf	3,6	;RP1=0, select bank1
  8257     123F  1291               	bcf	17,5	;volatile
  8258                           
  8259                           ;i2c.c: 58:         ACKEN = 1;
  8260     1240  1611               	bsf	17,4	;volatile
  8261     1241                     l4127:
  8262                           
  8263                           ;i2c.c: 63:     return data;
  8264     1241  0873               	movf	i2c_read@data,w
  8265     1242                     l104:
  8266     1242  0008               	return
  8267     1243                     __end_of_i2c_read:
  8268                           
  8269                           	psect	text32
  8270     1FB8                     __ptext32:	
  8271 ;; *************** function _clear_clcd_screen *****************
  8272 ;; Defined at:
  8273 ;;		line 600 in file "car_block_box_def.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;		None
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;		None
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      void 
  8280 ;; Registers used:
  8281 ;;		wreg, status,2, status,0, pclath, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8287 ;;      Params:         0       0       0       0       0
  8288 ;;      Locals:         0       0       0       0       0
  8289 ;;      Temps:          2       0       0       0       0
  8290 ;;      Totals:         2       0       0       0       0
  8291 ;;Total ram usage:        2 bytes
  8292 ;; Hardware stack levels used: 1
  8293 ;; Hardware stack levels required when called: 2
  8294 ;; This function calls:
  8295 ;;		_clcd_write
  8296 ;; This function is called by:
  8297 ;;		_main
  8298 ;;		_login
  8299 ;;		_menu_screen
  8300 ;;		_clear_log
  8301 ;;		_change_time
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305     1FB8                     _clear_clcd_screen:	
  8306                           ;psect for function _clear_clcd_screen
  8307                           
  8308     1FB8                     l4293:	
  8309                           ;incstack = 0
  8310                           ; Regs used in _clear_clcd_screen: [wreg+status,2+status,0+pclath+cstack]
  8311                           
  8312                           
  8313                           ;car_block_box_def.c: 602:     clcd_write(0x01, 0);
  8314     1FB8  01F2               	clrf	clcd_write@mode
  8315     1FB9  3001               	movlw	1
  8316     1FBA  160A  118A  2421  160A  158A  	fcall	_clcd_write
  8317     1FBF                     l4295:
  8318                           
  8319                           ;car_block_box_def.c: 603:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  8320     1FBF  3004               	movlw	4
  8321     1FC0  00F7               	movwf	??_clear_clcd_screen+1
  8322     1FC1  303D               	movlw	61
  8323     1FC2  00F6               	movwf	??_clear_clcd_screen
  8324     1FC3                     u6237:
  8325     1FC3  0BF6               	decfsz	??_clear_clcd_screen,f
  8326     1FC4  2FC3               	goto	u6237
  8327     1FC5  0BF7               	decfsz	??_clear_clcd_screen+1,f
  8328     1FC6  2FC3               	goto	u6237
  8329     1FC7  2FC8               	nop2
  8330     1FC8                     l458:
  8331     1FC8  0008               	return
  8332     1FC9                     __end_of_clear_clcd_screen:
  8333                           
  8334                           	psect	text33
  8335     1FED                     __ptext33:	
  8336 ;; *************** function ___bmul *****************
  8337 ;; Defined at:
  8338 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  multiplier      1    wreg     unsigned char 
  8341 ;;  multiplicand    1    2[COMMON] unsigned char 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;  multiplier      1    4[COMMON] unsigned char 
  8344 ;;  product         1    3[COMMON] unsigned char 
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  1    wreg      unsigned char 
  8347 ;; Registers used:
  8348 ;;		wreg, status,2, status,0
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8354 ;;      Params:         1       0       0       0       0
  8355 ;;      Locals:         2       0       0       0       0
  8356 ;;      Temps:          0       0       0       0       0
  8357 ;;      Totals:         3       0       0       0       0
  8358 ;;Total ram usage:        3 bytes
  8359 ;; Hardware stack levels used: 1
  8360 ;; Hardware stack levels required when called: 1
  8361 ;; This function calls:
  8362 ;;		Nothing
  8363 ;; This function is called by:
  8364 ;;		_record_log
  8365 ;;		_view_log
  8366 ;;		_download_log
  8367 ;;		_change_time
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371     1FED                     ___bmul:	
  8372                           ;psect for function ___bmul
  8373                           
  8374                           
  8375                           ;incstack = 0
  8376                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8377                           ;___bmul@multiplier stored from wreg
  8378     1FED  00F4               	movwf	___bmul@multiplier
  8379     1FEE                     l4217:
  8380     1FEE  01F3               	clrf	___bmul@product
  8381     1FEF                     l4219:
  8382     1FEF  1C74               	btfss	___bmul@multiplier,0
  8383     1FF0  2FF2               	goto	u4151
  8384     1FF1  2FF3               	goto	u4150
  8385     1FF2                     u4151:
  8386     1FF2  2FF5               	goto	l4223
  8387     1FF3                     u4150:
  8388     1FF3                     l4221:
  8389     1FF3  0872               	movf	___bmul@multiplicand,w
  8390     1FF4  07F3               	addwf	___bmul@product,f
  8391     1FF5                     l4223:
  8392     1FF5  1003               	clrc
  8393     1FF6  0DF2               	rlf	___bmul@multiplicand,f
  8394     1FF7                     l4225:
  8395     1FF7  1003               	clrc
  8396     1FF8  0CF4               	rrf	___bmul@multiplier,f
  8397     1FF9  0874               	movf	___bmul@multiplier,w
  8398     1FFA  1D03               	btfss	3,2
  8399     1FFB  2FFD               	goto	u4161
  8400     1FFC  2FFE               	goto	u4160
  8401     1FFD                     u4161:
  8402     1FFD  2FEF               	goto	l4219
  8403     1FFE                     u4160:
  8404     1FFE                     l4227:
  8405     1FFE  0873               	movf	___bmul@product,w
  8406     1FFF                     l660:
  8407     1FFF  0008               	return
  8408     2000                     __end_of___bmul:
  8409                           
  8410                           	psect	text34
  8411     15C1                     __ptext34:	
  8412 ;; *************** function ___awmod *****************
  8413 ;; Defined at:
  8414 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;  divisor         2    2[COMMON] int 
  8417 ;;  dividend        2    4[COMMON] int 
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;  sign            1    7[COMMON] unsigned char 
  8420 ;;  counter         1    6[COMMON] unsigned char 
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  2    2[COMMON] int 
  8423 ;; Registers used:
  8424 ;;		wreg, status,2, status,0
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8430 ;;      Params:         4       0       0       0       0
  8431 ;;      Locals:         2       0       0       0       0
  8432 ;;      Temps:          0       0       0       0       0
  8433 ;;      Totals:         6       0       0       0       0
  8434 ;;Total ram usage:        6 bytes
  8435 ;; Hardware stack levels used: 1
  8436 ;; Hardware stack levels required when called: 1
  8437 ;; This function calls:
  8438 ;;		Nothing
  8439 ;; This function is called by:
  8440 ;;		_display_dashboard
  8441 ;;		_log_car_event
  8442 ;;		_login
  8443 ;;		_view_log
  8444 ;;		_change_time
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448     15C1                     ___awmod:	
  8449                           ;psect for function ___awmod
  8450                           
  8451     15C1                     l4405:	
  8452                           ;incstack = 0
  8453                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8454                           
  8455     15C1  01F7               	clrf	___awmod@sign
  8456     15C2                     l4407:
  8457     15C2  1FF5               	btfss	___awmod@dividend+1,7
  8458     15C3  2DC5               	goto	u4471
  8459     15C4  2DC6               	goto	u4470
  8460     15C5                     u4471:
  8461     15C5  2DCD               	goto	l4413
  8462     15C6                     u4470:
  8463     15C6                     l4409:
  8464     15C6  09F4               	comf	___awmod@dividend,f
  8465     15C7  09F5               	comf	___awmod@dividend+1,f
  8466     15C8  0AF4               	incf	___awmod@dividend,f
  8467     15C9  1903               	skipnz
  8468     15CA  0AF5               	incf	___awmod@dividend+1,f
  8469     15CB                     l4411:
  8470     15CB  3001               	movlw	1
  8471     15CC  00F7               	movwf	___awmod@sign
  8472     15CD                     l4413:
  8473     15CD  1FF3               	btfss	___awmod@divisor+1,7
  8474     15CE  2DD0               	goto	u4481
  8475     15CF  2DD1               	goto	u4480
  8476     15D0                     u4481:
  8477     15D0  2DD6               	goto	l4417
  8478     15D1                     u4480:
  8479     15D1                     l4415:
  8480     15D1  09F2               	comf	___awmod@divisor,f
  8481     15D2  09F3               	comf	___awmod@divisor+1,f
  8482     15D3  0AF2               	incf	___awmod@divisor,f
  8483     15D4  1903               	skipnz
  8484     15D5  0AF3               	incf	___awmod@divisor+1,f
  8485     15D6                     l4417:
  8486     15D6  0872               	movf	___awmod@divisor,w
  8487     15D7  0473               	iorwf	___awmod@divisor+1,w
  8488     15D8  1903               	btfsc	3,2
  8489     15D9  2DDB               	goto	u4491
  8490     15DA  2DDC               	goto	u4490
  8491     15DB                     u4491:
  8492     15DB  2E09               	goto	l4435
  8493     15DC                     u4490:
  8494     15DC                     l4419:
  8495     15DC  3001               	movlw	1
  8496     15DD  00F6               	movwf	___awmod@counter
  8497     15DE  2DE8               	goto	l4425
  8498     15DF                     l4421:
  8499     15DF  3001               	movlw	1
  8500     15E0                     u4505:
  8501     15E0  1003               	clrc
  8502     15E1  0DF2               	rlf	___awmod@divisor,f
  8503     15E2  0DF3               	rlf	___awmod@divisor+1,f
  8504     15E3  3EFF               	addlw	-1
  8505     15E4  1D03               	skipz
  8506     15E5  2DE0               	goto	u4505
  8507     15E6                     l4423:
  8508     15E6  3001               	movlw	1
  8509     15E7  07F6               	addwf	___awmod@counter,f
  8510     15E8                     l4425:
  8511     15E8  1FF3               	btfss	___awmod@divisor+1,7
  8512     15E9  2DEB               	goto	u4511
  8513     15EA  2DEC               	goto	u4510
  8514     15EB                     u4511:
  8515     15EB  2DDF               	goto	l4421
  8516     15EC                     u4510:
  8517     15EC                     l4427:
  8518     15EC  0873               	movf	___awmod@divisor+1,w
  8519     15ED  0275               	subwf	___awmod@dividend+1,w
  8520     15EE  1D03               	skipz
  8521     15EF  2DF2               	goto	u4525
  8522     15F0  0872               	movf	___awmod@divisor,w
  8523     15F1  0274               	subwf	___awmod@dividend,w
  8524     15F2                     u4525:
  8525     15F2  1C03               	skipc
  8526     15F3  2DF5               	goto	u4521
  8527     15F4  2DF6               	goto	u4520
  8528     15F5                     u4521:
  8529     15F5  2DFC               	goto	l4431
  8530     15F6                     u4520:
  8531     15F6                     l4429:
  8532     15F6  0872               	movf	___awmod@divisor,w
  8533     15F7  02F4               	subwf	___awmod@dividend,f
  8534     15F8  0873               	movf	___awmod@divisor+1,w
  8535     15F9  1C03               	skipc
  8536     15FA  03F5               	decf	___awmod@dividend+1,f
  8537     15FB  02F5               	subwf	___awmod@dividend+1,f
  8538     15FC                     l4431:
  8539     15FC  3001               	movlw	1
  8540     15FD                     u4535:
  8541     15FD  1003               	clrc
  8542     15FE  0CF3               	rrf	___awmod@divisor+1,f
  8543     15FF  0CF2               	rrf	___awmod@divisor,f
  8544     1600  3EFF               	addlw	-1
  8545     1601  1D03               	skipz
  8546     1602  2DFD               	goto	u4535
  8547     1603                     l4433:
  8548     1603  3001               	movlw	1
  8549     1604  02F6               	subwf	___awmod@counter,f
  8550     1605  1D03               	btfss	3,2
  8551     1606  2E08               	goto	u4541
  8552     1607  2E09               	goto	u4540
  8553     1608                     u4541:
  8554     1608  2DEC               	goto	l4427
  8555     1609                     u4540:
  8556     1609                     l4435:
  8557     1609  0877               	movf	___awmod@sign,w
  8558     160A  1903               	btfsc	3,2
  8559     160B  2E0D               	goto	u4551
  8560     160C  2E0E               	goto	u4550
  8561     160D                     u4551:
  8562     160D  2E13               	goto	l4439
  8563     160E                     u4550:
  8564     160E                     l4437:
  8565     160E  09F4               	comf	___awmod@dividend,f
  8566     160F  09F5               	comf	___awmod@dividend+1,f
  8567     1610  0AF4               	incf	___awmod@dividend,f
  8568     1611  1903               	skipnz
  8569     1612  0AF5               	incf	___awmod@dividend+1,f
  8570     1613                     l4439:
  8571     1613  0875               	movf	___awmod@dividend+1,w
  8572     1614  00F3               	movwf	?___awmod+1
  8573     1615  0874               	movf	___awmod@dividend,w
  8574     1616  00F2               	movwf	?___awmod
  8575     1617                     l800:
  8576     1617  0008               	return
  8577     1618                     __end_of___awmod:
  8578                           
  8579                           	psect	text35
  8580     16D4                     __ptext35:	
  8581 ;; *************** function ___awdiv *****************
  8582 ;; Defined at:
  8583 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;  divisor         2    2[COMMON] int 
  8586 ;;  dividend        2    4[COMMON] int 
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;  quotient        2    8[COMMON] int 
  8589 ;;  sign            1    7[COMMON] unsigned char 
  8590 ;;  counter         1    6[COMMON] unsigned char 
  8591 ;; Return value:  Size  Location     Type
  8592 ;;                  2    2[COMMON] int 
  8593 ;; Registers used:
  8594 ;;		wreg, status,2, status,0
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8600 ;;      Params:         4       0       0       0       0
  8601 ;;      Locals:         4       0       0       0       0
  8602 ;;      Temps:          0       0       0       0       0
  8603 ;;      Totals:         8       0       0       0       0
  8604 ;;Total ram usage:        8 bytes
  8605 ;; Hardware stack levels used: 1
  8606 ;; Hardware stack levels required when called: 1
  8607 ;; This function calls:
  8608 ;;		Nothing
  8609 ;; This function is called by:
  8610 ;;		_display_dashboard
  8611 ;;		_log_car_event
  8612 ;;		_login
  8613 ;;		_change_time
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617     16D4                     ___awdiv:	
  8618                           ;psect for function ___awdiv
  8619                           
  8620     16D4                     l4361:	
  8621                           ;incstack = 0
  8622                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8623                           
  8624     16D4  01F7               	clrf	___awdiv@sign
  8625     16D5                     l4363:
  8626     16D5  1FF3               	btfss	___awdiv@divisor+1,7
  8627     16D6  2ED8               	goto	u4371
  8628     16D7  2ED9               	goto	u4370
  8629     16D8                     u4371:
  8630     16D8  2EE0               	goto	l4369
  8631     16D9                     u4370:
  8632     16D9                     l4365:
  8633     16D9  09F2               	comf	___awdiv@divisor,f
  8634     16DA  09F3               	comf	___awdiv@divisor+1,f
  8635     16DB  0AF2               	incf	___awdiv@divisor,f
  8636     16DC  1903               	skipnz
  8637     16DD  0AF3               	incf	___awdiv@divisor+1,f
  8638     16DE                     l4367:
  8639     16DE  3001               	movlw	1
  8640     16DF  00F7               	movwf	___awdiv@sign
  8641     16E0                     l4369:
  8642     16E0  1FF5               	btfss	___awdiv@dividend+1,7
  8643     16E1  2EE3               	goto	u4381
  8644     16E2  2EE4               	goto	u4380
  8645     16E3                     u4381:
  8646     16E3  2EEB               	goto	l4375
  8647     16E4                     u4380:
  8648     16E4                     l4371:
  8649     16E4  09F4               	comf	___awdiv@dividend,f
  8650     16E5  09F5               	comf	___awdiv@dividend+1,f
  8651     16E6  0AF4               	incf	___awdiv@dividend,f
  8652     16E7  1903               	skipnz
  8653     16E8  0AF5               	incf	___awdiv@dividend+1,f
  8654     16E9                     l4373:
  8655     16E9  3001               	movlw	1
  8656     16EA  06F7               	xorwf	___awdiv@sign,f
  8657     16EB                     l4375:
  8658     16EB  01F8               	clrf	___awdiv@quotient
  8659     16EC  01F9               	clrf	___awdiv@quotient+1
  8660     16ED                     l4377:
  8661     16ED  0872               	movf	___awdiv@divisor,w
  8662     16EE  0473               	iorwf	___awdiv@divisor+1,w
  8663     16EF  1903               	btfsc	3,2
  8664     16F0  2EF2               	goto	u4391
  8665     16F1  2EF3               	goto	u4390
  8666     16F2                     u4391:
  8667     16F2  2F28               	goto	l4397
  8668     16F3                     u4390:
  8669     16F3                     l4379:
  8670     16F3  3001               	movlw	1
  8671     16F4  00F6               	movwf	___awdiv@counter
  8672     16F5  2EFF               	goto	l4385
  8673     16F6                     l4381:
  8674     16F6  3001               	movlw	1
  8675     16F7                     u4405:
  8676     16F7  1003               	clrc
  8677     16F8  0DF2               	rlf	___awdiv@divisor,f
  8678     16F9  0DF3               	rlf	___awdiv@divisor+1,f
  8679     16FA  3EFF               	addlw	-1
  8680     16FB  1D03               	skipz
  8681     16FC  2EF7               	goto	u4405
  8682     16FD                     l4383:
  8683     16FD  3001               	movlw	1
  8684     16FE  07F6               	addwf	___awdiv@counter,f
  8685     16FF                     l4385:
  8686     16FF  1FF3               	btfss	___awdiv@divisor+1,7
  8687     1700  2F02               	goto	u4411
  8688     1701  2F03               	goto	u4410
  8689     1702                     u4411:
  8690     1702  2EF6               	goto	l4381
  8691     1703                     u4410:
  8692     1703                     l4387:
  8693     1703  3001               	movlw	1
  8694     1704                     u4425:
  8695     1704  1003               	clrc
  8696     1705  0DF8               	rlf	___awdiv@quotient,f
  8697     1706  0DF9               	rlf	___awdiv@quotient+1,f
  8698     1707  3EFF               	addlw	-1
  8699     1708  1D03               	skipz
  8700     1709  2F04               	goto	u4425
  8701     170A  0873               	movf	___awdiv@divisor+1,w
  8702     170B  0275               	subwf	___awdiv@dividend+1,w
  8703     170C  1D03               	skipz
  8704     170D  2F10               	goto	u4435
  8705     170E  0872               	movf	___awdiv@divisor,w
  8706     170F  0274               	subwf	___awdiv@dividend,w
  8707     1710                     u4435:
  8708     1710  1C03               	skipc
  8709     1711  2F13               	goto	u4431
  8710     1712  2F14               	goto	u4430
  8711     1713                     u4431:
  8712     1713  2F1B               	goto	l4393
  8713     1714                     u4430:
  8714     1714                     l4389:
  8715     1714  0872               	movf	___awdiv@divisor,w
  8716     1715  02F4               	subwf	___awdiv@dividend,f
  8717     1716  0873               	movf	___awdiv@divisor+1,w
  8718     1717  1C03               	skipc
  8719     1718  03F5               	decf	___awdiv@dividend+1,f
  8720     1719  02F5               	subwf	___awdiv@dividend+1,f
  8721     171A                     l4391:
  8722     171A  1478               	bsf	___awdiv@quotient,0
  8723     171B                     l4393:
  8724     171B  3001               	movlw	1
  8725     171C                     u4445:
  8726     171C  1003               	clrc
  8727     171D  0CF3               	rrf	___awdiv@divisor+1,f
  8728     171E  0CF2               	rrf	___awdiv@divisor,f
  8729     171F  3EFF               	addlw	-1
  8730     1720  1D03               	skipz
  8731     1721  2F1C               	goto	u4445
  8732     1722                     l4395:
  8733     1722  3001               	movlw	1
  8734     1723  02F6               	subwf	___awdiv@counter,f
  8735     1724  1D03               	btfss	3,2
  8736     1725  2F27               	goto	u4451
  8737     1726  2F28               	goto	u4450
  8738     1727                     u4451:
  8739     1727  2F03               	goto	l4387
  8740     1728                     u4450:
  8741     1728                     l4397:
  8742     1728  0877               	movf	___awdiv@sign,w
  8743     1729  1903               	btfsc	3,2
  8744     172A  2F2C               	goto	u4461
  8745     172B  2F2D               	goto	u4460
  8746     172C                     u4461:
  8747     172C  2F32               	goto	l4401
  8748     172D                     u4460:
  8749     172D                     l4399:
  8750     172D  09F8               	comf	___awdiv@quotient,f
  8751     172E  09F9               	comf	___awdiv@quotient+1,f
  8752     172F  0AF8               	incf	___awdiv@quotient,f
  8753     1730  1903               	skipnz
  8754     1731  0AF9               	incf	___awdiv@quotient+1,f
  8755     1732                     l4401:
  8756     1732  0879               	movf	___awdiv@quotient+1,w
  8757     1733  00F3               	movwf	?___awdiv+1
  8758     1734  0878               	movf	___awdiv@quotient,w
  8759     1735  00F2               	movwf	?___awdiv
  8760     1736                     l787:
  8761     1736  0008               	return
  8762     1737                     __end_of___awdiv:
  8763                           
  8764                           	psect	text36
  8765     0659                     __ptext36:	
  8766 ;; *************** function _change_password *****************
  8767 ;; Defined at:
  8768 ;;		line 479 in file "car_block_box_def.c"
  8769 ;; Parameters:    Size  Location     Type
  8770 ;;  key             2    2[BANK0 ] unsigned int 
  8771 ;;  reset_flag      1    4[BANK0 ] unsigned char 
  8772 ;; Auto vars:     Size  Location     Type
  8773 ;;		None
  8774 ;; Return value:  Size  Location     Type
  8775 ;;                  1    wreg      unsigned char 
  8776 ;; Registers used:
  8777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8778 ;; Tracked objects:
  8779 ;;		On entry : 0/0
  8780 ;;		On exit  : 0/0
  8781 ;;		Unchanged: 0/0
  8782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8783 ;;      Params:         0       3       0       0       0
  8784 ;;      Locals:         0       0       0       0       0
  8785 ;;      Temps:          0       3       0       0       0
  8786 ;;      Totals:         0       6       0       0       0
  8787 ;;Total ram usage:        6 bytes
  8788 ;; Hardware stack levels used: 1
  8789 ;; Hardware stack levels required when called: 5
  8790 ;; This function calls:
  8791 ;;		_clcd_print
  8792 ;;		_clcd_putch
  8793 ;;		_clcd_write
  8794 ;;		_strncmp
  8795 ;;		_strncpy
  8796 ;;		_write_str_at24c04
  8797 ;; This function is called by:
  8798 ;;		_main
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802     0659                     _change_password:	
  8803                           ;psect for function _change_password
  8804                           
  8805     0659                     l4955:	
  8806                           ;incstack = 0
  8807                           ; Regs used in _change_password: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8808                           
  8809                           
  8810                           ;car_block_box_def.c: 479: unsigned char change_password(unsigned key, unsigned char res
      +                          et_flag);car_block_box_def.c: 480: {;car_block_box_def.c: 481:     static unsigned char 
      +                          pwd_pos = 0, pwd_changed = 0;;car_block_box_def.c: 482:     static unsigned char toggle_
      +                          cursor = 0, blink_delay = 0;;car_block_box_def.c: 483:     static char new_pwd[9];;car_b
      +                          lock_box_def.c: 485:     if (blink_delay++ == 5)
  8811     0659  3001               	movlw	1
  8812     065A  1683               	bsf	3,5	;RP0=1, select bank1
  8813     065B  1303               	bcf	3,6	;RP1=0, select bank1
  8814     065C  07A5               	addwf	change_password@blink_delay^(0+128),f
  8815     065D  3006               	movlw	6
  8816     065E  0625               	xorwf	change_password@blink_delay^(0+128),w
  8817     065F  1D03               	btfss	3,2
  8818     0660  2E62               	goto	u5141
  8819     0661  2E63               	goto	u5140
  8820     0662                     u5141:
  8821     0662  2E6C               	goto	l4961
  8822     0663                     u5140:
  8823     0663                     l4957:
  8824                           
  8825                           ;car_block_box_def.c: 486:     {;car_block_box_def.c: 487:         blink_delay = 0;
  8826     0663  01A5               	clrf	change_password@blink_delay^(0+128)
  8827     0664                     l4959:
  8828                           
  8829                           ;car_block_box_def.c: 488:         toggle_cursor = !toggle_cursor;
  8830     0664  0826               	movf	change_password@toggle_cursor^(0+128),w
  8831     0665  1903               	btfsc	3,2
  8832     0666  2E68               	goto	u5151
  8833     0667  2E6A               	goto	u5150
  8834     0668                     u5151:
  8835     0668  3001               	movlw	1
  8836     0669  2E6B               	goto	u5160
  8837     066A                     u5150:
  8838     066A  3000               	movlw	0
  8839     066B                     u5160:
  8840     066B  00A6               	movwf	change_password@toggle_cursor^(0+128)
  8841     066C                     l4961:
  8842                           
  8843                           ;car_block_box_def.c: 494:     if (reset_flag == 0x11)
  8844     066C  3011               	movlw	17
  8845     066D  1283               	bcf	3,5	;RP0=0, select bank0
  8846     066E  1303               	bcf	3,6	;RP1=0, select bank0
  8847     066F  0624               	xorwf	change_password@reset_flag,w
  8848     0670  1D03               	btfss	3,2
  8849     0671  2E73               	goto	u5171
  8850     0672  2E74               	goto	u5170
  8851     0673                     u5171:
  8852     0673  2E8B               	goto	l4971
  8853     0674                     u5170:
  8854     0674                     l4963:
  8855                           
  8856                           ;car_block_box_def.c: 495:     {;car_block_box_def.c: 496:         strncpy(new_pwd, "   
      +                           ", 4);
  8857     0674  30B9               	movlw	(low (change_password@new_pwd| 0))& (0+255)
  8858     0675  00F2               	movwf	strncpy@d
  8859     0676  3042               	movlw	low ((STR_46+13)| (0+32768))
  8860     0677  00F3               	movwf	strncpy@s
  8861     0678  3090               	movlw	high ((STR_46+13)| (0+32768))
  8862     0679  00F4               	movwf	strncpy@s+1
  8863     067A  3004               	movlw	4
  8864     067B  00F5               	movwf	strncpy@n
  8865     067C  3000               	movlw	0
  8866     067D  00F6               	movwf	strncpy@n+1
  8867     067E  160A  118A  2491  120A  118A  	fcall	_strncpy
  8868     0683                     l4965:
  8869                           
  8870                           ;car_block_box_def.c: 497:         pwd_pos = 0;
  8871     0683  01FA               	clrf	change_password@pwd_pos
  8872     0684                     l4967:
  8873                           
  8874                           ;car_block_box_def.c: 498:         pwd_changed = 0;
  8875     0684  1683               	bsf	3,5	;RP0=1, select bank1
  8876     0685  1303               	bcf	3,6	;RP1=0, select bank1
  8877     0686  01A7               	clrf	change_password@pwd_changed^(0+128)
  8878     0687                     l4969:
  8879                           
  8880                           ;car_block_box_def.c: 499:         return_time = 5;
  8881     0687  3005               	movlw	5
  8882     0688  1283               	bcf	3,5	;RP0=0, select bank0
  8883     0689  1303               	bcf	3,6	;RP1=0, select bank0
  8884     068A  00DA               	movwf	_return_time
  8885     068B                     l4971:
  8886                           
  8887                           ;car_block_box_def.c: 504:     if (!return_time)
  8888     068B  085A               	movf	_return_time,w
  8889     068C  1D03               	btfss	3,2
  8890     068D  2E8F               	goto	u5181
  8891     068E  2E90               	goto	u5180
  8892     068F                     u5181:
  8893     068F  2E92               	goto	l4977
  8894     0690                     u5180:
  8895     0690                     l4973:
  8896                           
  8897                           ;car_block_box_def.c: 505:         return 0x33;
  8898     0690  3033               	movlw	51
  8899     0691  2FD6               	goto	l438
  8900     0692                     l4977:
  8901                           
  8902                           ;car_block_box_def.c: 508:     if (pwd_changed)
  8903     0692  1683               	bsf	3,5	;RP0=1, select bank1
  8904     0693  1303               	bcf	3,6	;RP1=0, select bank1
  8905     0694  0827               	movf	change_password@pwd_changed^(0+128),w
  8906     0695  1903               	btfsc	3,2
  8907     0696  2E98               	goto	u5191
  8908     0697  2E99               	goto	u5190
  8909     0698                     u5191:
  8910     0698  2E9B               	goto	l4983
  8911     0699                     u5190:
  8912     0699                     l4979:
  8913                           
  8914                           ;car_block_box_def.c: 509:         return 0x66;
  8915     0699  3066               	movlw	102
  8916     069A  2FD6               	goto	l438
  8917     069B                     l4983:
  8918                           
  8919                           ;car_block_box_def.c: 512:     if (pwd_pos < 4)
  8920     069B  3004               	movlw	4
  8921     069C  027A               	subwf	change_password@pwd_pos,w
  8922     069D  1803               	skipnc
  8923     069E  2EA0               	goto	u5201
  8924     069F  2EA1               	goto	u5200
  8925     06A0                     u5201:
  8926     06A0  2ECB               	goto	l4993
  8927     06A1                     u5200:
  8928     06A1                     l4985:
  8929                           
  8930                           ;car_block_box_def.c: 513:     {;car_block_box_def.c: 514:         clcd_print("Enter new
      +                           pwd:  ", (0x80 + 0));
  8931     06A1  3047               	movlw	low (STR_44| (0+32768))
  8932     06A2  00F6               	movwf	clcd_print@str
  8933     06A3  3090               	movlw	high (STR_44| (0+32768))
  8934     06A4  00F7               	movwf	clcd_print@str+1
  8935     06A5  3080               	movlw	128
  8936     06A6  00F8               	movwf	clcd_print@addr
  8937     06A7  160A  118A  235A  120A  118A  	fcall	_clcd_print
  8938     06AC                     l4987:
  8939                           
  8940                           ;car_block_box_def.c: 517:         if (toggle_cursor == 0)
  8941     06AC  1683               	bsf	3,5	;RP0=1, select bank1
  8942     06AD  1303               	bcf	3,6	;RP1=0, select bank1
  8943     06AE  0826               	movf	change_password@toggle_cursor^(0+128),w
  8944     06AF  1D03               	btfss	3,2
  8945     06B0  2EB2               	goto	u5211
  8946     06B1  2EB3               	goto	u5210
  8947     06B2                     u5211:
  8948     06B2  2EBF               	goto	l4991
  8949     06B3                     u5210:
  8950     06B3                     l4989:
  8951                           
  8952                           ;car_block_box_def.c: 518:         {;car_block_box_def.c: 519:             clcd_putch((u
      +                          nsigned char) 0xFF, (0xC0 + pwd_pos));
  8953     06B3  087A               	movf	change_password@pwd_pos,w
  8954     06B4  3EC0               	addlw	192
  8955     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  8956     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  8957     06B7  00A0               	movwf	clcd_putch@addr
  8958     06B8  30FF               	movlw	255
  8959     06B9  160A  118A  21D6  120A  118A  	fcall	_clcd_putch
  8960                           
  8961                           ;car_block_box_def.c: 520:         }
  8962     06BE  2F4F               	goto	l5031
  8963     06BF                     l4991:
  8964                           
  8965                           ;car_block_box_def.c: 522:         {;car_block_box_def.c: 523:             clcd_putch(' 
      +                          ', (0xC0 + pwd_pos));
  8966     06BF  087A               	movf	change_password@pwd_pos,w
  8967     06C0  3EC0               	addlw	192
  8968     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  8969     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  8970     06C3  00A0               	movwf	clcd_putch@addr
  8971     06C4  3020               	movlw	32
  8972     06C5  160A  118A  21D6  120A  118A  	fcall	_clcd_putch
  8973     06CA  2F4F               	goto	l5031
  8974     06CB                     l4993:
  8975     06CB  3004               	movlw	4
  8976     06CC  027A               	subwf	change_password@pwd_pos,w
  8977     06CD  1C03               	skipc
  8978     06CE  2ED0               	goto	u5221
  8979     06CF  2ED1               	goto	u5220
  8980     06D0                     u5221:
  8981     06D0  2F4F               	goto	l5031
  8982     06D1                     u5220:
  8983     06D1                     l4995:
  8984     06D1  3008               	movlw	8
  8985     06D2  027A               	subwf	change_password@pwd_pos,w
  8986     06D3  1803               	skipnc
  8987     06D4  2ED6               	goto	u5231
  8988     06D5  2ED7               	goto	u5230
  8989     06D6                     u5231:
  8990     06D6  2F4F               	goto	l5031
  8991     06D7                     u5230:
  8992     06D7                     l4997:
  8993                           
  8994                           ;car_block_box_def.c: 528:     {;car_block_box_def.c: 529:         clcd_print("Re-enter 
      +                          new pwd", (0x80 + 0));
  8995     06D7  3069               	movlw	low (STR_45| (0+32768))
  8996     06D8  00F6               	movwf	clcd_print@str
  8997     06D9  3090               	movlw	high (STR_45| (0+32768))
  8998     06DA  00F7               	movwf	clcd_print@str+1
  8999     06DB  3080               	movlw	128
  9000     06DC  00F8               	movwf	clcd_print@addr
  9001     06DD  160A  118A  235A  120A  118A  	fcall	_clcd_print
  9002     06E2                     l4999:
  9003                           
  9004                           ;car_block_box_def.c: 532:         if (toggle_cursor == 0)
  9005     06E2  1683               	bsf	3,5	;RP0=1, select bank1
  9006     06E3  1303               	bcf	3,6	;RP1=0, select bank1
  9007     06E4  0826               	movf	change_password@toggle_cursor^(0+128),w
  9008     06E5  1D03               	btfss	3,2
  9009     06E6  2EE8               	goto	u5241
  9010     06E7  2EE9               	goto	u5240
  9011     06E8                     u5241:
  9012     06E8  2EF5               	goto	l5003
  9013     06E9                     u5240:
  9014     06E9                     l5001:
  9015                           
  9016                           ;car_block_box_def.c: 533:         {;car_block_box_def.c: 534:             clcd_putch((u
      +                          nsigned char) 0xFF, (0xC0 + pwd_pos));
  9017     06E9  087A               	movf	change_password@pwd_pos,w
  9018     06EA  3EC0               	addlw	192
  9019     06EB  1283               	bcf	3,5	;RP0=0, select bank0
  9020     06EC  1303               	bcf	3,6	;RP1=0, select bank0
  9021     06ED  00A0               	movwf	clcd_putch@addr
  9022     06EE  30FF               	movlw	255
  9023     06EF  160A  118A  21D6  120A  118A  	fcall	_clcd_putch
  9024                           
  9025                           ;car_block_box_def.c: 535:         }
  9026     06F4  2F4F               	goto	l5031
  9027     06F5                     l5003:
  9028                           
  9029                           ;car_block_box_def.c: 537:         {;car_block_box_def.c: 538:             clcd_putch(' 
      +                          ', (0xC0 + pwd_pos));
  9030     06F5  087A               	movf	change_password@pwd_pos,w
  9031     06F6  3EC0               	addlw	192
  9032     06F7  1283               	bcf	3,5	;RP0=0, select bank0
  9033     06F8  1303               	bcf	3,6	;RP1=0, select bank0
  9034     06F9  00A0               	movwf	clcd_putch@addr
  9035     06FA  3020               	movlw	32
  9036     06FB  160A  118A  21D6  120A  118A  	fcall	_clcd_putch
  9037     0700  2F4F               	goto	l5031
  9038     0701                     l5005:
  9039                           
  9040                           ;car_block_box_def.c: 547:             new_pwd[pwd_pos] = '0';
  9041     0701  087A               	movf	change_password@pwd_pos,w
  9042     0702  3EB9               	addlw	(low (change_password@new_pwd| 0))& (0+255)
  9043     0703  0084               	movwf	4
  9044     0704  3030               	movlw	48
  9045     0705  1383               	bcf	3,7	;select IRP bank1
  9046     0706  0080               	movwf	0
  9047     0707                     l5007:
  9048                           
  9049                           ;car_block_box_def.c: 548:             clcd_putch('*', (0xC0 + pwd_pos));
  9050     0707  087A               	movf	change_password@pwd_pos,w
  9051     0708  3EC0               	addlw	192
  9052     0709  00A0               	movwf	clcd_putch@addr
  9053     070A  302A               	movlw	42
  9054     070B  160A  118A  21D6  120A  118A  	fcall	_clcd_putch
  9055     0710                     l5009:
  9056                           
  9057                           ;car_block_box_def.c: 549:             pwd_pos++;
  9058     0710  3001               	movlw	1
  9059     0711  07FA               	addwf	change_password@pwd_pos,f
  9060     0712                     l5011:
  9061                           
  9062                           ;car_block_box_def.c: 550:             return_time = 5;
  9063     0712  3005               	movlw	5
  9064     0713  1283               	bcf	3,5	;RP0=0, select bank0
  9065     0714  1303               	bcf	3,6	;RP1=0, select bank0
  9066     0715  00DA               	movwf	_return_time
  9067     0716                     l5013:
  9068                           
  9069                           ;car_block_box_def.c: 551:             if (pwd_pos == 4)
  9070     0716  3004               	movlw	4
  9071     0717  067A               	xorwf	change_password@pwd_pos,w
  9072     0718  1D03               	btfss	3,2
  9073     0719  2F1B               	goto	u5251
  9074     071A  2F1C               	goto	u5250
  9075     071B                     u5251:
  9076     071B  2F5E               	goto	l5033
  9077     071C                     u5250:
  9078     071C                     l5015:
  9079                           
  9080                           ;car_block_box_def.c: 552:                 clcd_print("                 ", (0xC0 + 0));
  9081     071C  3035               	movlw	low (STR_46| (0+32768))
  9082     071D  00F6               	movwf	clcd_print@str
  9083     071E  3090               	movlw	high (STR_46| (0+32768))
  9084     071F  00F7               	movwf	clcd_print@str+1
  9085     0720  30C0               	movlw	192
  9086     0721  00F8               	movwf	clcd_print@addr
  9087     0722  160A  118A  235A  120A  118A  	fcall	_clcd_print
  9088     0727  2F5E               	goto	l5033
  9089     0728                     l5017:
  9090                           
  9091                           ;car_block_box_def.c: 556:             new_pwd[pwd_pos] = '1';
  9092     0728  087A               	movf	change_password@pwd_pos,w
  9093     0729  3EB9               	addlw	(low (change_password@new_pwd| 0))& (0+255)
  9094     072A  0084               	movwf	4
  9095     072B  3031               	movlw	49
  9096     072C  1383               	bcf	3,7	;select IRP bank1
  9097     072D  0080               	movwf	0
  9098     072E                     l5019:
  9099                           
  9100                           ;car_block_box_def.c: 557:             clcd_putch('*', (0xC0 + pwd_pos));
  9101     072E  087A               	movf	change_password@pwd_pos,w
  9102     072F  3EC0               	addlw	192
  9103     0730  00A0               	movwf	clcd_putch@addr
  9104     0731  302A               	movlw	42
  9105     0732  160A  118A  21D6  120A  118A  	fcall	_clcd_putch
  9106     0737                     l5021:
  9107                           
  9108                           ;car_block_box_def.c: 558:             pwd_pos++;
  9109     0737  3001               	movlw	1
  9110     0738  07FA               	addwf	change_password@pwd_pos,f
  9111     0739                     l5023:
  9112                           
  9113                           ;car_block_box_def.c: 559:             return_time = 5;
  9114     0739  3005               	movlw	5
  9115     073A  1283               	bcf	3,5	;RP0=0, select bank0
  9116     073B  1303               	bcf	3,6	;RP1=0, select bank0
  9117     073C  00DA               	movwf	_return_time
  9118     073D                     l5025:
  9119                           
  9120                           ;car_block_box_def.c: 560:             if (pwd_pos == 4)
  9121     073D  3004               	movlw	4
  9122     073E  067A               	xorwf	change_password@pwd_pos,w
  9123     073F  1D03               	btfss	3,2
  9124     0740  2F42               	goto	u5261
  9125     0741  2F43               	goto	u5260
  9126     0742                     u5261:
  9127     0742  2F5E               	goto	l5033
  9128     0743                     u5260:
  9129     0743                     l5027:
  9130                           
  9131                           ;car_block_box_def.c: 561:                 clcd_print("                 ", (0xC0 + 0));
  9132     0743  3035               	movlw	low (STR_46| (0+32768))
  9133     0744  00F6               	movwf	clcd_print@str
  9134     0745  3090               	movlw	high (STR_46| (0+32768))
  9135     0746  00F7               	movwf	clcd_print@str+1
  9136     0747  30C0               	movlw	192
  9137     0748  00F8               	movwf	clcd_print@addr
  9138     0749  160A  118A  235A  120A  118A  	fcall	_clcd_print
  9139     074E  2F5E               	goto	l5033
  9140     074F                     l5031:
  9141                           
  9142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9143                           ; Switch size 1, requested type "simple"
  9144                           ; Number of cases is 1, Range of values is 0 to 0
  9145                           ; switch strategies available:
  9146                           ; Name         Instructions Cycles
  9147                           ; simple_byte            4     3 (average)
  9148                           ; direct_byte           11     8 (fixed)
  9149                           ; jumptable            260     6 (fixed)
  9150                           ;	Chosen strategy is simple_byte
  9151     074F  1283               	bcf	3,5	;RP0=0, select bank0
  9152     0750  1303               	bcf	3,6	;RP1=0, select bank0
  9153     0751  0823               	movf	change_password@key+1,w
  9154     0752  3A00               	xorlw	0	; case 0
  9155     0753  1903               	skipnz
  9156     0754  2F56               	goto	l5571
  9157     0755  2F5E               	goto	l5033
  9158     0756                     l5571:
  9159                           
  9160                           ; Switch size 1, requested type "simple"
  9161                           ; Number of cases is 2, Range of values is 47 to 55
  9162                           ; switch strategies available:
  9163                           ; Name         Instructions Cycles
  9164                           ; simple_byte            7     4 (average)
  9165                           ; direct_byte           38    11 (fixed)
  9166                           ; jumptable            263     9 (fixed)
  9167                           ;	Chosen strategy is simple_byte
  9168     0756  0822               	movf	change_password@key,w
  9169     0757  3A2F               	xorlw	47	; case 47
  9170     0758  1903               	skipnz
  9171     0759  2F01               	goto	l5005
  9172     075A  3A18               	xorlw	24	; case 55
  9173     075B  1903               	skipnz
  9174     075C  2F28               	goto	l5017
  9175     075D  2F5E               	goto	l5033
  9176     075E                     l5033:
  9177                           
  9178                           ;car_block_box_def.c: 566:     if (pwd_pos == 8)
  9179     075E  3008               	movlw	8
  9180     075F  067A               	xorwf	change_password@pwd_pos,w
  9181     0760  1D03               	btfss	3,2
  9182     0761  2F63               	goto	u5271
  9183     0762  2F64               	goto	u5270
  9184     0763                     u5271:
  9185     0763  2E99               	goto	l4979
  9186     0764                     u5270:
  9187     0764                     l5035:
  9188                           
  9189                           ;car_block_box_def.c: 567:     {;car_block_box_def.c: 568:         if (strncmp(new_pwd, 
      +                          &new_pwd[4], 4) == 0)
  9190     0764  30B9               	movlw	(low (change_password@new_pwd| 0))& (0+255)
  9191     0765  00F2               	movwf	strncmp@l
  9192     0766  30BD               	movlw	(low ((change_password@new_pwd| 0+4)))& (0+255)
  9193     0767  00F3               	movwf	strncmp@r
  9194     0768  3004               	movlw	4
  9195     0769  00F4               	movwf	strncmp@n
  9196     076A  3000               	movlw	0
  9197     076B  00F5               	movwf	strncmp@n+1
  9198     076C  160A  118A  24D5  120A  118A  	fcall	_strncmp
  9199     0771  0872               	movf	?_strncmp,w
  9200     0772  0473               	iorwf	?_strncmp+1,w
  9201     0773  1D03               	btfss	3,2
  9202     0774  2F76               	goto	u5281
  9203     0775  2F77               	goto	u5280
  9204     0776                     u5281:
  9205     0776  2FB8               	goto	l5059
  9206     0777                     u5280:
  9207     0777                     l5037:
  9208                           
  9209                           ;car_block_box_def.c: 569:         {;car_block_box_def.c: 571:             new_pwd[8] = 
      +                          0;
  9210     0777  1683               	bsf	3,5	;RP0=1, select bank1
  9211     0778  1303               	bcf	3,6	;RP1=0, select bank1
  9212     0779  01C1               	clrf	(change_password@new_pwd^(0+128)+8)
  9213     077A                     l5039:
  9214                           
  9215                           ;car_block_box_def.c: 572:             write_str_at24c04(0x00, &new_pwd[4]);
  9216     077A  30BD               	movlw	(low ((change_password@new_pwd| 0+4)))& (0+255)
  9217     077B  00F7               	movwf	write_str_at24c04@data
  9218     077C  3000               	movlw	0
  9219     077D  00F8               	movwf	write_str_at24c04@data+1
  9220     077E  3000               	movlw	0
  9221     077F  160A  118A  22AC  120A  118A  	fcall	_write_str_at24c04
  9222     0784                     l5041:
  9223                           
  9224                           ;car_block_box_def.c: 573:             pwd_pos++;
  9225     0784  3001               	movlw	1
  9226     0785  07FA               	addwf	change_password@pwd_pos,f
  9227     0786                     l5043:
  9228                           
  9229                           ;car_block_box_def.c: 574:             clcd_write(0x01, 0);
  9230     0786  01F2               	clrf	clcd_write@mode
  9231     0787  3001               	movlw	1
  9232     0788  160A  118A  2421  120A  118A  	fcall	_clcd_write
  9233     078D                     l5045:
  9234                           
  9235                           ;car_block_box_def.c: 575:             clcd_print("Password changed", (0x80 + 0));
  9236     078D  3058               	movlw	low (STR_48| (0+32768))
  9237     078E  00F6               	movwf	clcd_print@str
  9238     078F  3090               	movlw	high (STR_48| (0+32768))
  9239     0790  00F7               	movwf	clcd_print@str+1
  9240     0791  3080               	movlw	128
  9241     0792  00F8               	movwf	clcd_print@addr
  9242     0793  160A  118A  235A  120A  118A  	fcall	_clcd_print
  9243     0798                     l5047:
  9244                           
  9245                           ;car_block_box_def.c: 576:             clcd_print("successfully ", (0xC0 + 2));
  9246     0798  30F6               	movlw	low (STR_49| (0+32768))
  9247     0799  00F6               	movwf	clcd_print@str
  9248     079A  3090               	movlw	high (STR_49| (0+32768))
  9249     079B  00F7               	movwf	clcd_print@str+1
  9250     079C  30C2               	movlw	194
  9251     079D  00F8               	movwf	clcd_print@addr
  9252     079E  160A  118A  235A  120A  118A  	fcall	_clcd_print
  9253     07A3                     l5049:
  9254                           
  9255                           ;car_block_box_def.c: 577:             pwd_changed = 1;
  9256     07A3  3001               	movlw	1
  9257     07A4  1683               	bsf	3,5	;RP0=1, select bank1
  9258     07A5  1303               	bcf	3,6	;RP1=0, select bank1
  9259     07A6  00A7               	movwf	change_password@pwd_changed^(0+128)
  9260     07A7                     l5051:
  9261                           
  9262                           ;car_block_box_def.c: 578:             _delay((unsigned long)((1000)*(20000000/4000.0)))
      +                          ;
  9263     07A7  301A               	movlw	26
  9264     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  9265     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  9266     07AA  00A7               	movwf	??_change_password+2
  9267     07AB  305E               	movlw	94
  9268     07AC  00A6               	movwf	??_change_password+1
  9269     07AD  306D               	movlw	109
  9270     07AE  00A5               	movwf	??_change_password
  9271     07AF                     u6247:
  9272     07AF  0BA5               	decfsz	??_change_password,f
  9273     07B0  2FAF               	goto	u6247
  9274     07B1  0BA6               	decfsz	??_change_password+1,f
  9275     07B2  2FAF               	goto	u6247
  9276     07B3  0BA7               	decfsz	??_change_password+2,f
  9277     07B4  2FAF               	goto	u6247
  9278     07B5  2FB6               	nop2
  9279     07B6                     l5053:
  9280                           
  9281                           ;car_block_box_def.c: 579:             return 0x77;
  9282     07B6  3077               	movlw	119
  9283     07B7  2FD6               	goto	l438
  9284     07B8                     l5059:
  9285                           
  9286                           ;car_block_box_def.c: 582:         {;car_block_box_def.c: 584:             clcd_write(0x
      +                          01, 0);
  9287     07B8  01F2               	clrf	clcd_write@mode
  9288     07B9  3001               	movlw	1
  9289     07BA  160A  118A  2421  120A  118A  	fcall	_clcd_write
  9290     07BF                     l5061:
  9291                           
  9292                           ;car_block_box_def.c: 585:             clcd_print("Password  change", (0x80 + 0));
  9293     07BF  307A               	movlw	low (STR_50| (0+32768))
  9294     07C0  00F6               	movwf	clcd_print@str
  9295     07C1  3090               	movlw	high (STR_50| (0+32768))
  9296     07C2  00F7               	movwf	clcd_print@str+1
  9297     07C3  3080               	movlw	128
  9298     07C4  00F8               	movwf	clcd_print@addr
  9299     07C5  160A  118A  235A  120A  118A  	fcall	_clcd_print
  9300     07CA                     l5063:
  9301                           
  9302                           ;car_block_box_def.c: 586:             clcd_print("failed", (0xC0 + 5));
  9303     07CA  308D               	movlw	low (STR_51| (0+32768))
  9304     07CB  00F6               	movwf	clcd_print@str
  9305     07CC  3091               	movlw	high (STR_51| (0+32768))
  9306     07CD  00F7               	movwf	clcd_print@str+1
  9307     07CE  30C5               	movlw	197
  9308     07CF  00F8               	movwf	clcd_print@addr
  9309     07D0  160A  118A  235A  120A  118A  	fcall	_clcd_print
  9310     07D5  2FA3               	goto	l5049
  9311     07D6                     l438:
  9312     07D6  0008               	return
  9313     07D7                     __end_of_change_password:
  9314                           
  9315                           	psect	text37
  9316     12AC                     __ptext37:	
  9317 ;; *************** function _write_str_at24c04 *****************
  9318 ;; Defined at:
  9319 ;;		line 37 in file "at24c04.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  addr            1    wreg     unsigned char 
  9322 ;;  data            2    7[COMMON] PTR unsigned char 
  9323 ;;		 -> change_password@new_pwd(9), log(11), STR_7(5), 
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;  addr            1    9[COMMON] unsigned char 
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  1    wreg      void 
  9328 ;; Registers used:
  9329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9335 ;;      Params:         2       0       0       0       0
  9336 ;;      Locals:         1       0       0       0       0
  9337 ;;      Temps:          0       0       0       0       0
  9338 ;;      Totals:         3       0       0       0       0
  9339 ;;Total ram usage:        3 bytes
  9340 ;; Hardware stack levels used: 1
  9341 ;; Hardware stack levels required when called: 4
  9342 ;; This function calls:
  9343 ;;		_write_at24c04
  9344 ;; This function is called by:
  9345 ;;		_main
  9346 ;;		_record_log
  9347 ;;		_change_password
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351     12AC                     _write_str_at24c04:	
  9352                           ;psect for function _write_str_at24c04
  9353                           
  9354                           
  9355                           ;incstack = 0
  9356                           ; Regs used in _write_str_at24c04: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9357                           ;write_str_at24c04@addr stored from wreg
  9358     12AC  00F9               	movwf	write_str_at24c04@addr
  9359     12AD                     l4189:
  9360                           
  9361                           ;at24c04.c: 37: void write_str_at24c04(unsigned char addr, char *data);at24c04.c: 38: {;
      +                          at24c04.c: 39:     while(*data != '\0')
  9362     12AD  2AC6               	goto	l4197
  9363     12AE                     l4191:
  9364                           
  9365                           ;at24c04.c: 40:     {;at24c04.c: 41:         write_at24c04(addr, *data);
  9366     12AE  0878               	movf	write_str_at24c04@data+1,w
  9367     12AF  00FF               	movwf	btemp+1
  9368     12B0  0877               	movf	write_str_at24c04@data,w
  9369     12B1  0084               	movwf	4
  9370     12B2  160A  158A  2000  160A  118A  	fcall	stringtab
  9371     12B7  00F3               	movwf	write_at24c04@data
  9372     12B8  0879               	movf	write_str_at24c04@addr,w
  9373     12B9  120A  118A  27D7  160A  118A  	fcall	_write_at24c04
  9374     12BE                     l4193:
  9375                           
  9376                           ;at24c04.c: 42:         data++;
  9377     12BE  3001               	movlw	1
  9378     12BF  07F7               	addwf	write_str_at24c04@data,f
  9379     12C0  1803               	skipnc
  9380     12C1  0AF8               	incf	write_str_at24c04@data+1,f
  9381     12C2  3000               	movlw	0
  9382     12C3  07F8               	addwf	write_str_at24c04@data+1,f
  9383     12C4                     l4195:
  9384                           
  9385                           ;at24c04.c: 43:         addr++;
  9386     12C4  3001               	movlw	1
  9387     12C5  07F9               	addwf	write_str_at24c04@addr,f
  9388     12C6                     l4197:
  9389                           
  9390                           ;at24c04.c: 39:     while(*data != '\0')
  9391     12C6  0878               	movf	write_str_at24c04@data+1,w
  9392     12C7  1283               	bcf	3,5	;RP0=0, select bank0
  9393     12C8  1303               	bcf	3,6	;RP1=0, select bank0
  9394     12C9  00FF               	movwf	btemp+1
  9395     12CA  0877               	movf	write_str_at24c04@data,w
  9396     12CB  0084               	movwf	4
  9397     12CC  160A  158A  2000  160A  118A  	fcall	stringtab
  9398     12D1  3A00               	xorlw	0
  9399     12D2  1D03               	skipz
  9400     12D3  2AD5               	goto	u4101
  9401     12D4  2AD6               	goto	u4100
  9402     12D5                     u4101:
  9403     12D5  2AAE               	goto	l4191
  9404     12D6                     u4100:
  9405     12D6                     l482:
  9406     12D6  0008               	return
  9407     12D7                     __end_of_write_str_at24c04:
  9408                           
  9409                           	psect	text38
  9410     07D7                     __ptext38:	
  9411 ;; *************** function _write_at24c04 *****************
  9412 ;; Defined at:
  9413 ;;		line 27 in file "at24c04.c"
  9414 ;; Parameters:    Size  Location     Type
  9415 ;;  addr            1    wreg     unsigned char 
  9416 ;;  data            1    3[COMMON] unsigned char 
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;  addr            1    6[COMMON] unsigned char 
  9419 ;; Return value:  Size  Location     Type
  9420 ;;                  1    wreg      void 
  9421 ;; Registers used:
  9422 ;;		wreg, status,2, status,0, pclath, cstack
  9423 ;; Tracked objects:
  9424 ;;		On entry : 0/0
  9425 ;;		On exit  : 0/0
  9426 ;;		Unchanged: 0/0
  9427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9428 ;;      Params:         1       0       0       0       0
  9429 ;;      Locals:         1       0       0       0       0
  9430 ;;      Temps:          2       0       0       0       0
  9431 ;;      Totals:         4       0       0       0       0
  9432 ;;Total ram usage:        4 bytes
  9433 ;; Hardware stack levels used: 1
  9434 ;; Hardware stack levels required when called: 3
  9435 ;; This function calls:
  9436 ;;		_i2c_start
  9437 ;;		_i2c_stop
  9438 ;;		_i2c_write
  9439 ;; This function is called by:
  9440 ;;		_write_str_at24c04
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444     07D7                     _write_at24c04:	
  9445                           ;psect for function _write_at24c04
  9446                           
  9447                           
  9448                           ;incstack = 0
  9449                           ; Regs used in _write_at24c04: [wreg+status,2+status,0+pclath+cstack]
  9450                           ;write_at24c04@addr stored from wreg
  9451     07D7  00F6               	movwf	write_at24c04@addr
  9452     07D8                     l4157:
  9453                           
  9454                           ;at24c04.c: 27: void write_at24c04(unsigned char addr, unsigned char data);at24c04.c: 28
      +                          : {;at24c04.c: 29:     i2c_start();
  9455     07D8  160A  158A  2762  120A  118A  	fcall	_i2c_start
  9456                           
  9457                           ;at24c04.c: 30:     i2c_write(0b10100000);
  9458     07DD  30A0               	movlw	160
  9459     07DE  160A  158A  2774  120A  118A  	fcall	_i2c_write
  9460                           
  9461                           ;at24c04.c: 31:     i2c_write(addr);
  9462     07E3  0876               	movf	write_at24c04@addr,w
  9463     07E4  160A  158A  2774  120A  118A  	fcall	_i2c_write
  9464                           
  9465                           ;at24c04.c: 32:     i2c_write(data);
  9466     07E9  0873               	movf	write_at24c04@data,w
  9467     07EA  160A  158A  2774  120A  118A  	fcall	_i2c_write
  9468                           
  9469                           ;at24c04.c: 33:     i2c_stop();
  9470     07EF  160A  158A  276B  120A  118A  	fcall	_i2c_stop
  9471     07F4                     l4159:
  9472                           
  9473                           ;at24c04.c: 35:     _delay((unsigned long)((3)*(20000000/4000.0)));
  9474     07F4  3014               	movlw	20
  9475     07F5  00F5               	movwf	??_write_at24c04+1
  9476     07F6  3079               	movlw	121
  9477     07F7  00F4               	movwf	??_write_at24c04
  9478     07F8                     u6257:
  9479     07F8  0BF4               	decfsz	??_write_at24c04,f
  9480     07F9  2FF8               	goto	u6257
  9481     07FA  0BF5               	decfsz	??_write_at24c04+1,f
  9482     07FB  2FF8               	goto	u6257
  9483     07FC  2FFD               	nop2
  9484     07FD                     l476:
  9485     07FD  0008               	return
  9486     07FE                     __end_of_write_at24c04:
  9487                           
  9488                           	psect	text39
  9489     1F74                     __ptext39:	
  9490 ;; *************** function _i2c_write *****************
  9491 ;; Defined at:
  9492 ;;		line 66 in file "i2c.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;  data            1    wreg     unsigned char 
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;  data            1    2[COMMON] unsigned char 
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  2   40[None  ] int 
  9499 ;; Registers used:
  9500 ;;		wreg, status,2, status,0, pclath, cstack
  9501 ;; Tracked objects:
  9502 ;;		On entry : 0/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9506 ;;      Params:         0       0       0       0       0
  9507 ;;      Locals:         1       0       0       0       0
  9508 ;;      Temps:          0       0       0       0       0
  9509 ;;      Totals:         1       0       0       0       0
  9510 ;;Total ram usage:        1 bytes
  9511 ;; Hardware stack levels used: 1
  9512 ;; Hardware stack levels required when called: 2
  9513 ;; This function calls:
  9514 ;;		_i2c_wait_for_idle
  9515 ;; This function is called by:
  9516 ;;		_read_ds1307
  9517 ;;		_write_ds1307
  9518 ;;		_read_at24c04
  9519 ;;		_write_at24c04
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523     1F74                     _i2c_write:	
  9524                           ;psect for function _i2c_write
  9525                           
  9526                           
  9527                           ;incstack = 0
  9528                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  9529                           ;i2c_write@data stored from wreg
  9530     1F74  00F2               	movwf	i2c_write@data
  9531     1F75                     l4107:
  9532                           
  9533                           ;i2c.c: 66: int i2c_write(unsigned char data);i2c.c: 67: {;i2c.c: 68:     i2c_wait_for_i
      +                          dle();
  9534     1F75  160A  158A  27AB  160A  158A  	fcall	_i2c_wait_for_idle
  9535     1F7A                     l4109:
  9536                           
  9537                           ;i2c.c: 69:     SSPBUF = data;
  9538     1F7A  0872               	movf	i2c_write@data,w
  9539     1F7B  1283               	bcf	3,5	;RP0=0, select bank0
  9540     1F7C  1303               	bcf	3,6	;RP1=0, select bank0
  9541     1F7D  0093               	movwf	19	;volatile
  9542     1F7E                     l4111:
  9543     1F7E                     l107:	
  9544                           ;i2c.c: 71:     return !ACKSTAT;;	Return value of _i2c_write is never used
  9545                           
  9546     1F7E  0008               	return
  9547     1F7F                     __end_of_i2c_write:
  9548                           
  9549                           	psect	text40
  9550     1F6B                     __ptext40:	
  9551 ;; *************** function _i2c_stop *****************
  9552 ;; Defined at:
  9553 ;;		line 35 in file "i2c.c"
  9554 ;; Parameters:    Size  Location     Type
  9555 ;;		None
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;		None
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  1    wreg      void 
  9560 ;; Registers used:
  9561 ;;		wreg, status,2, status,0, pclath, cstack
  9562 ;; Tracked objects:
  9563 ;;		On entry : 0/0
  9564 ;;		On exit  : 0/0
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9567 ;;      Params:         0       0       0       0       0
  9568 ;;      Locals:         0       0       0       0       0
  9569 ;;      Temps:          0       0       0       0       0
  9570 ;;      Totals:         0       0       0       0       0
  9571 ;;Total ram usage:        0 bytes
  9572 ;; Hardware stack levels used: 1
  9573 ;; Hardware stack levels required when called: 2
  9574 ;; This function calls:
  9575 ;;		_i2c_wait_for_idle
  9576 ;; This function is called by:
  9577 ;;		_read_ds1307
  9578 ;;		_write_ds1307
  9579 ;;		_i2c_rep_start
  9580 ;;		_read_at24c04
  9581 ;;		_write_at24c04
  9582 ;; This function uses a non-reentrant model
  9583 ;;
  9584                           
  9585     1F6B                     _i2c_stop:	
  9586                           ;psect for function _i2c_stop
  9587                           
  9588     1F6B                     l4103:	
  9589                           ;incstack = 0
  9590                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  9591                           
  9592                           
  9593                           ;i2c.c: 37:     i2c_wait_for_idle();
  9594     1F6B  160A  158A  27AB  160A  158A  	fcall	_i2c_wait_for_idle
  9595     1F70                     l4105:
  9596                           
  9597                           ;i2c.c: 38:     PEN = 1;
  9598     1F70  1683               	bsf	3,5	;RP0=1, select bank1
  9599     1F71  1303               	bcf	3,6	;RP1=0, select bank1
  9600     1F72  1511               	bsf	17,2	;volatile
  9601     1F73                     l99:
  9602     1F73  0008               	return
  9603     1F74                     __end_of_i2c_stop:
  9604                           
  9605                           	psect	text41
  9606     1F62                     __ptext41:	
  9607 ;; *************** function _i2c_start *****************
  9608 ;; Defined at:
  9609 ;;		line 22 in file "i2c.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;		None
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;		None
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  1    wreg      void 
  9616 ;; Registers used:
  9617 ;;		wreg, status,2, status,0, pclath, cstack
  9618 ;; Tracked objects:
  9619 ;;		On entry : 0/0
  9620 ;;		On exit  : 0/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9623 ;;      Params:         0       0       0       0       0
  9624 ;;      Locals:         0       0       0       0       0
  9625 ;;      Temps:          0       0       0       0       0
  9626 ;;      Totals:         0       0       0       0       0
  9627 ;;Total ram usage:        0 bytes
  9628 ;; Hardware stack levels used: 1
  9629 ;; Hardware stack levels required when called: 2
  9630 ;; This function calls:
  9631 ;;		_i2c_wait_for_idle
  9632 ;; This function is called by:
  9633 ;;		_read_ds1307
  9634 ;;		_write_ds1307
  9635 ;;		_i2c_rep_start
  9636 ;;		_read_at24c04
  9637 ;;		_write_at24c04
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641     1F62                     _i2c_start:	
  9642                           ;psect for function _i2c_start
  9643                           
  9644     1F62                     l4099:	
  9645                           ;incstack = 0
  9646                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  9647                           
  9648                           
  9649                           ;i2c.c: 24:     i2c_wait_for_idle();
  9650     1F62  160A  158A  27AB  160A  158A  	fcall	_i2c_wait_for_idle
  9651     1F67                     l4101:
  9652                           
  9653                           ;i2c.c: 25:     SEN = 1;
  9654     1F67  1683               	bsf	3,5	;RP0=1, select bank1
  9655     1F68  1303               	bcf	3,6	;RP1=0, select bank1
  9656     1F69  1411               	bsf	17,0	;volatile
  9657     1F6A                     l93:
  9658     1F6A  0008               	return
  9659     1F6B                     __end_of_i2c_start:
  9660                           
  9661                           	psect	text42
  9662     1FAB                     __ptext42:	
  9663 ;; *************** function _i2c_wait_for_idle *****************
  9664 ;; Defined at:
  9665 ;;		line 16 in file "i2c.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;		None
  9668 ;; Auto vars:     Size  Location     Type
  9669 ;;		None
  9670 ;; Return value:  Size  Location     Type
  9671 ;;                  1    wreg      void 
  9672 ;; Registers used:
  9673 ;;		wreg, status,2
  9674 ;; Tracked objects:
  9675 ;;		On entry : 0/0
  9676 ;;		On exit  : 0/0
  9677 ;;		Unchanged: 0/0
  9678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9679 ;;      Params:         0       0       0       0       0
  9680 ;;      Locals:         0       0       0       0       0
  9681 ;;      Temps:          0       0       0       0       0
  9682 ;;      Totals:         0       0       0       0       0
  9683 ;;Total ram usage:        0 bytes
  9684 ;; Hardware stack levels used: 1
  9685 ;; Hardware stack levels required when called: 1
  9686 ;; This function calls:
  9687 ;;		Nothing
  9688 ;; This function is called by:
  9689 ;;		_i2c_start
  9690 ;;		_i2c_stop
  9691 ;;		_i2c_read
  9692 ;;		_i2c_write
  9693 ;; This function uses a non-reentrant model
  9694 ;;
  9695                           
  9696     1FAB                     _i2c_wait_for_idle:	
  9697                           ;psect for function _i2c_wait_for_idle
  9698                           
  9699     1FAB                     l4095:	
  9700                           ;incstack = 0
  9701                           ; Regs used in _i2c_wait_for_idle: [wreg+status,2]
  9702                           
  9703     1FAB                     l87:	
  9704                           ;i2c.c: 19:     while (R_nW || (SSPCON2 & 0x1F));
  9705                           
  9706     1FAB  1683               	bsf	3,5	;RP0=1, select bank1
  9707     1FAC  1303               	bcf	3,6	;RP1=0, select bank1
  9708     1FAD  1914               	btfsc	20,2	;volatile
  9709     1FAE  2FB0               	goto	u4041
  9710     1FAF  2FB1               	goto	u4040
  9711     1FB0                     u4041:
  9712     1FB0  2FAB               	goto	l87
  9713     1FB1                     u4040:
  9714     1FB1                     l4097:
  9715     1FB1  0811               	movf	17,w	;volatile
  9716     1FB2  391F               	andlw	31
  9717     1FB3  1D03               	btfss	3,2
  9718     1FB4  2FB6               	goto	u4051
  9719     1FB5  2FB7               	goto	u4050
  9720     1FB6                     u4051:
  9721     1FB6  2FAB               	goto	l87
  9722     1FB7                     u4050:
  9723     1FB7                     l90:
  9724     1FB7  0008               	return
  9725     1FB8                     __end_of_i2c_wait_for_idle:
  9726                           
  9727                           	psect	text43
  9728     1491                     __ptext43:	
  9729 ;; *************** function _strncpy *****************
  9730 ;; Defined at:
  9731 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncpy.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;  d               1    2[COMMON] PTR unsigned char 
  9734 ;;		 -> change_password@new_pwd(9), log(11), 
  9735 ;;  s               2    3[COMMON] PTR const unsigned char 
  9736 ;;		 -> STR_43(5), time(7), STR_14(3), STR_11(3), 
  9737 ;;		 -> STR_10(3), main@event(3), 
  9738 ;;  n               2    5[COMMON] unsigned int 
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;  cp              1    9[COMMON] PTR unsigned char 
  9741 ;;		 -> change_password@new_pwd(9), log(11), 
  9742 ;; Return value:  Size  Location     Type
  9743 ;;                  1    2[COMMON] PTR unsigned char 
  9744 ;; Registers used:
  9745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  9746 ;; Tracked objects:
  9747 ;;		On entry : 0/0
  9748 ;;		On exit  : 0/0
  9749 ;;		Unchanged: 0/0
  9750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9751 ;;      Params:         5       0       0       0       0
  9752 ;;      Locals:         1       0       0       0       0
  9753 ;;      Temps:          2       0       0       0       0
  9754 ;;      Totals:         8       0       0       0       0
  9755 ;;Total ram usage:        8 bytes
  9756 ;; Hardware stack levels used: 2
  9757 ;; Hardware stack levels required when called: 1
  9758 ;; This function calls:
  9759 ;;		Nothing
  9760 ;; This function is called by:
  9761 ;;		_log_car_event
  9762 ;;		_change_password
  9763 ;; This function uses a non-reentrant model
  9764 ;;
  9765                           
  9766     1491                     _strncpy:	
  9767                           ;psect for function _strncpy
  9768                           
  9769     1491                     l4309:	
  9770                           ;incstack = 0
  9771                           ; Regs used in _strncpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  9772                           
  9773     1491  0872               	movf	strncpy@d,w
  9774     1492  00F9               	movwf	strncpy@cp
  9775     1493  2CB9               	goto	l4317
  9776     1494                     l4311:
  9777     1494  3001               	movlw	1
  9778     1495  02F5               	subwf	strncpy@n,f
  9779     1496  3000               	movlw	0
  9780     1497  1C03               	skipc
  9781     1498  03F6               	decf	strncpy@n+1,f
  9782     1499  02F6               	subwf	strncpy@n+1,f
  9783     149A                     l4313:
  9784     149A  0874               	movf	strncpy@s+1,w
  9785     149B  00F8               	movwf	??_strncpy+1
  9786     149C  0873               	movf	strncpy@s,w
  9787     149D  00F7               	movwf	??_strncpy
  9788     149E  0AF3               	incf	strncpy@s,f
  9789     149F  1903               	skipnz
  9790     14A0  0AF4               	incf	strncpy@s+1,f
  9791     14A1  0878               	movf	??_strncpy+1,w
  9792     14A2  1283               	bcf	3,5	;RP0=0, select bank0
  9793     14A3  1303               	bcf	3,6	;RP1=0, select bank0
  9794     14A4  00FF               	movwf	btemp+1
  9795     14A5  0877               	movf	??_strncpy,w
  9796     14A6  0084               	movwf	4
  9797     14A7  160A  158A  2000  160A  118A  	fcall	stringtab
  9798     14AC  00FF               	movwf	btemp+1
  9799     14AD  0879               	movf	strncpy@cp,w
  9800     14AE  0AF9               	incf	strncpy@cp,f
  9801     14AF  0084               	movwf	4
  9802     14B0  087F               	movf	btemp+1,w
  9803     14B1  1383               	bcf	3,7	;select IRP bank0
  9804     14B2  0080               	movwf	0
  9805     14B3  0800               	movf	0,w
  9806     14B4  1D03               	btfss	3,2
  9807     14B5  2CB7               	goto	u4281
  9808     14B6  2CB8               	goto	u4280
  9809     14B7                     u4281:
  9810     14B7  2CB9               	goto	l4317
  9811     14B8                     u4280:
  9812     14B8  2CC6               	goto	l4323
  9813     14B9                     l4317:
  9814     14B9  0875               	movf	strncpy@n,w
  9815     14BA  0476               	iorwf	strncpy@n+1,w
  9816     14BB  1D03               	btfss	3,2
  9817     14BC  2CBE               	goto	u4291
  9818     14BD  2CBF               	goto	u4290
  9819     14BE                     u4291:
  9820     14BE  2C94               	goto	l4311
  9821     14BF                     u4290:
  9822     14BF  2CC6               	goto	l4323
  9823     14C0                     l4319:
  9824     14C0  0879               	movf	strncpy@cp,w
  9825     14C1  0084               	movwf	4
  9826     14C2  1383               	bcf	3,7	;select IRP bank0
  9827     14C3  0180               	clrf	0
  9828     14C4                     l4321:
  9829     14C4  3001               	movlw	1
  9830     14C5  07F9               	addwf	strncpy@cp,f
  9831     14C6                     l4323:
  9832     14C6  3001               	movlw	1
  9833     14C7  02F5               	subwf	strncpy@n,f
  9834     14C8  3000               	movlw	0
  9835     14C9  1C03               	skipc
  9836     14CA  03F6               	decf	strncpy@n+1,f
  9837     14CB  02F6               	subwf	strncpy@n+1,f
  9838     14CC  0A75               	incf	strncpy@n,w
  9839     14CD  1D03               	skipz
  9840     14CE  2CD3               	goto	u4301
  9841     14CF  0A76               	incf	strncpy@n+1,w
  9842     14D0  1D03               	btfss	3,2
  9843     14D1  2CD3               	goto	u4301
  9844     14D2  2CD4               	goto	u4300
  9845     14D3                     u4301:
  9846     14D3  2CC0               	goto	l4319
  9847     14D4                     u4300:
  9848     14D4                     l1115:
  9849     14D4  0008               	return
  9850     14D5                     __end_of_strncpy:
  9851                           
  9852                           	psect	text44
  9853     14D5                     __ptext44:	
  9854 ;; *************** function _strncmp *****************
  9855 ;; Defined at:
  9856 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncmp.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;  l               1    2[COMMON] PTR const unsigned char 
  9859 ;;		 -> change_password@new_pwd(9), login@stored_pwd(4), 
  9860 ;;  r               1    3[COMMON] PTR const unsigned char 
  9861 ;;		 -> change_password@new_pwd(9), login@user_password(4), 
  9862 ;;  n               2    4[COMMON] unsigned int 
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;		None
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  2    2[COMMON] int 
  9867 ;; Registers used:
  9868 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9874 ;;      Params:         4       0       0       0       0
  9875 ;;      Locals:         0       0       0       0       0
  9876 ;;      Temps:          2       0       0       0       0
  9877 ;;      Totals:         6       0       0       0       0
  9878 ;;Total ram usage:        6 bytes
  9879 ;; Hardware stack levels used: 1
  9880 ;; Hardware stack levels required when called: 1
  9881 ;; This function calls:
  9882 ;;		Nothing
  9883 ;; This function is called by:
  9884 ;;		_login
  9885 ;;		_change_password
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889     14D5                     _strncmp:	
  9890                           ;psect for function _strncmp
  9891                           
  9892     14D5                     l4331:	
  9893                           ;incstack = 0
  9894                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0]
  9895                           
  9896     14D5  3001               	movlw	1
  9897     14D6  02F4               	subwf	strncmp@n,f
  9898     14D7  3000               	movlw	0
  9899     14D8  1C03               	skipc
  9900     14D9  03F5               	decf	strncmp@n+1,f
  9901     14DA  02F5               	subwf	strncmp@n+1,f
  9902     14DB  0A74               	incf	strncmp@n,w
  9903     14DC  1D03               	skipz
  9904     14DD  2CE2               	goto	u4311
  9905     14DE  0A75               	incf	strncmp@n+1,w
  9906     14DF  1D03               	btfss	3,2
  9907     14E0  2CE2               	goto	u4311
  9908     14E1  2CE3               	goto	u4310
  9909     14E2                     u4311:
  9910     14E2  2CF0               	goto	l4341
  9911     14E3                     u4310:
  9912     14E3                     l4333:
  9913     14E3  01F2               	clrf	?_strncmp
  9914     14E4  01F3               	clrf	?_strncmp+1
  9915     14E5  2D1F               	goto	l1100
  9916     14E6                     l4337:
  9917     14E6  3001               	movlw	1
  9918     14E7  07F2               	addwf	strncmp@l,f
  9919     14E8  3001               	movlw	1
  9920     14E9  07F3               	addwf	strncmp@r,f
  9921     14EA                     l4339:
  9922     14EA  3001               	movlw	1
  9923     14EB  02F4               	subwf	strncmp@n,f
  9924     14EC  3000               	movlw	0
  9925     14ED  1C03               	skipc
  9926     14EE  03F5               	decf	strncmp@n+1,f
  9927     14EF  02F5               	subwf	strncmp@n+1,f
  9928     14F0                     l4341:
  9929     14F0  0872               	movf	strncmp@l,w
  9930     14F1  0084               	movwf	4
  9931     14F2  1383               	bcf	3,7	;select IRP bank0
  9932     14F3  0800               	movf	0,w
  9933     14F4  1903               	btfsc	3,2
  9934     14F5  2CF7               	goto	u4321
  9935     14F6  2CF8               	goto	u4320
  9936     14F7                     u4321:
  9937     14F7  2D11               	goto	l4349
  9938     14F8                     u4320:
  9939     14F8                     l4343:
  9940     14F8  0873               	movf	strncmp@r,w
  9941     14F9  0084               	movwf	4
  9942     14FA  0800               	movf	0,w
  9943     14FB  1903               	btfsc	3,2
  9944     14FC  2CFE               	goto	u4331
  9945     14FD  2CFF               	goto	u4330
  9946     14FE                     u4331:
  9947     14FE  2D11               	goto	l4349
  9948     14FF                     u4330:
  9949     14FF                     l4345:
  9950     14FF  0874               	movf	strncmp@n,w
  9951     1500  0475               	iorwf	strncmp@n+1,w
  9952     1501  1903               	btfsc	3,2
  9953     1502  2D04               	goto	u4341
  9954     1503  2D05               	goto	u4340
  9955     1504                     u4341:
  9956     1504  2D11               	goto	l4349
  9957     1505                     u4340:
  9958     1505                     l4347:
  9959     1505  0873               	movf	strncmp@r,w
  9960     1506  0084               	movwf	4
  9961     1507  0800               	movf	0,w
  9962     1508  00F6               	movwf	??_strncmp
  9963     1509  0872               	movf	strncmp@l,w
  9964     150A  0084               	movwf	4
  9965     150B  0800               	movf	0,w
  9966     150C  0676               	xorwf	??_strncmp,w
  9967     150D  1903               	skipnz
  9968     150E  2D10               	goto	u4351
  9969     150F  2D11               	goto	u4350
  9970     1510                     u4351:
  9971     1510  2CE6               	goto	l4337
  9972     1511                     u4350:
  9973     1511                     l4349:
  9974     1511  0873               	movf	strncmp@r,w
  9975     1512  0084               	movwf	4
  9976     1513  0800               	movf	0,w
  9977     1514  00F6               	movwf	??_strncmp
  9978     1515  0872               	movf	strncmp@l,w
  9979     1516  0084               	movwf	4
  9980     1517  0800               	movf	0,w
  9981     1518  00F7               	movwf	??_strncmp+1
  9982     1519  0876               	movf	??_strncmp,w
  9983     151A  0277               	subwf	??_strncmp+1,w
  9984     151B  00F2               	movwf	?_strncmp
  9985     151C  01F3               	clrf	?_strncmp+1
  9986     151D  1C03               	skipc
  9987     151E  03F3               	decf	?_strncmp+1,f
  9988     151F                     l1100:
  9989     151F  0008               	return
  9990     1520                     __end_of_strncmp:
  9991                           
  9992                           	psect	text45
  9993     11D6                     __ptext45:	
  9994 ;; *************** function _clcd_putch *****************
  9995 ;; Defined at:
  9996 ;;		line 56 in file "clcd.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;  data            1    wreg     const unsigned char 
  9999 ;;  addr            1    0[BANK0 ] unsigned char 
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;  data            1    1[BANK0 ] const unsigned char 
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  1    wreg      void 
 10004 ;; Registers used:
 10005 ;;		wreg, status,2, status,0, pclath, cstack
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10011 ;;      Params:         0       1       0       0       0
 10012 ;;      Locals:         0       1       0       0       0
 10013 ;;      Temps:          0       0       0       0       0
 10014 ;;      Totals:         0       2       0       0       0
 10015 ;;Total ram usage:        2 bytes
 10016 ;; Hardware stack levels used: 1
 10017 ;; Hardware stack levels required when called: 2
 10018 ;; This function calls:
 10019 ;;		_clcd_write
 10020 ;; This function is called by:
 10021 ;;		_display_time
 10022 ;;		_display_dashboard
 10023 ;;		_login
 10024 ;;		_menu_screen
 10025 ;;		_view_log
 10026 ;;		_change_time
 10027 ;;		_change_password
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           
 10031     11D6                     _clcd_putch:	
 10032                           ;psect for function _clcd_putch
 10033                           
 10034                           
 10035                           ;incstack = 0
 10036                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
 10037                           ;clcd_putch@data stored from wreg
 10038     11D6  1283               	bcf	3,5	;RP0=0, select bank0
 10039     11D7  1303               	bcf	3,6	;RP1=0, select bank0
 10040     11D8  00A1               	movwf	clcd_putch@data
 10041     11D9                     l4185:
 10042                           
 10043                           ;clcd.c: 56: void clcd_putch(const char data, unsigned char addr);clcd.c: 57: {;clcd.c: 
      +                          58:     clcd_write(addr, 0);
 10044     11D9  01F2               	clrf	clcd_write@mode
 10045     11DA  0820               	movf	clcd_putch@addr,w
 10046     11DB  160A  118A  2421  160A  118A  	fcall	_clcd_write
 10047                           
 10048                           ;clcd.c: 59:     clcd_write(data, 1);
 10049     11E0  01F2               	clrf	clcd_write@mode
 10050     11E1  0AF2               	incf	clcd_write@mode,f
 10051     11E2  1283               	bcf	3,5	;RP0=0, select bank0
 10052     11E3  1303               	bcf	3,6	;RP1=0, select bank0
 10053     11E4  0821               	movf	clcd_putch@data,w
 10054     11E5  160A  118A  2421  160A  118A  	fcall	_clcd_write
 10055     11EA                     l26:
 10056     11EA  0008               	return
 10057     11EB                     __end_of_clcd_putch:
 10058                           
 10059                           	psect	text46
 10060     135A                     __ptext46:	
 10061 ;; *************** function _clcd_print *****************
 10062 ;; Defined at:
 10063 ;;		line 62 in file "clcd.c"
 10064 ;; Parameters:    Size  Location     Type
 10065 ;;  str             2    6[COMMON] PTR unsigned char 
 10066 ;;		 -> STR_51(7), STR_50(17), STR_49(14), STR_48(17), 
 10067 ;;		 -> STR_47(18), STR_46(18), STR_45(17), STR_44(17), 
 10068 ;;		 -> STR_42(3), STR_41(3), STR_40(3), STR_39(13), 
 10069 ;;		 -> STR_38(13), STR_37(16), STR_30(11), STR_29(12), 
 10070 ;;		 -> STR_28(10), STR_27(15), STR_26(13), STR_25(15), 
 10071 ;;		 -> STR_24(5), STR_23(9), STR_22(16), STR_21(15), 
 10072 ;;		 -> STR_20(15), STR_19(15), STR_18(9), STR_17(13), 
 10073 ;;		 -> STR_16(10), STR_15(9), STR_13(8), STR_12(5), 
 10074 ;;		 -> STR_9(15), main@event(3), 
 10075 ;;  addr            1    8[COMMON] unsigned char 
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;		None
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  1    wreg      void 
 10080 ;; Registers used:
 10081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10082 ;; Tracked objects:
 10083 ;;		On entry : 0/0
 10084 ;;		On exit  : 0/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10087 ;;      Params:         3       0       0       0       0
 10088 ;;      Locals:         0       0       0       0       0
 10089 ;;      Temps:          0       0       0       0       0
 10090 ;;      Totals:         3       0       0       0       0
 10091 ;;Total ram usage:        3 bytes
 10092 ;; Hardware stack levels used: 1
 10093 ;; Hardware stack levels required when called: 2
 10094 ;; This function calls:
 10095 ;;		_clcd_write
 10096 ;; This function is called by:
 10097 ;;		_main
 10098 ;;		_display_dashboard
 10099 ;;		_login
 10100 ;;		_menu_screen
 10101 ;;		_view_log
 10102 ;;		_clear_log
 10103 ;;		_change_time
 10104 ;;		_change_password
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108     135A                     _clcd_print:	
 10109                           ;psect for function _clcd_print
 10110                           
 10111     135A                     l4263:	
 10112                           ;incstack = 0
 10113                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10114                           
 10115                           
 10116                           ;clcd.c: 62: void clcd_print(char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 64:   
      +                            clcd_write(addr, 0);
 10117     135A  01F2               	clrf	clcd_write@mode
 10118     135B  0878               	movf	clcd_print@addr,w
 10119     135C  160A  118A  2421  160A  118A  	fcall	_clcd_write
 10120                           
 10121                           ;clcd.c: 66:     while (*str != '\0')
 10122     1361  2B78               	goto	l4269
 10123     1362                     l4265:
 10124                           
 10125                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
 10126     1362  01F2               	clrf	clcd_write@mode
 10127     1363  0AF2               	incf	clcd_write@mode,f
 10128     1364  0877               	movf	clcd_print@str+1,w
 10129     1365  00FF               	movwf	btemp+1
 10130     1366  0876               	movf	clcd_print@str,w
 10131     1367  0084               	movwf	4
 10132     1368  160A  158A  2000  160A  118A  	fcall	stringtab
 10133     136D  160A  118A  2421  160A  118A  	fcall	_clcd_write
 10134     1372                     l4267:
 10135                           
 10136                           ;clcd.c: 69:         str++;
 10137     1372  3001               	movlw	1
 10138     1373  07F6               	addwf	clcd_print@str,f
 10139     1374  1803               	skipnc
 10140     1375  0AF7               	incf	clcd_print@str+1,f
 10141     1376  3000               	movlw	0
 10142     1377  07F7               	addwf	clcd_print@str+1,f
 10143     1378                     l4269:
 10144                           
 10145                           ;clcd.c: 66:     while (*str != '\0')
 10146     1378  0877               	movf	clcd_print@str+1,w
 10147     1379  1283               	bcf	3,5	;RP0=0, select bank0
 10148     137A  1303               	bcf	3,6	;RP1=0, select bank0
 10149     137B  00FF               	movwf	btemp+1
 10150     137C  0876               	movf	clcd_print@str,w
 10151     137D  0084               	movwf	4
 10152     137E  160A  158A  2000  160A  118A  	fcall	stringtab
 10153     1383  3A00               	xorlw	0
 10154     1384  1D03               	skipz
 10155     1385  2B87               	goto	u4241
 10156     1386  2B88               	goto	u4240
 10157     1387                     u4241:
 10158     1387  2B62               	goto	l4265
 10159     1388                     u4240:
 10160     1388                     l32:
 10161     1388  0008               	return
 10162     1389                     __end_of_clcd_print:
 10163                           
 10164                           	psect	text47
 10165     1421                     __ptext47:	
 10166 ;; *************** function _clcd_write *****************
 10167 ;; Defined at:
 10168 ;;		line 4 in file "clcd.c"
 10169 ;; Parameters:    Size  Location     Type
 10170 ;;  byte            1    wreg     unsigned char 
 10171 ;;  mode            1    2[COMMON] unsigned char 
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;  byte            1    5[COMMON] unsigned char 
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  1    wreg      void 
 10176 ;; Registers used:
 10177 ;;		wreg, status,2, status,0
 10178 ;; Tracked objects:
 10179 ;;		On entry : 0/0
 10180 ;;		On exit  : 0/0
 10181 ;;		Unchanged: 0/0
 10182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10183 ;;      Params:         1       0       0       0       0
 10184 ;;      Locals:         1       0       0       0       0
 10185 ;;      Temps:          2       0       0       0       0
 10186 ;;      Totals:         4       0       0       0       0
 10187 ;;Total ram usage:        4 bytes
 10188 ;; Hardware stack levels used: 1
 10189 ;; Hardware stack levels required when called: 1
 10190 ;; This function calls:
 10191 ;;		Nothing
 10192 ;; This function is called by:
 10193 ;;		_init_display_controller
 10194 ;;		_clcd_putch
 10195 ;;		_clcd_print
 10196 ;;		_main
 10197 ;;		_login
 10198 ;;		_change_password
 10199 ;;		_clear_clcd_screen
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203     1421                     _clcd_write:	
 10204                           ;psect for function _clcd_write
 10205                           
 10206                           
 10207                           ;incstack = 0
 10208                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
 10209                           ;clcd_write@byte stored from wreg
 10210     1421  00F5               	movwf	clcd_write@byte
 10211     1422                     l4131:
 10212                           
 10213                           ;clcd.c: 4: void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;clcd.c:
      +                           6:     RE2 =(__bit) mode;
 10214     1422  1872               	btfsc	clcd_write@mode,0
 10215     1423  2C25               	goto	u4071
 10216     1424  2C29               	goto	u4070
 10217     1425                     u4071:
 10218     1425  1283               	bcf	3,5	;RP0=0, select bank0
 10219     1426  1303               	bcf	3,6	;RP1=0, select bank0
 10220     1427  1509               	bsf	9,2	;volatile
 10221     1428  2C2C               	goto	u4084
 10222     1429                     u4070:
 10223     1429  1283               	bcf	3,5	;RP0=0, select bank0
 10224     142A  1303               	bcf	3,6	;RP1=0, select bank0
 10225     142B  1109               	bcf	9,2	;volatile
 10226     142C                     u4084:
 10227     142C                     l4133:
 10228                           
 10229                           ;clcd.c: 8:     PORTD = byte & 0xF0;
 10230     142C  0875               	movf	clcd_write@byte,w
 10231     142D  39F0               	andlw	240
 10232     142E  0088               	movwf	8	;volatile
 10233     142F                     l4135:
 10234                           
 10235                           ;clcd.c: 9:     RE1 = 1;
 10236     142F  1489               	bsf	9,1	;volatile
 10237     1430                     l4137:
 10238                           
 10239                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
 10240     1430  30A6               	movlw	166
 10241     1431  00F3               	movwf	??_clcd_write
 10242     1432                     u6267:
 10243     1432  0BF3               	decfsz	??_clcd_write,f
 10244     1433  2C32               	goto	u6267
 10245     1434  0000               	nop
 10246     1435                     l4139:
 10247                           
 10248                           ;clcd.c: 11:     RE1 = 0;
 10249     1435  1283               	bcf	3,5	;RP0=0, select bank0
 10250     1436  1303               	bcf	3,6	;RP1=0, select bank0
 10251     1437  1089               	bcf	9,1	;volatile
 10252     1438                     l4141:
 10253                           
 10254                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << (unsigned char) 4;
 10255     1438  0875               	movf	clcd_write@byte,w
 10256     1439  390F               	andlw	15
 10257     143A  00F3               	movwf	??_clcd_write
 10258     143B  3003               	movlw	3
 10259     143C                     u4095:
 10260     143C  1003               	clrc
 10261     143D  0DF3               	rlf	??_clcd_write,f
 10262     143E  3EFF               	addlw	-1
 10263     143F  1D03               	skipz
 10264     1440  2C3C               	goto	u4095
 10265     1441  1003               	clrc
 10266     1442  0D73               	rlf	??_clcd_write,w
 10267     1443  0088               	movwf	8	;volatile
 10268     1444                     l4143:
 10269                           
 10270                           ;clcd.c: 14:     RE1 = 1;
 10271     1444  1489               	bsf	9,1	;volatile
 10272     1445                     l4145:
 10273                           
 10274                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
 10275     1445  30A6               	movlw	166
 10276     1446  00F3               	movwf	??_clcd_write
 10277     1447                     u6277:
 10278     1447  0BF3               	decfsz	??_clcd_write,f
 10279     1448  2C47               	goto	u6277
 10280     1449  0000               	nop
 10281     144A                     l4147:
 10282                           
 10283                           ;clcd.c: 16:     RE1 = 0;
 10284     144A  1283               	bcf	3,5	;RP0=0, select bank0
 10285     144B  1303               	bcf	3,6	;RP1=0, select bank0
 10286     144C  1089               	bcf	9,1	;volatile
 10287     144D                     l4149:
 10288                           
 10289                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
 10290     144D  301B               	movlw	27
 10291     144E  00F4               	movwf	??_clcd_write+1
 10292     144F  309E               	movlw	158
 10293     1450  00F3               	movwf	??_clcd_write
 10294     1451                     u6287:
 10295     1451  0BF3               	decfsz	??_clcd_write,f
 10296     1452  2C51               	goto	u6287
 10297     1453  0BF4               	decfsz	??_clcd_write+1,f
 10298     1454  2C51               	goto	u6287
 10299     1455  0000               	nop
 10300     1456                     l17:
 10301     1456  0008               	return
 10302     1457                     __end_of_clcd_write:
 10303                           
 10304                           	psect	text48
 10305     08E1                     __ptext48:	
 10306 ;; *************** function ___xxtofl *****************
 10307 ;; Defined at:
 10308 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
 10309 ;; Parameters:    Size  Location     Type
 10310 ;;  sign            1    wreg     unsigned char 
 10311 ;;  val             4    6[COMMON] long 
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;  sign            1    4[BANK0 ] unsigned char 
 10314 ;;  arg             4    6[BANK0 ] unsigned long 
 10315 ;;  exp             1    5[BANK0 ] unsigned char 
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  4    6[COMMON] unsigned char 
 10318 ;; Registers used:
 10319 ;;		wreg, status,2, status,0
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10325 ;;      Params:         4       0       0       0       0
 10326 ;;      Locals:         0       6       0       0       0
 10327 ;;      Temps:          0       4       0       0       0
 10328 ;;      Totals:         4      10       0       0       0
 10329 ;;Total ram usage:       14 bytes
 10330 ;; Hardware stack levels used: 1
 10331 ;; Hardware stack levels required when called: 1
 10332 ;; This function calls:
 10333 ;;		Nothing
 10334 ;; This function is called by:
 10335 ;;		_main
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339     08E1                     ___xxtofl:	
 10340                           ;psect for function ___xxtofl
 10341                           
 10342                           
 10343                           ;incstack = 0
 10344                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10345                           ;___xxtofl@sign stored from wreg
 10346     08E1  1283               	bcf	3,5	;RP0=0, select bank0
 10347     08E2  1303               	bcf	3,6	;RP1=0, select bank0
 10348     08E3  00A4               	movwf	___xxtofl@sign
 10349     08E4                     l5263:
 10350     08E4  0824               	movf	___xxtofl@sign,w
 10351     08E5  1903               	btfsc	3,2
 10352     08E6  28E8               	goto	u5681
 10353     08E7  28E9               	goto	u5680
 10354     08E8                     u5681:
 10355     08E8  28FD               	goto	l5269
 10356     08E9                     u5680:
 10357     08E9                     l5265:
 10358     08E9  1FF9               	btfss	___xxtofl@val+3,7
 10359     08EA  28EC               	goto	u5691
 10360     08EB  28ED               	goto	u5690
 10361     08EC                     u5691:
 10362     08EC  28FD               	goto	l5269
 10363     08ED                     u5690:
 10364     08ED                     l5267:
 10365     08ED  0976               	comf	___xxtofl@val,w
 10366     08EE  00A6               	movwf	___xxtofl@arg
 10367     08EF  0977               	comf	___xxtofl@val+1,w
 10368     08F0  00A7               	movwf	___xxtofl@arg+1
 10369     08F1  0978               	comf	___xxtofl@val+2,w
 10370     08F2  00A8               	movwf	___xxtofl@arg+2
 10371     08F3  0979               	comf	___xxtofl@val+3,w
 10372     08F4  00A9               	movwf	___xxtofl@arg+3
 10373     08F5  0AA6               	incf	___xxtofl@arg,f
 10374     08F6  1903               	skipnz
 10375     08F7  0AA7               	incf	___xxtofl@arg+1,f
 10376     08F8  1903               	skipnz
 10377     08F9  0AA8               	incf	___xxtofl@arg+2,f
 10378     08FA  1903               	skipnz
 10379     08FB  0AA9               	incf	___xxtofl@arg+3,f
 10380     08FC  2905               	goto	l1075
 10381     08FD                     l5269:
 10382     08FD  0879               	movf	___xxtofl@val+3,w
 10383     08FE  00A9               	movwf	___xxtofl@arg+3
 10384     08FF  0878               	movf	___xxtofl@val+2,w
 10385     0900  00A8               	movwf	___xxtofl@arg+2
 10386     0901  0877               	movf	___xxtofl@val+1,w
 10387     0902  00A7               	movwf	___xxtofl@arg+1
 10388     0903  0876               	movf	___xxtofl@val,w
 10389     0904  00A6               	movwf	___xxtofl@arg
 10390     0905                     l1075:
 10391     0905  0879               	movf	___xxtofl@val+3,w
 10392     0906  0478               	iorwf	___xxtofl@val+2,w
 10393     0907  0477               	iorwf	___xxtofl@val+1,w
 10394     0908  0476               	iorwf	___xxtofl@val,w
 10395     0909  1D03               	skipz
 10396     090A  290C               	goto	u5701
 10397     090B  290D               	goto	u5700
 10398     090C                     u5701:
 10399     090C  2916               	goto	l1076
 10400     090D                     u5700:
 10401     090D                     l5271:
 10402     090D  3000               	movlw	0
 10403     090E  00F9               	movwf	?___xxtofl+3
 10404     090F  3000               	movlw	0
 10405     0910  00F8               	movwf	?___xxtofl+2
 10406     0911  3000               	movlw	0
 10407     0912  00F7               	movwf	?___xxtofl+1
 10408     0913  3000               	movlw	0
 10409     0914  00F6               	movwf	?___xxtofl
 10410     0915  2996               	goto	l1077
 10411     0916                     l1076:
 10412     0916  3096               	movlw	150
 10413     0917  00A5               	movwf	___xxtofl@exp
 10414     0918  2924               	goto	l5277
 10415     0919                     l5275:
 10416     0919  3001               	movlw	1
 10417     091A  07A5               	addwf	___xxtofl@exp,f
 10418     091B  3001               	movlw	1
 10419     091C                     u5715:
 10420     091C  1003               	clrc
 10421     091D  0CA9               	rrf	___xxtofl@arg+3,f
 10422     091E  0CA8               	rrf	___xxtofl@arg+2,f
 10423     091F  0CA7               	rrf	___xxtofl@arg+1,f
 10424     0920  0CA6               	rrf	___xxtofl@arg,f
 10425     0921  3EFF               	addlw	-1
 10426     0922  1D03               	skipz
 10427     0923  291C               	goto	u5715
 10428     0924                     l5277:
 10429     0924  30FE               	movlw	254
 10430     0925  0529               	andwf	___xxtofl@arg+3,w
 10431     0926  1D03               	btfss	3,2
 10432     0927  2929               	goto	u5721
 10433     0928  292A               	goto	u5720
 10434     0929                     u5721:
 10435     0929  2919               	goto	l5275
 10436     092A                     u5720:
 10437     092A  2944               	goto	l1081
 10438     092B                     l5279:
 10439     092B  3001               	movlw	1
 10440     092C  07A5               	addwf	___xxtofl@exp,f
 10441     092D                     l5281:
 10442     092D  3001               	movlw	1
 10443     092E  07A6               	addwf	___xxtofl@arg,f
 10444     092F  3000               	movlw	0
 10445     0930  1803               	skipnc
 10446     0931  3001               	movlw	1
 10447     0932  07A7               	addwf	___xxtofl@arg+1,f
 10448     0933  3000               	movlw	0
 10449     0934  1803               	skipnc
 10450     0935  3001               	movlw	1
 10451     0936  07A8               	addwf	___xxtofl@arg+2,f
 10452     0937  3000               	movlw	0
 10453     0938  1803               	skipnc
 10454     0939  3001               	movlw	1
 10455     093A  07A9               	addwf	___xxtofl@arg+3,f
 10456     093B                     l5283:
 10457     093B  3001               	movlw	1
 10458     093C                     u5735:
 10459     093C  1003               	clrc
 10460     093D  0CA9               	rrf	___xxtofl@arg+3,f
 10461     093E  0CA8               	rrf	___xxtofl@arg+2,f
 10462     093F  0CA7               	rrf	___xxtofl@arg+1,f
 10463     0940  0CA6               	rrf	___xxtofl@arg,f
 10464     0941  3EFF               	addlw	-1
 10465     0942  1D03               	skipz
 10466     0943  293C               	goto	u5735
 10467     0944                     l1081:
 10468     0944  30FF               	movlw	255
 10469     0945  0529               	andwf	___xxtofl@arg+3,w
 10470     0946  1D03               	btfss	3,2
 10471     0947  2949               	goto	u5741
 10472     0948  294A               	goto	u5740
 10473     0949                     u5741:
 10474     0949  292B               	goto	l5279
 10475     094A                     u5740:
 10476     094A  2956               	goto	l5287
 10477     094B                     l5285:
 10478     094B  3001               	movlw	1
 10479     094C  02A5               	subwf	___xxtofl@exp,f
 10480     094D  3001               	movlw	1
 10481     094E  00A0               	movwf	??___xxtofl
 10482     094F                     u5755:
 10483     094F  1003               	clrc
 10484     0950  0DA6               	rlf	___xxtofl@arg,f
 10485     0951  0DA7               	rlf	___xxtofl@arg+1,f
 10486     0952  0DA8               	rlf	___xxtofl@arg+2,f
 10487     0953  0DA9               	rlf	___xxtofl@arg+3,f
 10488     0954  0BA0               	decfsz	??___xxtofl,f
 10489     0955  294F               	goto	u5755
 10490     0956                     l5287:
 10491     0956  1BA8               	btfsc	___xxtofl@arg+2,7
 10492     0957  2959               	goto	u5761
 10493     0958  295A               	goto	u5760
 10494     0959                     u5761:
 10495     0959  2960               	goto	l1088
 10496     095A                     u5760:
 10497     095A                     l5289:
 10498     095A  3002               	movlw	2
 10499     095B  0225               	subwf	___xxtofl@exp,w
 10500     095C  1803               	skipnc
 10501     095D  295F               	goto	u5771
 10502     095E  2960               	goto	u5770
 10503     095F                     u5771:
 10504     095F  294B               	goto	l5285
 10505     0960                     u5770:
 10506     0960                     l1088:
 10507     0960  1825               	btfsc	___xxtofl@exp,0
 10508     0961  2963               	goto	u5781
 10509     0962  2964               	goto	u5780
 10510     0963                     u5781:
 10511     0963  296C               	goto	l1089
 10512     0964                     u5780:
 10513     0964                     l5291:
 10514     0964  30FF               	movlw	255
 10515     0965  05A6               	andwf	___xxtofl@arg,f
 10516     0966  30FF               	movlw	255
 10517     0967  05A7               	andwf	___xxtofl@arg+1,f
 10518     0968  307F               	movlw	127
 10519     0969  05A8               	andwf	___xxtofl@arg+2,f
 10520     096A  30FF               	movlw	255
 10521     096B  05A9               	andwf	___xxtofl@arg+3,f
 10522     096C                     l1089:
 10523     096C  1003               	clrc
 10524     096D  0CA5               	rrf	___xxtofl@exp,f
 10525     096E                     l5293:
 10526     096E  0825               	movf	___xxtofl@exp,w
 10527     096F  00A0               	movwf	??___xxtofl
 10528     0970  01A1               	clrf	??___xxtofl+1
 10529     0971  01A2               	clrf	??___xxtofl+2
 10530     0972  01A3               	clrf	??___xxtofl+3
 10531     0973  3018               	movlw	24
 10532     0974                     u5795:
 10533     0974  1003               	clrc
 10534     0975  0DA0               	rlf	??___xxtofl,f
 10535     0976  0DA1               	rlf	??___xxtofl+1,f
 10536     0977  0DA2               	rlf	??___xxtofl+2,f
 10537     0978  0DA3               	rlf	??___xxtofl+3,f
 10538     0979                     u5790:
 10539     0979  3EFF               	addlw	-1
 10540     097A  1D03               	skipz
 10541     097B  2974               	goto	u5795
 10542     097C  0820               	movf	??___xxtofl,w
 10543     097D  04A6               	iorwf	___xxtofl@arg,f
 10544     097E  0821               	movf	??___xxtofl+1,w
 10545     097F  04A7               	iorwf	___xxtofl@arg+1,f
 10546     0980  0822               	movf	??___xxtofl+2,w
 10547     0981  04A8               	iorwf	___xxtofl@arg+2,f
 10548     0982  0823               	movf	??___xxtofl+3,w
 10549     0983  04A9               	iorwf	___xxtofl@arg+3,f
 10550     0984                     l5295:
 10551     0984  0824               	movf	___xxtofl@sign,w
 10552     0985  1903               	btfsc	3,2
 10553     0986  2988               	goto	u5801
 10554     0987  2989               	goto	u5800
 10555     0988                     u5801:
 10556     0988  298E               	goto	l5301
 10557     0989                     u5800:
 10558     0989                     l5297:
 10559     0989  1FF9               	btfss	___xxtofl@val+3,7
 10560     098A  298C               	goto	u5811
 10561     098B  298D               	goto	u5810
 10562     098C                     u5811:
 10563     098C  298E               	goto	l5301
 10564     098D                     u5810:
 10565     098D                     l5299:
 10566     098D  17A9               	bsf	___xxtofl@arg+3,7
 10567     098E                     l5301:
 10568     098E  0829               	movf	___xxtofl@arg+3,w
 10569     098F  00F9               	movwf	?___xxtofl+3
 10570     0990  0828               	movf	___xxtofl@arg+2,w
 10571     0991  00F8               	movwf	?___xxtofl+2
 10572     0992  0827               	movf	___xxtofl@arg+1,w
 10573     0993  00F7               	movwf	?___xxtofl+1
 10574     0994  0826               	movf	___xxtofl@arg,w
 10575     0995  00F6               	movwf	?___xxtofl
 10576     0996                     l1077:
 10577     0996  0008               	return
 10578     0997                     __end_of___xxtofl:
 10579                           
 10580                           	psect	text49
 10581     086B                     __ptext49:	
 10582 ;; *************** function ___fltol *****************
 10583 ;; Defined at:
 10584 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
 10585 ;; Parameters:    Size  Location     Type
 10586 ;;  f1              4   36[BANK0 ] unsigned char 
 10587 ;; Auto vars:     Size  Location     Type
 10588 ;;  exp1            1   45[BANK0 ] unsigned char 
 10589 ;;  sign1           1   44[BANK0 ] unsigned char 
 10590 ;; Return value:  Size  Location     Type
 10591 ;;                  4   36[BANK0 ] long 
 10592 ;; Registers used:
 10593 ;;		wreg, status,2, status,0
 10594 ;; Tracked objects:
 10595 ;;		On entry : 0/0
 10596 ;;		On exit  : 0/0
 10597 ;;		Unchanged: 0/0
 10598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10599 ;;      Params:         0       4       0       0       0
 10600 ;;      Locals:         0       2       0       0       0
 10601 ;;      Temps:          0       4       0       0       0
 10602 ;;      Totals:         0      10       0       0       0
 10603 ;;Total ram usage:       10 bytes
 10604 ;; Hardware stack levels used: 1
 10605 ;; Hardware stack levels required when called: 1
 10606 ;; This function calls:
 10607 ;;		Nothing
 10608 ;; This function is called by:
 10609 ;;		_main
 10610 ;; This function uses a non-reentrant model
 10611 ;;
 10612                           
 10613     086B                     ___fltol:	
 10614                           ;psect for function ___fltol
 10615                           
 10616     086B                     l5083:	
 10617                           ;incstack = 0
 10618                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10619                           
 10620     086B  1003               	clrc
 10621     086C  1283               	bcf	3,5	;RP0=0, select bank0
 10622     086D  1303               	bcf	3,6	;RP1=0, select bank0
 10623     086E  0D46               	rlf	___fltol@f1+2,w
 10624     086F  0D47               	rlf	___fltol@f1+3,w
 10625     0870  00CD               	movwf	___fltol@exp1
 10626     0871  084D               	movf	___fltol@exp1,w
 10627     0872  1D03               	btfss	3,2
 10628     0873  2875               	goto	u5291
 10629     0874  2876               	goto	u5290
 10630     0875                     u5291:
 10631     0875  287F               	goto	l5089
 10632     0876                     u5290:
 10633     0876                     l5085:
 10634     0876  3000               	movlw	0
 10635     0877  00C7               	movwf	?___fltol+3
 10636     0878  3000               	movlw	0
 10637     0879  00C6               	movwf	?___fltol+2
 10638     087A  3000               	movlw	0
 10639     087B  00C5               	movwf	?___fltol+1
 10640     087C  3000               	movlw	0
 10641     087D  00C4               	movwf	?___fltol
 10642     087E  28E0               	goto	l828
 10643     087F                     l5089:
 10644     087F  0844               	movf	___fltol@f1,w
 10645     0880  00C8               	movwf	??___fltol
 10646     0881  0845               	movf	___fltol@f1+1,w
 10647     0882  00C9               	movwf	??___fltol+1
 10648     0883  0846               	movf	___fltol@f1+2,w
 10649     0884  00CA               	movwf	??___fltol+2
 10650     0885  0847               	movf	___fltol@f1+3,w
 10651     0886  00CB               	movwf	??___fltol+3
 10652     0887  301F               	movlw	31
 10653     0888                     u5305:
 10654     0888  1003               	clrc
 10655     0889  0CCB               	rrf	??___fltol+3,f
 10656     088A  0CCA               	rrf	??___fltol+2,f
 10657     088B  0CC9               	rrf	??___fltol+1,f
 10658     088C  0CC8               	rrf	??___fltol,f
 10659     088D                     u5300:
 10660     088D  3EFF               	addlw	-1
 10661     088E  1D03               	skipz
 10662     088F  2888               	goto	u5305
 10663     0890  0848               	movf	??___fltol,w
 10664     0891  00CC               	movwf	___fltol@sign1
 10665     0892                     l5091:
 10666     0892  17C6               	bsf	___fltol@f1+2,7
 10667     0893                     l5093:
 10668     0893  30FF               	movlw	255
 10669     0894  05C4               	andwf	___fltol@f1,f
 10670     0895  30FF               	movlw	255
 10671     0896  05C5               	andwf	___fltol@f1+1,f
 10672     0897  30FF               	movlw	255
 10673     0898  05C6               	andwf	___fltol@f1+2,f
 10674     0899  3000               	movlw	0
 10675     089A  05C7               	andwf	___fltol@f1+3,f
 10676     089B                     l5095:
 10677     089B  3096               	movlw	150
 10678     089C  02CD               	subwf	___fltol@exp1,f
 10679     089D                     l5097:
 10680     089D  1FCD               	btfss	___fltol@exp1,7
 10681     089E  28A0               	goto	u5311
 10682     089F  28A1               	goto	u5310
 10683     08A0                     u5311:
 10684     08A0  28B9               	goto	l5107
 10685     08A1                     u5310:
 10686     08A1                     l5099:
 10687     08A1  084D               	movf	___fltol@exp1,w
 10688     08A2  3A80               	xorlw	128
 10689     08A3  3E97               	addlw	151
 10690     08A4  1803               	skipnc
 10691     08A5  28A7               	goto	u5321
 10692     08A6  28A8               	goto	u5320
 10693     08A7                     u5321:
 10694     08A7  28A9               	goto	l5105
 10695     08A8                     u5320:
 10696     08A8  2876               	goto	l5085
 10697     08A9                     l5105:
 10698     08A9  3001               	movlw	1
 10699     08AA                     u5335:
 10700     08AA  1003               	clrc
 10701     08AB  0CC7               	rrf	___fltol@f1+3,f
 10702     08AC  0CC6               	rrf	___fltol@f1+2,f
 10703     08AD  0CC5               	rrf	___fltol@f1+1,f
 10704     08AE  0CC4               	rrf	___fltol@f1,f
 10705     08AF  3EFF               	addlw	-1
 10706     08B0  1D03               	skipz
 10707     08B1  28AA               	goto	u5335
 10708     08B2  3001               	movlw	1
 10709     08B3  07CD               	addwf	___fltol@exp1,f
 10710     08B4  1D03               	btfss	3,2
 10711     08B5  28B7               	goto	u5341
 10712     08B6  28B8               	goto	u5340
 10713     08B7                     u5341:
 10714     08B7  28A9               	goto	l5105
 10715     08B8                     u5340:
 10716     08B8  28D0               	goto	l5115
 10717     08B9                     l5107:
 10718     08B9  3020               	movlw	32
 10719     08BA  024D               	subwf	___fltol@exp1,w
 10720     08BB  1C03               	skipc
 10721     08BC  28BE               	goto	u5351
 10722     08BD  28BF               	goto	u5350
 10723     08BE                     u5351:
 10724     08BE  28CB               	goto	l835
 10725     08BF                     u5350:
 10726     08BF  2876               	goto	l5085
 10727     08C0                     l5113:
 10728     08C0  3001               	movlw	1
 10729     08C1  00C8               	movwf	??___fltol
 10730     08C2                     u5365:
 10731     08C2  1003               	clrc
 10732     08C3  0DC4               	rlf	___fltol@f1,f
 10733     08C4  0DC5               	rlf	___fltol@f1+1,f
 10734     08C5  0DC6               	rlf	___fltol@f1+2,f
 10735     08C6  0DC7               	rlf	___fltol@f1+3,f
 10736     08C7  0BC8               	decfsz	??___fltol,f
 10737     08C8  28C2               	goto	u5365
 10738     08C9  3001               	movlw	1
 10739     08CA  02CD               	subwf	___fltol@exp1,f
 10740     08CB                     l835:
 10741     08CB  084D               	movf	___fltol@exp1,w
 10742     08CC  1D03               	btfss	3,2
 10743     08CD  28CF               	goto	u5371
 10744     08CE  28D0               	goto	u5370
 10745     08CF                     u5371:
 10746     08CF  28C0               	goto	l5113
 10747     08D0                     u5370:
 10748     08D0                     l5115:
 10749     08D0  084C               	movf	___fltol@sign1,w
 10750     08D1  1903               	btfsc	3,2
 10751     08D2  28D4               	goto	u5381
 10752     08D3  28D5               	goto	u5380
 10753     08D4                     u5381:
 10754     08D4  28E0               	goto	l838
 10755     08D5                     u5380:
 10756     08D5                     l5117:
 10757     08D5  09C4               	comf	___fltol@f1,f
 10758     08D6  09C5               	comf	___fltol@f1+1,f
 10759     08D7  09C6               	comf	___fltol@f1+2,f
 10760     08D8  09C7               	comf	___fltol@f1+3,f
 10761     08D9  0AC4               	incf	___fltol@f1,f
 10762     08DA  1903               	skipnz
 10763     08DB  0AC5               	incf	___fltol@f1+1,f
 10764     08DC  1903               	skipnz
 10765     08DD  0AC6               	incf	___fltol@f1+2,f
 10766     08DE  1903               	skipnz
 10767     08DF  0AC7               	incf	___fltol@f1+3,f
 10768     08E0                     l838:
 10769     08E0                     l828:
 10770     08E0  0008               	return
 10771     08E1                     __end_of___fltol:
 10772                           
 10773                           	psect	text50
 10774     0C67                     __ptext50:	
 10775 ;; *************** function ___fldiv *****************
 10776 ;; Defined at:
 10777 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;  a               4   10[BANK0 ] long 
 10780 ;;  b               4   14[BANK0 ] long 
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;  grs             4   30[BANK0 ] unsigned long 
 10783 ;;  rem             4   23[BANK0 ] unsigned long 
 10784 ;;  new_exp         2   28[BANK0 ] short 
 10785 ;;  aexp            1   35[BANK0 ] unsigned char 
 10786 ;;  bexp            1   34[BANK0 ] unsigned char 
 10787 ;;  sign            1   27[BANK0 ] unsigned char 
 10788 ;; Return value:  Size  Location     Type
 10789 ;;                  4   10[BANK0 ] unsigned char 
 10790 ;; Registers used:
 10791 ;;		wreg, status,2, status,0, btemp+1
 10792 ;; Tracked objects:
 10793 ;;		On entry : 0/0
 10794 ;;		On exit  : 0/0
 10795 ;;		Unchanged: 0/0
 10796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10797 ;;      Params:         0       8       0       0       0
 10798 ;;      Locals:         0      13       0       0       0
 10799 ;;      Temps:          0       5       0       0       0
 10800 ;;      Totals:         0      26       0       0       0
 10801 ;;Total ram usage:       26 bytes
 10802 ;; Hardware stack levels used: 1
 10803 ;; Hardware stack levels required when called: 1
 10804 ;; This function calls:
 10805 ;;		Nothing
 10806 ;; This function is called by:
 10807 ;;		_main
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811     0C67                     ___fldiv:	
 10812                           ;psect for function ___fldiv
 10813                           
 10814     0C67                     l5119:	
 10815                           ;incstack = 0
 10816                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10817                           
 10818     0C67  1283               	bcf	3,5	;RP0=0, select bank0
 10819     0C68  1303               	bcf	3,6	;RP1=0, select bank0
 10820     0C69  0831               	movf	___fldiv@b+3,w
 10821     0C6A  00BB               	movwf	___fldiv@sign
 10822     0C6B                     l5121:
 10823     0C6B  3080               	movlw	128
 10824     0C6C  05BB               	andwf	___fldiv@sign,f
 10825     0C6D                     l5123:
 10826     0C6D  0831               	movf	___fldiv@b+3,w
 10827     0C6E  00B2               	movwf	??___fldiv
 10828     0C6F  0732               	addwf	??___fldiv,w
 10829     0C70  00C2               	movwf	___fldiv@bexp
 10830     0C71                     l5125:
 10831     0C71  1FB0               	btfss	___fldiv@b+2,7
 10832     0C72  2C74               	goto	u5391
 10833     0C73  2C75               	goto	u5390
 10834     0C74                     u5391:
 10835     0C74  2C76               	goto	l5129
 10836     0C75                     u5390:
 10837     0C75                     l5127:
 10838     0C75  1442               	bsf	___fldiv@bexp,0
 10839     0C76                     l5129:
 10840     0C76  0842               	movf	___fldiv@bexp,w
 10841     0C77  1903               	btfsc	3,2
 10842     0C78  2C7A               	goto	u5401
 10843     0C79  2C7B               	goto	u5400
 10844     0C7A                     u5401:
 10845     0C7A  2C8B               	goto	l5139
 10846     0C7B                     u5400:
 10847     0C7B                     l5131:
 10848     0C7B  0A42               	incf	___fldiv@bexp,w
 10849     0C7C  1D03               	btfss	3,2
 10850     0C7D  2C7F               	goto	u5411
 10851     0C7E  2C80               	goto	u5410
 10852     0C7F                     u5411:
 10853     0C7F  2C88               	goto	l5135
 10854     0C80                     u5410:
 10855     0C80                     l5133:
 10856     0C80  3000               	movlw	0
 10857     0C81  00B1               	movwf	___fldiv@b+3
 10858     0C82  3000               	movlw	0
 10859     0C83  00B0               	movwf	___fldiv@b+2
 10860     0C84  3000               	movlw	0
 10861     0C85  00AF               	movwf	___fldiv@b+1
 10862     0C86  3000               	movlw	0
 10863     0C87  00AE               	movwf	___fldiv@b
 10864     0C88                     l5135:
 10865     0C88  17B0               	bsf	___fldiv@b+2,7
 10866     0C89                     l5137:
 10867     0C89  01B1               	clrf	___fldiv@b+3
 10868     0C8A  2C93               	goto	l5141
 10869     0C8B                     l5139:
 10870     0C8B  3000               	movlw	0
 10871     0C8C  00B1               	movwf	___fldiv@b+3
 10872     0C8D  3000               	movlw	0
 10873     0C8E  00B0               	movwf	___fldiv@b+2
 10874     0C8F  3000               	movlw	0
 10875     0C90  00AF               	movwf	___fldiv@b+1
 10876     0C91  3000               	movlw	0
 10877     0C92  00AE               	movwf	___fldiv@b
 10878     0C93                     l5141:
 10879     0C93  082D               	movf	___fldiv@a+3,w
 10880     0C94  3980               	andlw	128
 10881     0C95  06BB               	xorwf	___fldiv@sign,f
 10882     0C96                     l5143:
 10883     0C96  082D               	movf	___fldiv@a+3,w
 10884     0C97  00B2               	movwf	??___fldiv
 10885     0C98  0732               	addwf	??___fldiv,w
 10886     0C99  00C3               	movwf	___fldiv@aexp
 10887     0C9A                     l5145:
 10888     0C9A  1FAC               	btfss	___fldiv@a+2,7
 10889     0C9B  2C9D               	goto	u5421
 10890     0C9C  2C9E               	goto	u5420
 10891     0C9D                     u5421:
 10892     0C9D  2C9F               	goto	l5149
 10893     0C9E                     u5420:
 10894     0C9E                     l5147:
 10895     0C9E  1443               	bsf	___fldiv@aexp,0
 10896     0C9F                     l5149:
 10897     0C9F  0843               	movf	___fldiv@aexp,w
 10898     0CA0  1903               	btfsc	3,2
 10899     0CA1  2CA3               	goto	u5431
 10900     0CA2  2CA4               	goto	u5430
 10901     0CA3                     u5431:
 10902     0CA3  2CB4               	goto	l5159
 10903     0CA4                     u5430:
 10904     0CA4                     l5151:
 10905     0CA4  0A43               	incf	___fldiv@aexp,w
 10906     0CA5  1D03               	btfss	3,2
 10907     0CA6  2CA8               	goto	u5441
 10908     0CA7  2CA9               	goto	u5440
 10909     0CA8                     u5441:
 10910     0CA8  2CB1               	goto	l5155
 10911     0CA9                     u5440:
 10912     0CA9                     l5153:
 10913     0CA9  3000               	movlw	0
 10914     0CAA  00AD               	movwf	___fldiv@a+3
 10915     0CAB  3000               	movlw	0
 10916     0CAC  00AC               	movwf	___fldiv@a+2
 10917     0CAD  3000               	movlw	0
 10918     0CAE  00AB               	movwf	___fldiv@a+1
 10919     0CAF  3000               	movlw	0
 10920     0CB0  00AA               	movwf	___fldiv@a
 10921     0CB1                     l5155:
 10922     0CB1  17AC               	bsf	___fldiv@a+2,7
 10923     0CB2                     l5157:
 10924     0CB2  01AD               	clrf	___fldiv@a+3
 10925     0CB3  2CBC               	goto	l991
 10926     0CB4                     l5159:
 10927     0CB4  3000               	movlw	0
 10928     0CB5  00AD               	movwf	___fldiv@a+3
 10929     0CB6  3000               	movlw	0
 10930     0CB7  00AC               	movwf	___fldiv@a+2
 10931     0CB8  3000               	movlw	0
 10932     0CB9  00AB               	movwf	___fldiv@a+1
 10933     0CBA  3000               	movlw	0
 10934     0CBB  00AA               	movwf	___fldiv@a
 10935     0CBC                     l991:
 10936     0CBC  082D               	movf	___fldiv@a+3,w
 10937     0CBD  042C               	iorwf	___fldiv@a+2,w
 10938     0CBE  042B               	iorwf	___fldiv@a+1,w
 10939     0CBF  042A               	iorwf	___fldiv@a,w
 10940     0CC0  1D03               	skipz
 10941     0CC1  2CC3               	goto	u5451
 10942     0CC2  2CC4               	goto	u5450
 10943     0CC3                     u5451:
 10944     0CC3  2CDB               	goto	l5169
 10945     0CC4                     u5450:
 10946     0CC4                     l5161:
 10947     0CC4  3000               	movlw	0
 10948     0CC5  00B1               	movwf	___fldiv@b+3
 10949     0CC6  3000               	movlw	0
 10950     0CC7  00B0               	movwf	___fldiv@b+2
 10951     0CC8  3000               	movlw	0
 10952     0CC9  00AF               	movwf	___fldiv@b+1
 10953     0CCA  3000               	movlw	0
 10954     0CCB  00AE               	movwf	___fldiv@b
 10955     0CCC  3080               	movlw	128
 10956     0CCD  04B0               	iorwf	___fldiv@b+2,f
 10957     0CCE  307F               	movlw	127
 10958     0CCF  04B1               	iorwf	___fldiv@b+3,f
 10959     0CD0                     l5163:
 10960     0CD0  083B               	movf	___fldiv@sign,w
 10961     0CD1  04B1               	iorwf	___fldiv@b+3,f
 10962     0CD2                     l5165:
 10963     0CD2  0831               	movf	___fldiv@b+3,w
 10964     0CD3  00AD               	movwf	?___fldiv+3
 10965     0CD4  0830               	movf	___fldiv@b+2,w
 10966     0CD5  00AC               	movwf	?___fldiv+2
 10967     0CD6  082F               	movf	___fldiv@b+1,w
 10968     0CD7  00AB               	movwf	?___fldiv+1
 10969     0CD8  082E               	movf	___fldiv@b,w
 10970     0CD9  00AA               	movwf	?___fldiv
 10971     0CDA  2E30               	goto	l993
 10972     0CDB                     l5169:
 10973     0CDB  0842               	movf	___fldiv@bexp,w
 10974     0CDC  1D03               	btfss	3,2
 10975     0CDD  2CDF               	goto	u5461
 10976     0CDE  2CE0               	goto	u5460
 10977     0CDF                     u5461:
 10978     0CDF  2CE9               	goto	l5175
 10979     0CE0                     u5460:
 10980     0CE0                     l5171:
 10981     0CE0  3000               	movlw	0
 10982     0CE1  00AD               	movwf	?___fldiv+3
 10983     0CE2  3000               	movlw	0
 10984     0CE3  00AC               	movwf	?___fldiv+2
 10985     0CE4  3000               	movlw	0
 10986     0CE5  00AB               	movwf	?___fldiv+1
 10987     0CE6  3000               	movlw	0
 10988     0CE7  00AA               	movwf	?___fldiv
 10989     0CE8  2E30               	goto	l993
 10990     0CE9                     l5175:
 10991     0CE9  0842               	movf	___fldiv@bexp,w
 10992     0CEA  00B2               	movwf	??___fldiv
 10993     0CEB  01B3               	clrf	??___fldiv+1
 10994     0CEC  0833               	movf	??___fldiv+1,w
 10995     0CED  00B5               	movwf	??___fldiv+3
 10996     0CEE  0843               	movf	___fldiv@aexp,w
 10997     0CEF  0232               	subwf	??___fldiv,w
 10998     0CF0  00B4               	movwf	??___fldiv+2
 10999     0CF1  1C03               	skipc
 11000     0CF2  03B5               	decf	??___fldiv+3,f
 11001     0CF3  0834               	movf	??___fldiv+2,w
 11002     0CF4  3E7F               	addlw	127
 11003     0CF5  00BC               	movwf	___fldiv@new_exp
 11004     0CF6  0835               	movf	??___fldiv+3,w
 11005     0CF7  1803               	skipnc
 11006     0CF8  3E01               	addlw	1
 11007     0CF9  3E00               	addlw	0
 11008     0CFA  00BD               	movwf	___fldiv@new_exp+1
 11009     0CFB                     l5177:
 11010     0CFB  0831               	movf	___fldiv@b+3,w
 11011     0CFC  00BA               	movwf	___fldiv@rem+3
 11012     0CFD  0830               	movf	___fldiv@b+2,w
 11013     0CFE  00B9               	movwf	___fldiv@rem+2
 11014     0CFF  082F               	movf	___fldiv@b+1,w
 11015     0D00  00B8               	movwf	___fldiv@rem+1
 11016     0D01  082E               	movf	___fldiv@b,w
 11017     0D02  00B7               	movwf	___fldiv@rem
 11018     0D03                     l5179:
 11019     0D03  3000               	movlw	0
 11020     0D04  00B1               	movwf	___fldiv@b+3
 11021     0D05  3000               	movlw	0
 11022     0D06  00B0               	movwf	___fldiv@b+2
 11023     0D07  3000               	movlw	0
 11024     0D08  00AF               	movwf	___fldiv@b+1
 11025     0D09  3000               	movlw	0
 11026     0D0A  00AE               	movwf	___fldiv@b
 11027     0D0B                     l5181:
 11028     0D0B  3000               	movlw	0
 11029     0D0C  00C1               	movwf	___fldiv@grs+3
 11030     0D0D  3000               	movlw	0
 11031     0D0E  00C0               	movwf	___fldiv@grs+2
 11032     0D0F  3000               	movlw	0
 11033     0D10  00BF               	movwf	___fldiv@grs+1
 11034     0D11  3000               	movlw	0
 11035     0D12  00BE               	movwf	___fldiv@grs
 11036     0D13                     l5183:
 11037     0D13  01C3               	clrf	___fldiv@aexp
 11038     0D14  2D5D               	goto	l5203
 11039     0D15                     l5185:
 11040     0D15  0843               	movf	___fldiv@aexp,w
 11041     0D16  1903               	btfsc	3,2
 11042     0D17  2D19               	goto	u5471
 11043     0D18  2D1A               	goto	u5470
 11044     0D19                     u5471:
 11045     0D19  2D3A               	goto	l5195
 11046     0D1A                     u5470:
 11047     0D1A                     l5187:
 11048     0D1A  3001               	movlw	1
 11049     0D1B  00B2               	movwf	??___fldiv
 11050     0D1C                     u5485:
 11051     0D1C  1003               	clrc
 11052     0D1D  0DB7               	rlf	___fldiv@rem,f
 11053     0D1E  0DB8               	rlf	___fldiv@rem+1,f
 11054     0D1F  0DB9               	rlf	___fldiv@rem+2,f
 11055     0D20  0DBA               	rlf	___fldiv@rem+3,f
 11056     0D21  0BB2               	decfsz	??___fldiv,f
 11057     0D22  2D1C               	goto	u5485
 11058     0D23  3001               	movlw	1
 11059     0D24  00B2               	movwf	??___fldiv
 11060     0D25                     u5495:
 11061     0D25  1003               	clrc
 11062     0D26  0DAE               	rlf	___fldiv@b,f
 11063     0D27  0DAF               	rlf	___fldiv@b+1,f
 11064     0D28  0DB0               	rlf	___fldiv@b+2,f
 11065     0D29  0DB1               	rlf	___fldiv@b+3,f
 11066     0D2A  0BB2               	decfsz	??___fldiv,f
 11067     0D2B  2D25               	goto	u5495
 11068     0D2C                     l5189:
 11069     0D2C  1FC1               	btfss	___fldiv@grs+3,7
 11070     0D2D  2D2F               	goto	u5501
 11071     0D2E  2D30               	goto	u5500
 11072     0D2F                     u5501:
 11073     0D2F  2D31               	goto	l5193
 11074     0D30                     u5500:
 11075     0D30                     l5191:
 11076     0D30  142E               	bsf	___fldiv@b,0
 11077     0D31                     l5193:
 11078     0D31  3001               	movlw	1
 11079     0D32  00B2               	movwf	??___fldiv
 11080     0D33                     u5515:
 11081     0D33  1003               	clrc
 11082     0D34  0DBE               	rlf	___fldiv@grs,f
 11083     0D35  0DBF               	rlf	___fldiv@grs+1,f
 11084     0D36  0DC0               	rlf	___fldiv@grs+2,f
 11085     0D37  0DC1               	rlf	___fldiv@grs+3,f
 11086     0D38  0BB2               	decfsz	??___fldiv,f
 11087     0D39  2D33               	goto	u5515
 11088     0D3A                     l5195:
 11089     0D3A  082D               	movf	___fldiv@a+3,w
 11090     0D3B  023A               	subwf	___fldiv@rem+3,w
 11091     0D3C  1D03               	skipz
 11092     0D3D  2D48               	goto	u5525
 11093     0D3E  082C               	movf	___fldiv@a+2,w
 11094     0D3F  0239               	subwf	___fldiv@rem+2,w
 11095     0D40  1D03               	skipz
 11096     0D41  2D48               	goto	u5525
 11097     0D42  082B               	movf	___fldiv@a+1,w
 11098     0D43  0238               	subwf	___fldiv@rem+1,w
 11099     0D44  1D03               	skipz
 11100     0D45  2D48               	goto	u5525
 11101     0D46  082A               	movf	___fldiv@a,w
 11102     0D47  0237               	subwf	___fldiv@rem,w
 11103     0D48                     u5525:
 11104     0D48  1C03               	skipc
 11105     0D49  2D4B               	goto	u5521
 11106     0D4A  2D4C               	goto	u5520
 11107     0D4B                     u5521:
 11108     0D4B  2D5B               	goto	l5201
 11109     0D4C                     u5520:
 11110     0D4C                     l5197:
 11111     0D4C  1741               	bsf	___fldiv@grs+3,6
 11112     0D4D                     l5199:
 11113     0D4D  082A               	movf	___fldiv@a,w
 11114     0D4E  02B7               	subwf	___fldiv@rem,f
 11115     0D4F  082B               	movf	___fldiv@a+1,w
 11116     0D50  1C03               	skipc
 11117     0D51  0F2B               	incfsz	___fldiv@a+1,w
 11118     0D52  02B8               	subwf	___fldiv@rem+1,f
 11119     0D53  082C               	movf	___fldiv@a+2,w
 11120     0D54  1C03               	skipc
 11121     0D55  0F2C               	incfsz	___fldiv@a+2,w
 11122     0D56  02B9               	subwf	___fldiv@rem+2,f
 11123     0D57  082D               	movf	___fldiv@a+3,w
 11124     0D58  1C03               	skipc
 11125     0D59  0F2D               	incfsz	___fldiv@a+3,w
 11126     0D5A  02BA               	subwf	___fldiv@rem+3,f
 11127     0D5B                     l5201:
 11128     0D5B  3001               	movlw	1
 11129     0D5C  07C3               	addwf	___fldiv@aexp,f
 11130     0D5D                     l5203:
 11131     0D5D  301A               	movlw	26
 11132     0D5E  0243               	subwf	___fldiv@aexp,w
 11133     0D5F  1C03               	skipc
 11134     0D60  2D62               	goto	u5531
 11135     0D61  2D63               	goto	u5530
 11136     0D62                     u5531:
 11137     0D62  2D15               	goto	l5185
 11138     0D63                     u5530:
 11139     0D63                     l5205:
 11140     0D63  083A               	movf	___fldiv@rem+3,w
 11141     0D64  0439               	iorwf	___fldiv@rem+2,w
 11142     0D65  0438               	iorwf	___fldiv@rem+1,w
 11143     0D66  0437               	iorwf	___fldiv@rem,w
 11144     0D67  1903               	skipnz
 11145     0D68  2D6A               	goto	u5541
 11146     0D69  2D6B               	goto	u5540
 11147     0D6A                     u5541:
 11148     0D6A  2D8A               	goto	l5219
 11149     0D6B                     u5540:
 11150     0D6B                     l5207:
 11151     0D6B  143E               	bsf	___fldiv@grs,0
 11152     0D6C  2D8A               	goto	l5219
 11153     0D6D                     l5209:
 11154     0D6D  3001               	movlw	1
 11155     0D6E  00B2               	movwf	??___fldiv
 11156     0D6F                     u5555:
 11157     0D6F  1003               	clrc
 11158     0D70  0DAE               	rlf	___fldiv@b,f
 11159     0D71  0DAF               	rlf	___fldiv@b+1,f
 11160     0D72  0DB0               	rlf	___fldiv@b+2,f
 11161     0D73  0DB1               	rlf	___fldiv@b+3,f
 11162     0D74  0BB2               	decfsz	??___fldiv,f
 11163     0D75  2D6F               	goto	u5555
 11164     0D76                     l5211:
 11165     0D76  1FC1               	btfss	___fldiv@grs+3,7
 11166     0D77  2D79               	goto	u5561
 11167     0D78  2D7A               	goto	u5560
 11168     0D79                     u5561:
 11169     0D79  2D7B               	goto	l5215
 11170     0D7A                     u5560:
 11171     0D7A                     l5213:
 11172     0D7A  142E               	bsf	___fldiv@b,0
 11173     0D7B                     l5215:
 11174     0D7B  3001               	movlw	1
 11175     0D7C  00B2               	movwf	??___fldiv
 11176     0D7D                     u5575:
 11177     0D7D  1003               	clrc
 11178     0D7E  0DBE               	rlf	___fldiv@grs,f
 11179     0D7F  0DBF               	rlf	___fldiv@grs+1,f
 11180     0D80  0DC0               	rlf	___fldiv@grs+2,f
 11181     0D81  0DC1               	rlf	___fldiv@grs+3,f
 11182     0D82  0BB2               	decfsz	??___fldiv,f
 11183     0D83  2D7D               	goto	u5575
 11184     0D84                     l5217:
 11185     0D84  30FF               	movlw	255
 11186     0D85  07BC               	addwf	___fldiv@new_exp,f
 11187     0D86  1803               	skipnc
 11188     0D87  0ABD               	incf	___fldiv@new_exp+1,f
 11189     0D88  30FF               	movlw	255
 11190     0D89  07BD               	addwf	___fldiv@new_exp+1,f
 11191     0D8A                     l5219:
 11192     0D8A  1FB0               	btfss	___fldiv@b+2,7
 11193     0D8B  2D8D               	goto	u5581
 11194     0D8C  2D8E               	goto	u5580
 11195     0D8D                     u5581:
 11196     0D8D  2D6D               	goto	l5209
 11197     0D8E                     u5580:
 11198     0D8E                     l5221:
 11199     0D8E  01C3               	clrf	___fldiv@aexp
 11200     0D8F                     l5223:
 11201     0D8F  1FC1               	btfss	___fldiv@grs+3,7
 11202     0D90  2D92               	goto	u5591
 11203     0D91  2D93               	goto	u5590
 11204     0D92                     u5591:
 11205     0D92  2DAF               	goto	l5231
 11206     0D93                     u5590:
 11207     0D93                     l5225:
 11208     0D93  30FF               	movlw	255
 11209     0D94  053E               	andwf	___fldiv@grs,w
 11210     0D95  00B2               	movwf	??___fldiv
 11211     0D96  30FF               	movlw	255
 11212     0D97  053F               	andwf	___fldiv@grs+1,w
 11213     0D98  00B3               	movwf	??___fldiv+1
 11214     0D99  30FF               	movlw	255
 11215     0D9A  0540               	andwf	___fldiv@grs+2,w
 11216     0D9B  00B4               	movwf	??___fldiv+2
 11217     0D9C  307F               	movlw	127
 11218     0D9D  0541               	andwf	___fldiv@grs+3,w
 11219     0D9E  00B5               	movwf	??___fldiv+3
 11220     0D9F  0835               	movf	??___fldiv+3,w
 11221     0DA0  0434               	iorwf	??___fldiv+2,w
 11222     0DA1  0433               	iorwf	??___fldiv+1,w
 11223     0DA2  0432               	iorwf	??___fldiv,w
 11224     0DA3  1903               	skipnz
 11225     0DA4  2DA6               	goto	u5601
 11226     0DA5  2DA7               	goto	u5600
 11227     0DA6                     u5601:
 11228     0DA6  2DAA               	goto	l1007
 11229     0DA7                     u5600:
 11230     0DA7                     l5227:
 11231     0DA7  3001               	movlw	1
 11232     0DA8  00C3               	movwf	___fldiv@aexp
 11233     0DA9  2DAF               	goto	l5231
 11234     0DAA                     l1007:
 11235     0DAA  1C2E               	btfss	___fldiv@b,0
 11236     0DAB  2DAD               	goto	u5611
 11237     0DAC  2DAE               	goto	u5610
 11238     0DAD                     u5611:
 11239     0DAD  2DAF               	goto	l5231
 11240     0DAE                     u5610:
 11241     0DAE  2DA7               	goto	l5227
 11242     0DAF                     l5231:
 11243     0DAF  0843               	movf	___fldiv@aexp,w
 11244     0DB0  1903               	btfsc	3,2
 11245     0DB1  2DB3               	goto	u5621
 11246     0DB2  2DB4               	goto	u5620
 11247     0DB3                     u5621:
 11248     0DB3  2DE5               	goto	l5241
 11249     0DB4                     u5620:
 11250     0DB4                     l5233:
 11251     0DB4  3001               	movlw	1
 11252     0DB5  07AE               	addwf	___fldiv@b,f
 11253     0DB6  3000               	movlw	0
 11254     0DB7  1803               	skipnc
 11255     0DB8  3001               	movlw	1
 11256     0DB9  07AF               	addwf	___fldiv@b+1,f
 11257     0DBA  3000               	movlw	0
 11258     0DBB  1803               	skipnc
 11259     0DBC  3001               	movlw	1
 11260     0DBD  07B0               	addwf	___fldiv@b+2,f
 11261     0DBE  3000               	movlw	0
 11262     0DBF  1803               	skipnc
 11263     0DC0  3001               	movlw	1
 11264     0DC1  07B1               	addwf	___fldiv@b+3,f
 11265     0DC2                     l5235:
 11266     0DC2  1C31               	btfss	___fldiv@b+3,0
 11267     0DC3  2DC5               	goto	u5631
 11268     0DC4  2DC6               	goto	u5630
 11269     0DC5                     u5631:
 11270     0DC5  2DE5               	goto	l5241
 11271     0DC6                     u5630:
 11272     0DC6                     l5237:
 11273     0DC6  082E               	movf	___fldiv@b,w
 11274     0DC7  00B2               	movwf	??___fldiv
 11275     0DC8  082F               	movf	___fldiv@b+1,w
 11276     0DC9  00B3               	movwf	??___fldiv+1
 11277     0DCA  0830               	movf	___fldiv@b+2,w
 11278     0DCB  00B4               	movwf	??___fldiv+2
 11279     0DCC  0831               	movf	___fldiv@b+3,w
 11280     0DCD  00B5               	movwf	??___fldiv+3
 11281     0DCE  3001               	movlw	1
 11282     0DCF  00B6               	movwf	??___fldiv+4
 11283     0DD0                     u5645:
 11284     0DD0  0D35               	rlf	??___fldiv+3,w
 11285     0DD1  0CB5               	rrf	??___fldiv+3,f
 11286     0DD2  0CB4               	rrf	??___fldiv+2,f
 11287     0DD3  0CB3               	rrf	??___fldiv+1,f
 11288     0DD4  0CB2               	rrf	??___fldiv,f
 11289     0DD5                     u5640:
 11290     0DD5  0BB6               	decfsz	??___fldiv+4,f
 11291     0DD6  2DD0               	goto	u5645
 11292     0DD7  0835               	movf	??___fldiv+3,w
 11293     0DD8  00B1               	movwf	___fldiv@b+3
 11294     0DD9  0834               	movf	??___fldiv+2,w
 11295     0DDA  00B0               	movwf	___fldiv@b+2
 11296     0DDB  0833               	movf	??___fldiv+1,w
 11297     0DDC  00AF               	movwf	___fldiv@b+1
 11298     0DDD  0832               	movf	??___fldiv,w
 11299     0DDE  00AE               	movwf	___fldiv@b
 11300     0DDF                     l5239:
 11301     0DDF  3001               	movlw	1
 11302     0DE0  07BC               	addwf	___fldiv@new_exp,f
 11303     0DE1  1803               	skipnc
 11304     0DE2  0ABD               	incf	___fldiv@new_exp+1,f
 11305     0DE3  3000               	movlw	0
 11306     0DE4  07BD               	addwf	___fldiv@new_exp+1,f
 11307     0DE5                     l5241:
 11308     0DE5  083D               	movf	___fldiv@new_exp+1,w
 11309     0DE6  3A80               	xorlw	128
 11310     0DE7  00FF               	movwf	btemp+1
 11311     0DE8  3080               	movlw	128
 11312     0DE9  027F               	subwf	btemp+1,w
 11313     0DEA  1D03               	skipz
 11314     0DEB  2DEE               	goto	u5655
 11315     0DEC  30FF               	movlw	255
 11316     0DED  023C               	subwf	___fldiv@new_exp,w
 11317     0DEE                     u5655:
 11318     0DEE  1C03               	skipc
 11319     0DEF  2DF1               	goto	u5651
 11320     0DF0  2DF2               	goto	u5650
 11321     0DF1                     u5651:
 11322     0DF1  2E00               	goto	l5245
 11323     0DF2                     u5650:
 11324     0DF2                     l5243:
 11325     0DF2  30FF               	movlw	255
 11326     0DF3  1283               	bcf	3,5	;RP0=0, select bank0
 11327     0DF4  1303               	bcf	3,6	;RP1=0, select bank0
 11328     0DF5  00BC               	movwf	___fldiv@new_exp
 11329     0DF6  3000               	movlw	0
 11330     0DF7  00BD               	movwf	___fldiv@new_exp+1
 11331     0DF8  3000               	movlw	0
 11332     0DF9  00B1               	movwf	___fldiv@b+3
 11333     0DFA  3000               	movlw	0
 11334     0DFB  00B0               	movwf	___fldiv@b+2
 11335     0DFC  3000               	movlw	0
 11336     0DFD  00AF               	movwf	___fldiv@b+1
 11337     0DFE  3000               	movlw	0
 11338     0DFF  00AE               	movwf	___fldiv@b
 11339     0E00                     l5245:
 11340     0E00  1283               	bcf	3,5	;RP0=0, select bank0
 11341     0E01  1303               	bcf	3,6	;RP1=0, select bank0
 11342     0E02  083D               	movf	___fldiv@new_exp+1,w
 11343     0E03  3A80               	xorlw	128
 11344     0E04  00FF               	movwf	btemp+1
 11345     0E05  3080               	movlw	128
 11346     0E06  027F               	subwf	btemp+1,w
 11347     0E07  1D03               	skipz
 11348     0E08  2E0B               	goto	u5665
 11349     0E09  3001               	movlw	1
 11350     0E0A  023C               	subwf	___fldiv@new_exp,w
 11351     0E0B                     u5665:
 11352     0E0B  1803               	skipnc
 11353     0E0C  2E0E               	goto	u5661
 11354     0E0D  2E0F               	goto	u5660
 11355     0E0E                     u5661:
 11356     0E0E  2E1C               	goto	l1013
 11357     0E0F                     u5660:
 11358     0E0F                     l5247:
 11359     0E0F  1283               	bcf	3,5	;RP0=0, select bank0
 11360     0E10  1303               	bcf	3,6	;RP1=0, select bank0
 11361     0E11  01BC               	clrf	___fldiv@new_exp
 11362     0E12  01BD               	clrf	___fldiv@new_exp+1
 11363     0E13                     l5249:
 11364     0E13  3000               	movlw	0
 11365     0E14  00B1               	movwf	___fldiv@b+3
 11366     0E15  3000               	movlw	0
 11367     0E16  00B0               	movwf	___fldiv@b+2
 11368     0E17  3000               	movlw	0
 11369     0E18  00AF               	movwf	___fldiv@b+1
 11370     0E19  3000               	movlw	0
 11371     0E1A  00AE               	movwf	___fldiv@b
 11372     0E1B                     l5251:
 11373     0E1B  01BB               	clrf	___fldiv@sign
 11374     0E1C                     l1013:
 11375     0E1C  1283               	bcf	3,5	;RP0=0, select bank0
 11376     0E1D  1303               	bcf	3,6	;RP1=0, select bank0
 11377     0E1E  083C               	movf	___fldiv@new_exp,w
 11378     0E1F  00C2               	movwf	___fldiv@bexp
 11379     0E20                     l5253:
 11380     0E20  1C42               	btfss	___fldiv@bexp,0
 11381     0E21  2E23               	goto	u5671
 11382     0E22  2E24               	goto	u5670
 11383     0E23                     u5671:
 11384     0E23  2E26               	goto	l5257
 11385     0E24                     u5670:
 11386     0E24                     l5255:
 11387     0E24  17B0               	bsf	___fldiv@b+2,7
 11388     0E25  2E28               	goto	l1015
 11389     0E26                     l5257:
 11390     0E26  307F               	movlw	127
 11391     0E27  05B0               	andwf	___fldiv@b+2,f
 11392     0E28                     l1015:
 11393     0E28  0842               	movf	___fldiv@bexp,w
 11394     0E29  00B2               	movwf	??___fldiv
 11395     0E2A  1003               	clrc
 11396     0E2B  0C32               	rrf	??___fldiv,w
 11397     0E2C  00B1               	movwf	___fldiv@b+3
 11398     0E2D  083B               	movf	___fldiv@sign,w
 11399     0E2E  04B1               	iorwf	___fldiv@b+3,f
 11400     0E2F  2CD2               	goto	l5165
 11401     0E30                     l993:
 11402     0E30  0008               	return
 11403     0E31                     __end_of___fldiv:
 11404                           
 11405                           	psect	text51
 11406     13EB                     __ptext51:	
 11407 ;; *************** function _isr *****************
 11408 ;; Defined at:
 11409 ;;		line 7 in file "isr.c"
 11410 ;; Parameters:    Size  Location     Type
 11411 ;;		None
 11412 ;; Auto vars:     Size  Location     Type
 11413 ;;		None
 11414 ;; Return value:  Size  Location     Type
 11415 ;;                  1    wreg      void 
 11416 ;; Registers used:
 11417 ;;		wreg, status,2, status,0
 11418 ;; Tracked objects:
 11419 ;;		On entry : 0/0
 11420 ;;		On exit  : 0/0
 11421 ;;		Unchanged: 0/0
 11422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11423 ;;      Params:         0       0       0       0       0
 11424 ;;      Locals:         0       0       0       0       0
 11425 ;;      Temps:          2       0       0       0       0
 11426 ;;      Totals:         2       0       0       0       0
 11427 ;;Total ram usage:        2 bytes
 11428 ;; Hardware stack levels used: 1
 11429 ;; This function calls:
 11430 ;;		Nothing
 11431 ;; This function is called by:
 11432 ;;		Interrupt level 1
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436     13EB                     _isr:	
 11437                           ;psect for function _isr
 11438                           
 11439     13EB                     i1l4049:
 11440                           
 11441                           ;isr.c: 9:     static unsigned int count = 0;;isr.c: 11:     if(TMR2IF)
 11442     13EB  1283               	bcf	3,5	;RP0=0, select bank0
 11443     13EC  1303               	bcf	3,6	;RP1=0, select bank0
 11444     13ED  1C8C               	btfss	12,1	;volatile
 11445     13EE  2BF0               	goto	u400_21
 11446     13EF  2BF1               	goto	u400_20
 11447     13F0                     u400_21:
 11448     13F0  2C1A               	goto	i1l500
 11449     13F1                     u400_20:
 11450     13F1                     i1l4051:
 11451                           
 11452                           ;isr.c: 12:     {;isr.c: 14:         if(++count == 1250)
 11453     13F1  3001               	movlw	1
 11454     13F2  1683               	bsf	3,5	;RP0=1, select bank1
 11455     13F3  1303               	bcf	3,6	;RP1=0, select bank1
 11456     13F4  07A3               	addwf	isr@count^(0+128),f
 11457     13F5  1803               	skipnc
 11458     13F6  0AA4               	incf	(isr@count+1)^(0+128),f
 11459     13F7  3000               	movlw	0
 11460     13F8  07A4               	addwf	(isr@count+1)^(0+128),f
 11461     13F9  30E2               	movlw	226
 11462     13FA  0623               	xorwf	isr@count^(0+128),w
 11463     13FB  3004               	movlw	4
 11464     13FC  1903               	skipnz
 11465     13FD  0624               	xorwf	(isr@count+1)^(0+128),w
 11466     13FE  1D03               	btfss	3,2
 11467     13FF  2C01               	goto	u401_21
 11468     1400  2C02               	goto	u401_20
 11469     1401                     u401_21:
 11470     1401  2C17               	goto	i1l4063
 11471     1402                     u401_20:
 11472     1402                     i1l4053:
 11473                           
 11474                           ;isr.c: 15:         {;isr.c: 16:             if(sec != 0)
 11475     1402  1283               	bcf	3,5	;RP0=0, select bank0
 11476     1403  1303               	bcf	3,6	;RP1=0, select bank0
 11477     1404  0859               	movf	_sec,w
 11478     1405  1903               	btfsc	3,2
 11479     1406  2C08               	goto	u402_21
 11480     1407  2C09               	goto	u402_20
 11481     1408                     u402_21:
 11482     1408  2C0C               	goto	i1l4057
 11483     1409                     u402_20:
 11484     1409                     i1l4055:
 11485                           
 11486                           ;isr.c: 17:                 sec--;
 11487     1409  3001               	movlw	1
 11488     140A  02D9               	subwf	_sec,f
 11489     140B  2C13               	goto	i1l4061
 11490     140C                     i1l4057:
 11491     140C  085A               	movf	_return_time,w
 11492     140D  1903               	btfsc	3,2
 11493     140E  2C10               	goto	u403_21
 11494     140F  2C11               	goto	u403_20
 11495     1410                     u403_21:
 11496     1410  2C13               	goto	i1l4061
 11497     1411                     u403_20:
 11498     1411                     i1l4059:
 11499                           
 11500                           ;isr.c: 19:                 return_time--;
 11501     1411  3001               	movlw	1
 11502     1412  02DA               	subwf	_return_time,f
 11503     1413                     i1l4061:
 11504                           
 11505                           ;isr.c: 20:             count = 0;
 11506     1413  1683               	bsf	3,5	;RP0=1, select bank1
 11507     1414  1303               	bcf	3,6	;RP1=0, select bank1
 11508     1415  01A3               	clrf	isr@count^(0+128)
 11509     1416  01A4               	clrf	(isr@count+1)^(0+128)
 11510     1417                     i1l4063:
 11511                           
 11512                           ;isr.c: 23:         TMR2IF = 0;
 11513     1417  1283               	bcf	3,5	;RP0=0, select bank0
 11514     1418  1303               	bcf	3,6	;RP1=0, select bank0
 11515     1419  108C               	bcf	12,1	;volatile
 11516     141A                     i1l500:
 11517     141A  0871               	movf	??_isr+1,w
 11518     141B  008A               	movwf	10
 11519     141C  0E70               	swapf	??_isr,w
 11520     141D  0083               	movwf	3
 11521     141E  0EFE               	swapf	btemp,f
 11522     141F  0E7E               	swapf	btemp,w
 11523     1420  0009               	retfie
 11524     1421                     __end_of_isr:
 11525     0002                     ___latbits      equ	2
 11526     007E                     btemp           set	126	;btemp
 11527     007E                     wtemp0          set	126
 11528                           
 11529                           	psect	intentry
 11530     0004                     __pintentry:	
 11531                           ;incstack = 0
 11532                           ; Regs used in _isr: [wreg+status,2+status,0]
 11533                           
 11534     0004                     interrupt_function:
 11535     007E                     saved_w         set	btemp
 11536     0004  00FE               	movwf	btemp
 11537     0005  0E03               	swapf	3,w
 11538     0006  00F0               	movwf	??_isr
 11539     0007  080A               	movf	10,w
 11540     0008  00F1               	movwf	??_isr+1
 11541     0009  160A  118A  2BEB   	ljmp	_isr
 11542                           
 11543                           	psect	idloc
 11544                           
 11545                           ;Config register IDLOC0 @ 0x2000
 11546                           ;	unspecified, using default values
 11547     2000                     	org	8192
 11548     2000  3FFF               	dw	16383
 11549                           
 11550                           ;Config register IDLOC1 @ 0x2001
 11551                           ;	unspecified, using default values
 11552     2001                     	org	8193
 11553     2001  3FFF               	dw	16383
 11554                           
 11555                           ;Config register IDLOC2 @ 0x2002
 11556                           ;	unspecified, using default values
 11557     2002                     	org	8194
 11558     2002  3FFF               	dw	16383
 11559                           
 11560                           ;Config register IDLOC3 @ 0x2003
 11561                           ;	unspecified, using default values
 11562     2003                     	org	8195
 11563     2003  3FFF               	dw	16383
 11564                           
 11565                           	psect	config
 11566                           
 11567                           ;Config register CONFIG @ 0x2007
 11568                           ;	Oscillator Selection bits
 11569                           ;	FOSC = 0x3, unprogrammed default
 11570                           ;	Watchdog Timer Enable bit
 11571                           ;	WDTE = OFF, WDT disabled
 11572                           ;	Power-up Timer Enable bit
 11573                           ;	PWRTE = 0x1, unprogrammed default
 11574                           ;	Brown-out Reset Enable bit
 11575                           ;	BOREN = 0x1, unprogrammed default
 11576                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 11577                           ;	LVP = 0x1, unprogrammed default
 11578                           ;	Data EEPROM Memory Code Protection bit
 11579                           ;	CPD = 0x1, unprogrammed default
 11580                           ;	Flash Program Memory Write Enable bits
 11581                           ;	WRT = 0x3, unprogrammed default
 11582                           ;	In-Circuit Debugger Mode bit
 11583                           ;	DEBUG = 0x1, unprogrammed default
 11584                           ;	Flash Program Memory Code Protection bit
 11585                           ;	CP = 0x1, unprogrammed default
 11586     2007                     	org	8199
 11587     2007  3FFB               	dw	16379

Data Sizes:
    Strings     449
    Constant    0
    Data        25
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     50      60
    BANK1            80      0      70
    BANK3            96     22      22
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR unsigned char  size(2) Largest target is 18
		 -> main@event(BANK3[3]), STR_12(CODE[5]), STR_13(CODE[8]), STR_15(CODE[9]), 
		 -> STR_16(CODE[10]), STR_17(CODE[13]), STR_18(CODE[9]), STR_19(CODE[15]), 
		 -> STR_20(CODE[15]), STR_21(CODE[15]), STR_22(CODE[16]), STR_23(CODE[9]), 
		 -> STR_24(CODE[5]), STR_25(CODE[15]), STR_26(CODE[13]), STR_27(CODE[15]), 
		 -> STR_28(CODE[10]), STR_29(CODE[12]), STR_30(CODE[11]), STR_37(CODE[16]), 
		 -> STR_38(CODE[13]), STR_39(CODE[13]), STR_40(CODE[3]), STR_41(CODE[3]), 
		 -> STR_42(CODE[3]), STR_44(CODE[17]), STR_45(CODE[17]), STR_46(CODE[18]), 
		 -> STR_47(CODE[18]), STR_48(CODE[17]), STR_49(CODE[14]), STR_50(CODE[17]), 
		 -> STR_51(CODE[7]), STR_9(CODE[15]), 

    display_dashboard@event	PTR unsigned char  size(1) Largest target is 3
		 -> main@event(BANK3[3]), 

    log_car_event@event	PTR unsigned char  size(2) Largest target is 3
		 -> main@event(BANK3[3]), STR_10(CODE[3]), STR_11(CODE[3]), STR_14(CODE[3]), 

    main@F1253	PTR unsigned char [6] size(2) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), 

    main@gear	PTR unsigned char [6] size(2) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), 

    menu	PTR unsigned char [5] size(2) Largest target is 15
		 -> STR_15(CODE[9]), STR_16(CODE[10]), STR_17(CODE[13]), STR_18(CODE[9]), 
		 -> STR_19(CODE[15]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_31(CODE[20]), STR_32(CODE[7]), STR_33(CODE[33]), STR_34(CODE[4]), 
		 -> STR_35(CODE[7]), STR_36(CODE[9]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 3
		 -> main@event(BANK3[3]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 11
		 -> change_password@new_pwd(BANK1[9]), log(BANK1[11]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 3
		 -> main@event(BANK3[3]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 3
		 -> main@event(BANK3[3]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_8(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 9
		 -> change_password@new_pwd(BANK1[9]), login@stored_pwd(BANK0[4]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 9
		 -> change_password@new_pwd(BANK1[9]), login@user_password(BANK1[4]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 11
		 -> change_password@new_pwd(BANK1[9]), log(BANK1[11]), 

    strncpy@d	PTR unsigned char  size(1) Largest target is 11
		 -> change_password@new_pwd(BANK1[9]), log(BANK1[11]), 

    strncpy@s	PTR const unsigned char  size(2) Largest target is 7
		 -> main@event(BANK3[3]), STR_10(CODE[3]), STR_11(CODE[3]), STR_14(CODE[3]), 
		 -> STR_43(CODE[5]), time(BANK1[7]), 

    write_str_at24c04@data	PTR unsigned char  size(2) Largest target is 11
		 -> change_password@new_pwd(BANK1[9]), log(BANK1[11]), STR_7(CODE[5]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _main->_write_str_at24c04
    _login->___awdiv
    _log_car_event->___awdiv
    _log_car_event->_strncpy
    _record_log->_write_str_at24c04
    _init_uart->___lldiv
    _init_i2c->___lldiv
    _init_ds1307->_read_ds1307
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _download_log->_read_at24c04
    _read_at24c04->_i2c_read
    _puts->_putchar
    _display_dashboard->___awdiv
    _clear_log->_clcd_print
    _change_time->___awdiv
    _write_ds1307->_i2c_write
    _get_time->_read_ds1307
    _read_ds1307->_i2c_read
    _clear_clcd_screen->_clcd_write
    _change_password->_strncpy
    _change_password->_write_str_at24c04
    _write_str_at24c04->_write_at24c04
    _write_at24c04->_i2c_write
    _clcd_putch->___awdiv
    _clcd_print->_clcd_write
    ___xxtofl->_read_adc
    ___fltol->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _view_log->_clcd_putch
    _menu_screen->_clcd_putch
    _login->_clcd_putch
    _log_car_event->_record_log
    _init_config->_init_i2c
    _init_config->_init_uart
    _init_uart->___lldiv
    _init_i2c->___lldiv
    _display_dashboard->_clcd_putch
    _display_time->_clcd_putch
    _change_time->_clcd_putch
    _change_password->_clcd_putch
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   24545
                                             46 BANK0      4     4      0
                                              0 BANK3     22    22      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                    _change_password
                        _change_time
                         _clcd_print
                         _clcd_write
                  _clear_clcd_screen
                          _clear_log
                  _display_dashboard
                       _download_log
                        _init_config
                      _log_car_event
                              _login
                        _menu_screen
                           _read_adc
                _read_digital_keypad
                             _strcpy
                           _view_log
                  _write_str_at24c04
 ---------------------------------------------------------------------------------
 (1) _view_log                                             6     5      1    2081
                                              2 BANK0      6     5      1
                            ___awmod
                             ___bmul
                         _clcd_print
                         _clcd_putch
                       _read_at24c04
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     3      3     121
                                              2 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  1     1      0     161
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             4     2      2      34
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _menu_screen                                          4     3      1    1214
                                              2 BANK0      4     3      1
                         _clcd_print
                         _clcd_putch
                  _clear_clcd_screen
 ---------------------------------------------------------------------------------
 (1) _login                                               10     9      1    3103
                                              2 BANK0     10     9      1
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                  _clear_clcd_screen
                       _read_at24c04
                            _strncmp
 ---------------------------------------------------------------------------------
 (1) _log_car_event                                        5     2      3    2049
                                              1 BANK0      5     2      3
                            ___awdiv
                            ___awmod
                           _get_time
                         _record_log
                            _strncpy
 ---------------------------------------------------------------------------------
 (2) _record_log                                           1     1      0     478
                                              0 BANK0      1     1      0
                             ___bmul
                  _write_str_at24c04
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    1151
                           _init_adc
                          _init_clcd
                _init_digital_keypad
                        _init_ds1307
                           _init_i2c
                        _init_timer2
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            8     4      4     287
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             8     4      4     287
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     253
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     383
                                              6 COMMON     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     194
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     194
                                              6 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _download_log                                        17    17      0    1286
                                              6 COMMON     1     1      0
                                              0 BANK0     16    16      0
                             ___bmul
                            _putchar
                               _puts
                       _read_at24c04
 ---------------------------------------------------------------------------------
 (2) _read_at24c04                                         2     2      0     209
                                              4 COMMON     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     130
                                              3 COMMON     2     0      2
                            _putchar
 ---------------------------------------------------------------------------------
 (3) _putchar                                              1     1      0      47
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_dashboard                                    4     2      2    2602
                                              2 BANK0      4     2      2
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                       _display_time
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0     613
                         _clcd_putch
                           _get_time
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            3     3      0     682
                                              0 BANK0      3     3      0
                         _clcd_print
                  _clear_clcd_screen
 ---------------------------------------------------------------------------------
 (1) _change_time                                         10     9      1    2808
                                              2 BANK0     10     9      1
                            ___awdiv
                            ___awmod
                             ___bmul
                         _clcd_print
                         _clcd_putch
                  _clear_clcd_screen
                           _get_time
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     137
                                              3 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _get_time                                             1     1      0     209
                                              6 COMMON     1     1      0
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0     209
                                              4 COMMON     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             2     2      0      81
                                              2 COMMON     2     2      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (2) _clear_clcd_screen                                    2     2      0     194
                                              6 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     189
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     499
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     499
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _change_password                                      6     3      3    1913
                                              2 BANK0      6     3      3
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                            _strncmp
                            _strncpy
                  _write_str_at24c04
 ---------------------------------------------------------------------------------
 (1) _write_str_at24c04                                    3     1      2     255
                                              7 COMMON     3     1      2
                      _write_at24c04
 ---------------------------------------------------------------------------------
 (2) _write_at24c04                                        4     3      1     128
                                              3 COMMON     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      47
                                              2 COMMON     1     1      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_wait_for_idle                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     3      5     229
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              6     2      4     275
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1     404
                                              0 BANK0      2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3     488
                                              6 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           4     3      1     194
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     511
                                              6 COMMON     4     0      4
                                              0 BANK0     10    10      0
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     340
                                             36 BANK0     10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1692
                                             10 BANK0     26    18      8
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
       _read_adc (ARG)
     _read_adc (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
     _read_adc (ARG)
   ___xxtofl
   _change_password
     _clcd_print
       _clcd_write
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
       _clcd_write (ARG)
     _clcd_write
     _strncmp
     _strncpy
     _write_str_at24c04
       _write_at24c04
         _i2c_start
           _i2c_wait_for_idle
         _i2c_stop
           _i2c_wait_for_idle
         _i2c_write
           _i2c_wait_for_idle
   _change_time
     ___awdiv
     ___awmod
     ___bmul
     _clcd_print
     _clcd_putch
     _clear_clcd_screen
       _clcd_write
     _get_time
       _read_ds1307
         _i2c_read
           _i2c_wait_for_idle
         _i2c_rep_start
           _i2c_start
           _i2c_stop
         _i2c_start
         _i2c_stop
         _i2c_write
     _write_ds1307
       _i2c_start
       _i2c_stop
       _i2c_write
   _clcd_print
   _clcd_write
   _clear_clcd_screen
   _clear_log
     _clcd_print
     _clear_clcd_screen
   _display_dashboard
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _display_time
       _clcd_putch
       _get_time
   _download_log
     ___bmul
     _putchar
     _puts
       _putchar
     _read_at24c04
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write
   _init_config
     _init_adc
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_digital_keypad
     _init_ds1307
       _read_ds1307
       _write_ds1307
     _init_i2c
       ___lldiv
     _init_timer2
     _init_uart
       ___lldiv
   _log_car_event
     ___awdiv
     ___awmod
     _get_time
     _record_log
       ___bmul
       _write_str_at24c04
     _strncpy
   _login
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _clear_clcd_screen
     _read_at24c04
     _strncmp
   _menu_screen
     _clcd_print
     _clcd_putch
     _clear_clcd_screen
   _read_adc
   _read_digital_keypad
   _strcpy
   _view_log
     ___awmod
     ___bmul
     _clcd_print
     _clcd_putch
     _read_at24c04
   _write_str_at24c04

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96     22      22     22.9%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      70     87.5%
BITBANK1            80      0       0      0.0%
BANK0               80     50      60     75.0%
BITBANK0            80      0       0      0.0%
COMMON              14     10      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     164      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Nov 21 13:25:03 2024

                   ___fldiv@aexp 0043                     ___fldiv@bexp 0042                                pc 0002  
                   ___fldiv@sign 003B                   ___bmul@product 0073                   clcd_print@addr 0078  
                             l20 1799                               l23 1F9F                               l32 1388  
                             l17 1456                               l26 11EA                               l52 1301  
                             l55 1221                               l49 1FDA                               l90 1FB7  
                             l84 13EA                               l93 1F6A                               l87 1FAB  
                             l96 1F89                               _GO 00FA                               l99 1F73  
                   ___awdiv@sign 0077                               fsr 0004                              l102 123D  
                            l104 1242                              l107 1F7E                              l203 0275  
                            l205 0290                              l215 031E                              l313 156C  
                            l242 1FDE                              l323 1285                              l316 16D3  
                            l252 1F52                              l164 1490                              l245 1FEC  
                            l406 0658                              l326 1671                              l319 15C0  
                            l239 1F59                              l183 021D                              l191 01C4  
                            l513 1FAA                              l337 0FFF                              l265 086A  
                            l530 13B8                              l370 0C66                              l540 1F8F  
                            l188 016E                              l381 1359                              l541 1F93  
                            l349 0F8B                              l357 0A52                              l438 07D6  
                            l542 1F94                              l391 0B55                              l800 1617  
                            l473 132C                              l482 12D6                              l458 1FC8  
                            l476 07FD                              l660 1FFF                              l548 12AB  
                            l670 17FF                              l835 08CB                              l828 08E0  
                            l838 08E0                              l787 1736                              l991 0CBC  
                            l993 0E30                              _GIE 005F                              _RE1 0049  
                            _RE2 004A                              _PR2 0092                              _PEN 048A  
                            _SEN 0488                    ?_display_time 0070                              _log 00AE  
                            _sec 0059                              _isr 13EB                   clcd_putch@addr 0020  
                            fsr0 0004                   clcd_putch@data 0021                              indf 0000  
                   ___awmod@sign 0077               view_log@reset_flag 0022               log_car_event@event 0021  
             log_car_event@speed 0023       change_password@pwd_changed 00A7                     ___fltol@exp1 004D  
                           l1100 151F                             l1013 0E1C                             l1015 0E28  
                           l1007 0DAA                             l1115 14D4                             l1081 0944  
                           l1075 0905                             l1076 0916                             l1077 0996  
                           l1088 0960                             l1096 1263                             l1089 096C  
          ??_read_digital_keypad 0072                             l4101 1F67                             l4103 1F6B  
                           l4111 1F7E                             l4105 1F70                             l5001 06E9  
                           l4121 1230                             l4201 153B                             l4131 1422  
                           l4107 1F75                             l5011 0712                             l5003 06F5  
                           l4123 1234                             l4115 1F7F                             l4211 1567  
                           l4203 1547                             l4141 1438                             l4133 142C  
                           l4109 1F7A                             l5021 0737                             l5013 0716  
                           l5005 0701                             l4221 1FF3                             l4125 1239  
                           l4117 1223                             l4213 156B                             l4205 154B  
                           l4301 126C                             l4143 1444                             l4135 142F  
                           l4311 1494                             l5023 0739                             l5015 071C  
                           l5007 0707                             l5031 074F                             l4223 1FF5  
                           l4127 1241                             l4119 1228                             l4151 12D8  
                           l4207 1557                             l4215 1F8B                             l4231 179A  
                           l4303 126D                             l5201 0D5B                             l5121 0C6B  
                           l5113 08C0                             l5105 08A9                             l4145 1445  
                           l4137 1430                             l4321 14C4                             l4313 149A  
                           l5041 0784                             l5025 073D                             l5017 0728  
                           l5033 075E                             l5009 0710                             l4401 1732  
                           l4225 1FF7                             l4217 1FEE                             l4153 1300  
                           l4209 155B                             l4161 1737                             l4241 17C7  
                           l4233 17AC                             l4305 1279                             l5211 0D76  
                           l5203 0D5D                             l5131 0C7B                             l5123 0C6D  
                           l5115 08D0                             l5107 08B9                             l4147 144A  
                           l4139 1435                             l4331 14D5                             l4323 14C6  
                           l5051 07A7                             l5043 0786                             l5035 0764  
                           l5027 0743                             l5019 072E                             l4411 15CB  
                           l4227 1FFE                             l4219 1FEF                             l4171 1762  
                           l4163 173F                             l4243 17D9                             l4235 17AF  
                           l4251 17F7                             l4307 127B                             l5221 0D8E  
                           l5213 0D7A                             l5205 0D63                             l5141 0C93  
                           l5133 0C80                             l5125 0C71                             l5117 08D5  
                           l5301 098E                             l4149 144D                             l4333 14E3  
                           l4341 14F0                             l4317 14B9                             l4309 1491  
                           l4157 07D8                             l5061 07BF                             l5053 07B6  
                           l5045 078D                             l5037 0777                             l4421 15DF  
                           l4413 15CD                             l4405 15C1                             l4325 1303  
                           l4181 178D                             l4173 1765                             l4165 1746  
                           l4261 1F9A                             l4245 17E7                             l4237 17BA  
                           l4501 0850                             l5231 0DAF                             l5223 0D8F  
                           l5215 0D7B                             l5207 0D6B                             l5151 0CA4  
                           l5143 0C96                             l5135 0C88                             l5127 0C75  
                           l5119 0C67                             l4263 135A                             l4343 14F8  
                           l4319 14C0                             l4095 1FAB                             l4159 07F4  
                           l4191 12AE                             l5063 07CA                             l5047 0798  
                           l5039 077A                             l4431 15FC                             l4423 15E6  
                           l4415 15D1                             l4407 15C2                             l4327 132B  
                           l4183 1794                             l4175 176C                             l4167 1756  
                           l4255 1F95                             l4271 1FC9                             l4247 17E8  
                           l4239 17BE                             l4511 0859                             l4503 0852  
                           l5311 004B                             l5233 0DB4                             l5241 0DE5  
                           l5225 0D93                             l5217 0D84                             l5209 0D6D  
                           l5161 0CC4                             l5153 0CA9                             l5145 0C9A  
                           l5137 0C89                             l5129 0C76                             l4265 1362  
                           l4185 11D9                             l4345 14FF                             l4337 14E6  
                           l4097 1FB1                             l4193 12BE                             l5049 07A3  
                           l4361 16D4                             l4433 1603                             l4425 15E8  
                           l4417 15D6                             l4409 15C6                             l4353 1286  
                           l4177 1778                             l4169 175B                             l4257 1F98  
                           l4273 1FD0                             l4249 17F1                             l4281 13E7  
                           l4601 0EEC                             l4513 085F                             l4521 0869  
                           l5401 01C1                             l5321 0081                             l5313 0063  
                           l5305 0033                             l5251 0E1B                             l5243 0DF2  
                           l5235 0DC2                             l5227 0DA7                             l5219 0D8A  
                           l5171 0CE0                             l5163 0CD0                             l5155 0CB1  
                           l5147 0C9E                             l5139 0C8B                             l5091 0892  
                           l5083 086B                             l4267 1372                             l4347 1505  
                           l4339 14EA                             l4099 1F62                             l4195 12C4  
                           l5059 07B8                             l4371 16E4                             l4363 16D5  
                           l4427 15EC                             l4419 15DC                             l4435 1609  
                           l4187 1205                             l4355 1287                             l4179 177D  
                           l4259 1F99                             l4283 1F4D                             l4275 1FD2  
                           l4291 1FA0                             l4451 148F                             l4443 1457  
                           l4603 0EF3                             l4531 1FE2                             l4515 0865  
                           l5411 01CE                             l5331 00B8                             l5323 0089  
                           l5315 0066                             l5307 0037                             l5253 0E20  
                           l5245 0E00                             l5237 0DC6                             l5181 0D0B  
                           l5165 0CD2                             l5157 0CB2                             l5149 0C9F  
                           l5093 0893                             l5085 0876                             l4269 1378  
                           l4349 1511                             l4197 12C6                             l4189 12AD  
                           l4381 16F6                             l4373 16E9                             l4365 16D9  
                           l4437 160E                             l4429 15F6                             l4293 1FB8  
                           l4357 1295                             l4285 1F53                             l4277 13B9  
                           l4445 1475                             l4461 166C                             l4453 1618  
                           l4621 0F35                             l4605 0EFE                             l4613 0F0E  
                           l4541 0E34                             l4701 0A17                             l4517 0867  
                           l4509 0854                             l4525 1243                             l5421 01F4  
                           l5405 01C8                             l5413 01DF                             l5341 00EE  
                           l5333 00CD                             l5325 008F                             l5317 006B  
                           l5309 0039                             l5255 0E24                             l5247 0E0F  
                           l5239 0DDF                             l5191 0D30                             l5183 0D13  
                           l5175 0CE9                             l5159 0CB4                             l5095 089B  
                           l5271 090D                             l5263 08E4                             l4391 171A  
                           l4383 16FD                             l4375 16EB                             l4367 16DE  
                           l4439 1613                             l4295 1FBF                             l4199 1520  
                           l4535 156D                             l4359 129B                             l4279 13BC  
                           l4287 1389                             l4447 147A                             l4455 161D  
                           l4623 0F40                             l4615 0F17                             l4631 0F90  
                           l4607 0F0C                             l4551 0E4E                             l4543 0E3A  
                           l4703 0A1D                             l4471 0811                             l4463 0800  
                           l4527 1245                             l4711 0B59                             l5503 0324  
                           l5415 01E5                             l5351 0112                             l5343 00F0  
                           l5335 00D1                             l5327 00AC                             l5319 0077  
                           l5257 0E26                             l5249 0E13                             l5193 0D31  
                           l5185 0D15                             l5177 0CFB                             l5169 0CDB  
                           l5097 089D                             l5089 087F                             l5281 092D  
                           l5265 08E9                             l4393 171B                             l4385 16FF  
                           l4377 16ED                             l4369 16E0                             l4297 1672  
                           l4537 1578                             l4801 0AA7                             l4289 138D  
                           l4449 148E                             l4457 162C                             l4633 0F9C  
                           l4641 0FD4                             l4625 0F4B                             l4617 0F23  
                           l4561 0E6C                             l4545 0E40                             l4705 0A45  
                           l4529 1FDB                             l4481 0826                             l4473 0813  
                           l4465 0804                             l4721 0B74                             l4713 0B64  
                           l5441 0210                             l5417 01EB                             l5425 01F7  
                           l5361 0132                             l5353 0117                             l5329 00B2  
                           l5337 00E3                             l5187 0D1A                             l5195 0D3A  
                           l5179 0D03                             l5099 08A1                             l5291 0964  
                           l5283 093B                             l5275 0919                             l5267 08ED  
                           l4395 1722                             l4387 1703                             l4379 16F3  
                           l4539 157D                             l4811 0ACC                             l4803 0AB2  
                           l4299 1264                             l4459 166B                             l4651 0FF9  
                           l4643 0FD9                             l4635 0FA3                             l4627 0F50  
                           l4619 0F2A                             l4571 0E88                             l4563 0E75  
                           l4555 0E50                             l4547 0E47                             l4707 0A4F  
                           l4491 0836                             l4483 0827                             l4475 0817  
                           l4467 0806                             l4731 0B86                             l4715 0B6C  
                           l5523 033D                             l5515 032A                             l5451 0279  
                           l5443 0215                             l5427 01FD                             l5419 01F0  
                           l5363 0139                             l5355 011B                             l5339 00E9  
                           l5347 0106                             l5197 0D4C                             l5189 0D2C  
                           l5293 096E                             l5285 094B                             l5277 0924  
                           l5269 08FD                             l4389 1714                             l4397 1728  
                           l4901 0517                             l4821 0AF2                             l4813 0AD4  
                           l4805 0AB6                             l4653 0FFC                             l4645 0FE4  
                           l4637 0FAE                             l4629 0F84                             l4573 0E8E  
                           l4581 0EA0                             l4565 0E7D                             l4557 0E5E  
                           l4549 0E49                             l4661 09A0                             l4493 083C  
                           l4485 082D                             l4469 080C                             l4477 081B  
                           l4741 0B9B                             l4733 0B8C                             l4725 0B76  
                           l4717 0B6D                             l5533 0343                             l5461 02A2  
                           l5453 0285                             l5445 0219                             l5437 0204  
                           l5373 0151                             l5365 0140                             l5357 0120  
                           l5349 010C                             l5199 0D4D                             l5295 0984  
                           l5287 0956                             l5279 092B                             l4399 172D  
                           l4903 0526                             l4911 0535                             l4831 0B2A  
                           l4823 0AF8                             l4815 0ADC                             l4807 0ABC  
                           l4647 0FEB                             l4639 0FBB                             l4591 0EB8  
                           l4583 0EA6                             l4655 0FFE                             l4575 0E97  
                           l4567 0E7F                             l4559 0E66                             l4663 09A5  
                           l4495 083F                             l4479 0821                             l4751 0BAA  
                           l4743 0B9D                             l4727 0B7C                             l4735 0B8E  
                           l4719 0B6F                             l5471 02CC                             l5463 02A6  
                           l5455 028C                             l5439 020A                             l5391 0197  
                           l5383 0170                             l5375 0156                             l5359 012B  
                           l5367 0144                             l5447 021D                             l5297 0989  
                           l5289 095A                             l4921 0549                             l4913 053B  
                           l4841 0382                             l4833 0B32                             l4825 0B00  
                           l4817 0AE2                             l4809 0AC3                             l4649 0FF2  
                           l4593 0EC3                             l4585 0EB5                             l4569 0E82  
                           l4681 09C5                             l4673 09B1                             l4665 09A8  
                           l4497 0844                             l4489 0831                             l4753 0BB6  
                           l4745 0BA9                             l4737 0B94                             l4729 0B7E  
                           l5481 02ED                             l5473 02D2                             l5457 0294  
                           l5449 0265                             l5537 035E                             l5393 01A2  
                           l5385 0176                             l5377 0167                             l5369 014A  
                           l5299 098D                             l5571 0756                             l4923 054A  
                           l4915 053C                             l4851 03DF                             l4843 0388  
                           l4771 134B                             l4763 132D                             l4835 0B3A  
                           l4827 0B08                             l4819 0AEA                             l4595 0EC7  
                           l4675 09B7                             l4683 09C8                             l4667 09AA  
                           l4659 099A                             l4499 084A                             l4755 0BBA  
                           l4739 0B99                             l5491 0301                             l5483 02F1  
                           l5475 02D7                             l5467 02AA                             l5459 029B  
                           l5539 0378                             l5395 01A7                             l5387 017B  
                           l5379 016B                             l4941 058A                             l4933 0563  
                           l4925 0554                             l4917 0542                             l4909 0528  
                           l4861 03EC                             l4853 03E0                             l4845 03CF  
                           l4765 1330                             l4837 0B40                             l4829 0B21  
                           l4781 0A5F                             l4773 0A53                             l4597 0ECD  
                           l4685 09CE                             l4693 09DE                             l4677 09BC  
                           l4669 09AF                             l4757 0BC0                             l5493 0306  
                           l5469 02BD                             l5397 01AC                             l5389 018C  
                           l4935 056E                             l4927 0555                             l4919 0543  
                           l4871 03F7                             l4855 03E1                             l4847 03DA  
                           l4767 1335                             l4791 0A93                             l4839 0B46  
                           l4783 0A69                             l4775 0A59                             l4599 0EE0  
                           l4695 09E4                             l4687 09D4                             l4679 09C1  
                           l4759 0C65                             l5495 030B                             l5487 02F7  
                           l5479 02DC                             l5399 01BD                             l4961 066C  
                           l4937 057E                             l4929 055D                             l4881 0456  
                           l4873 03FF                             l4865 03EE                             l4857 03E5  
                           l4849 03DE                             l4769 1340                             l4793 0A99  
                           l4785 0A72                             l4777 0A59                             l4697 09EC  
                           l4689 09D9                             l5497 0319                             l5489 02FC  
                           _ADFM 04FF                             l4963 0674                             l4971 068B  
                           l4955 0659                             l4947 0596                             l4891 04F0  
                           l4883 0460                             l4875 0404                             l4867 03F5  
                           l4859 03E7                             l4787 0A78                             l4779 0A5A  
                           l4699 0A01                             ?_isr 0070                             l4973 0690  
                           l4965 0683                             l4957 0663                             l4949 05A1  
                           l4893 04F8                             l4885 0468                             l4789 0A8E  
                           l4991 06BF                             l4983 069B                             l4967 0684  
                           l4959 0664                             l4895 04FD                             l4887 049E  
                           l4879 041B                             l4799 0A9A                             l4985 06A1  
                           l4993 06CB                             l4977 0692                             l4969 0687  
                           l4897 0508                             l4889 04E6                             l4995 06D1  
                           l4987 06AC                             l4979 0699                             l4899 0513  
                           l4997 06D7                             l4989 06B3                             l4999 06E2  
                           _ADON 00F8                             STR_1 11BB                             STR_2 11B5  
                           STR_3 11A3                             STR_4 11A6                             STR_5 11A9  
                           STR_6 11AC                             STR_7 1199                             STR_8 11B8  
                           STR_9 10E7                             _CREN 00C4                             u4100 12D6  
                           u4101 12D5                             u4040 1FB1                             u5000 0B55  
                           u4041 1FB0                             u5001 0B54                             u4050 1FB7  
                           u5010 0388                             u4210 17D9                             u4051 1FB6  
                           u4115 153E                             u5011 0387                             u4211 17D8  
                           u4300 14D4                             u4060 1239                             u5100 0554  
                           u5020 03EC                             u4140 1F93                             u4301 14D3  
                           u4061 1238                             u4125 154E                             u5101 0553  
                           u5021 03EB                             u4141 1F92                             u5005 0B51  
                           u4205 17C0                             u4070 1429                             u4310 14E3  
                           u4150 1FF3                             u5110 055B                             u5030 03F5  
                           u4230 17F7                             u4071 1425                             u4311 14E2  
                           u4151 1FF2                             u4135 155E                             u5111 0559  
                           u5031 03F4                             u4231 17F6                             u4215 17D5  
                           u4240 1388                             u4320 14F8                             u5200 06A1  
                           u4160 1FFE                             u5120 055C                             u6000 02ED  
                           u4241 1387                             u4321 14F7                             u5201 06A0  
                           u4161 1FFD                             u4225 17E9                             u6001 02EC  
                           u4330 14FF                             u5210 06B3                             u4410 1703  
                           u5130 0562                             u4170 17AC                             u4250 13CA  
                           u4331 14FE                             u5211 06B2                             u4411 1702  
                           u5131 0561                             u4171 17AB                             u5300 088D  
                           u4084 142C                             u4340 1505                             u5220 06D1  
                           u5140 0663                             u4260 139B                             u4341 1504  
                           u5221 06D0                             u5141 0662                             u4405 16F7  
                           u5045 044D                             u5310 08A1                             u4350 1511  
                           u5230 06D7                             u5150 066A                             u4430 1714  
                           u4510 15EC                             u5070 053B                             u4190 17BE  
                           u4270 126C                             u5311 08A0                             u4095 143C  
                           u4351 1510                             u5231 06D6                             u5151 0668  
                           u4431 1713                             u4511 15EB                             u5071 053A  
                           u5055 0495                             u4191 17BD                             u4255 13C5  
                           u4271 126B                             u5400 0C7B                             u5320 08A8  
                           u4280 14B8                             u5240 06E9                             u5160 066B  
                           u4520 15F6                             u5080 0542                             u4360 12AB  
                           u4600 082D                             u5401 0C7A                             u5321 08A7  
                           u5305 0888                             u4281 14B7                             u5241 06E8  
                           u4425 1704                             u4521 15F5                             u4505 15E0  
                           u5081 0541                             u5065 04DD                             u4361 12AA  
                           u4185 17B1                             u4265 1396                             u4601 082C  
                           u6017 013D                             u5410 0C80                             u4290 14BF  
                           u5250 071C                             u5170 0674                             u4450 1728  
                           u4370 16D9                             u5090 0549                             u4610 0836  
                           u5411 0C7F                             u4291 14BE                             u5251 071B  
                           u5171 0673                             u4451 1727                             u4435 1710  
                           u4371 16D8                             u5091 0548                             u6107 0FA0  
                           u4611 0835                             u6027 0289                             _PEIE 005E  
                           u5500 0D30                             u5420 0C9E                             u5340 08B8  
                           u5260 0743                             u5180 0690                             u4460 172D  
                           u4380 16E4                             u4540 1609                             u4700 1FE2  
                           u4620 083C                             u5501 0D2F                             u5421 0C9D  
                           u5341 08B7                             u5261 0742                             u5181 068F  
                           u4461 172C                             u4445 171C                             u4381 16E3  
                           u4541 1608                             u4525 15F2                             u6117 0FCE  
                           u4701 1FE1                             u4621 083B                             u6037 029F  
                           u5430 0CA4                             u5350 08BF                             u5270 0764  
                           u5190 0699                             u4390 16F3                             u4550 160E  
                           u4470 15C6                             u4710 0E3A                             u4630 0844  
                           u5431 0CA3                             u5351 08BE                             u5335 08AA  
                           u5271 0763                             u5191 0698                             u4391 16F2  
                           u4551 160D                             u4535 15FD                             u4471 15C5  
                           u6207 1353                             u6127 0FF6                             u4711 0E39  
                           u4631 0843                             u6047 0313                             u5600 0DA7  
                           u5520 0D4C                             u5440 0CA9                             u5280 0777  
                           u4480 15D1                             u4800 0F17                             u4720 0E4E  
                           u4640 084A                             u4560 080C                             u5601 0DA6  
                           u5521 0D4B                             u5441 0CA8                             u5281 0776  
                           u4481 15D0                             u6217 051F                             u6137 173B  
                           u4801 0F16                             u6057 0E58                             u4721 0E4D  
                           u4641 0849                             u4561 080B                             u5610 0DAE  
                           u5530 0D63                             u5450 0CC4                             u5370 08D0  
                           u5290 0876                             u4490 15DC                             u4810 0F8B  
                           u4730 0E66                             u4650 0850                             u4570 0811  
                           u5611 0DAD                             u5531 0D62                             u5515 0D33  
                           u5451 0CC3                             u5371 08CF                             u5291 0875  
                           u4491 15DB                             u6227 0576                             u6147 174A  
                           u4811 0F8A                             u6067 0EAE                             u4731 0E65  
                           u4651 084F                             u4571 0810                             u5620 0DB4  
                           u5540 0D6B                             u5460 0CE0                             u5380 08D5  
                           u5700 090D                             u4740 0E6C                             u4820 09A0  
                           u4660 0859                             u4580 0821                             u4900 0B6C  
                           _RCEN 048B                             _RCIF 0065                             u5621 0DB3  
                           u5541 0D6A                             u5525 0D48                             u5461 0CDF  
                           u5381 08D4                             u5365 08C2                             u5701 090C  
                           u6237 1FC3                             u6157 1758                             u6077 0EF0  
                           u4741 0E6B                             u4821 099F                             u4661 0858  
                           u4581 0820                             u4901 0B6B                             u5630 0DC6  
                           u5470 0D1A                             u5390 0C75                             u4750 0E88  
                           u4830 09AF                             u4670 085F                             u4590 0826  
                           u4910 0B74                             u5631 0DC5                             u5471 0D19  
                           u5391 0C74                             u6247 07AF                             u6167 176E  
                           u6087 0F06                             u4751 0E87                             u4831 09AE  
                           u4671 085E                             u4591 0825                             u4911 0B73  
                           u5640 0DD5                             u5560 0D7A                             u5800 0989  
                           u5720 092A                             u4760 0E8E                             u4840 09B7  
                           u4680 0865                             u4920 0B7C                             u5561 0D79  
                           u5801 0988                             u5721 0929                             u6257 07F8  
                           u6177 177A                             u6097 0F27                             u4761 0E8D  
                           u4841 09B6                             u4681 0864                             u4921 0B7B  
                           u5650 0DF2                             u5810 098D                             u4770 0EA6  
                           u4850 09BC                             u4690 1263                             u4930 0B86  
                           u5651 0DF1                             u5555 0D6F                             u5811 098C  
                           u5715 091C                             u6267 1432                             u6187 1788  
                           u4771 0EA5                             u4851 09BB                             u4691 1262  
                           u4931 0B85                             u5660 0E0F                             u5580 0D8E  
                           u5740 094A                             u4780 0ECD                             u4860 09CE  
                           u4940 0B8C                             u5900 0117                             u5820 0053  
                           u5661 0E0E                             u5645 0DD0                             u5581 0D8D  
                           u5485 0D1C                             u5741 0949                             u6277 1447  
                           u6197 1796                             u4781 0ECC                             u4861 09CD  
                           u4941 0B8B                             u5901 0116                             u5670 0E24  
                           u5590 0D93                             u4790 0EE0                             u4870 09D4  
                           u4950 0B94                             u5910 014A                             u5830 008F  
                           u5671 0E23                             u5655 0DEE                             u5591 0D92  
                           u5575 0D7D                             u5495 0D25                             u5735 093C  
                           u6287 1451                             u4791 0EDF                             u4871 09D3  
                           u4951 0B93                             u5911 0149                             u5831 008E  
                           u5760 095A                             u5680 08E9                             u4880 09E4  
                           u4960 0B99                             u5920 0150                             u5840 00B2  
                           u5665 0E0B                             u5761 0959                             u5681 08E8  
                           u4881 09E3                             u4961 0B98                             u5921 014F  
                           u5841 00B1                             u5770 0960                             u5690 08ED  
                           u4890 0A1D                             u4970 0BC0                             u5930 01E5  
                           u5850 00B8                             u5771 095F                             u5755 094F  
                           u5691 08EC                             u4891 0A1C                             u4971 0BBF  
                           u5931 01E4                             u5851 00B7                             u5780 0964  
                           u4980 0A5F                             u5940 01EB                             u5860 00E9  
                           u5781 0963                             u4981 0A5E                             u5941 01EA  
                           u5861 00E8                             u5790 0979                             u4990 0ABC  
                           u5950 01FD                             u5870 00EE                             u4991 0ABB  
                           u5951 01FC                             u5871 00ED                             u5960 0203  
                           u5880 010C                             u5961 0202                             u5881 010B  
                           u5970 020A                             u5890 0112                             u5795 0974  
                           u5971 0209                             u5891 0111                             u5980 0210  
                           u5981 020F                             u5990 02D2                             u5991 02D1  
                           _SPEN 00C7                             _TXIF 0064                             _R_nW 04A2  
  read_digital_keypad@long_press 005B                             _main 0033                             _menu 00D9  
                           _time 00C2                             btemp 007E                             _puts 1286  
                           start 000C                  ___fldiv@new_exp 003C                   menu_screen@key 0025  
              ___bmul@multiplier 0074                   clcd_write@byte 0075                   clcd_write@mode 0072  
                  _i2c_rep_start 1F7F                            ??_isr 0070                     ?_init_ds1307 0070  
                  ___fltol@sign1 004C                            ?_main 0070                     ?_read_ds1307 0070  
                          _ACKEN 048C                            _ACKDT 048D                   ??_display_time 007A  
                __end_of___fldiv 0E31                  __end_of___awdiv 1737                            STR_10 11B2  
                          STR_11 11AF                            STR_12 119E                            STR_20 10BA  
                          STR_13 117E                            STR_21 10AB                            STR_14 11BE  
                          STR_30 1144                            STR_22 109B                            STR_23 1175  
                          STR_31 1021                            STR_15 116C                            STR_40 1044  
                          STR_24 1194                            STR_32 1186                            STR_16 114F  
                          STR_41 1044                            STR_25 10C9                            STR_33 1000  
                          STR_17 1111                            STR_42 1044                            STR_34 1043  
                          STR_26 111E                            STR_50 107A                            STR_18 1163  
                          STR_43 1042                            STR_35 1040                            STR_27 10E7  
                          STR_51 118D                            STR_19 10D8                            STR_36 103E  
                          STR_28 1159                            STR_44 1047                  __end_of___awmod 1618  
                          STR_29 1138                            STR_37 108B                            STR_45 1069  
                          STR_38 1104                            STR_46 1035                            STR_47 1035  
                          STR_39 112B                            STR_48 1058                            STR_49 10F6  
                __end_of___fltol 08E1                            ?_puts 0073                  __end_of___lldiv 1800  
                    i2c_read@ack 0072                  ___awdiv@divisor 0072                            i1l500 141A  
                   ?_init_config 0070                  ___awdiv@counter 0076                            _RCREG 001A  
                          _SPBRG 0099                            _PORTB 0006                            _PORTD 0008  
                          _SSPM3 00A3                            _TRISB 0086                            _TRISD 0088  
                          _SSPEN 00A5                            _TXREG 0019                     ?_init_timer2 0070  
                   main@menu_pos 019D                            _nDONE 00FA                     view_log@addr 0025  
                          _login 0E31                  _change_password 0659                     ?_menu_screen 0022  
                          pclath 000A                            puts@s 0073                  __end_of_putchar 1F95  
                          status 0003                            wtemp0 007E                  __end_of_strncmp 1520  
                __end_of_strncpy 14D5                 init_ds1307@dummy 0076                  __initialization 000F  
                 ?_i2c_rep_start 0070                     __end_of_main 037F                     __end_of_puts 12AC  
               __end_of_i2c_read 1243                 __end_of_i2c_stop 1F74                    ?_download_log 0070  
                         ??_main 004E                           ??_puts 0075                    ?_read_at24c04 0070  
                         _ADRESH 001E                           ?_login 0022                           _ADRESL 009E  
               ___awdiv@dividend 0074                     i2c_read@data 0073                           i1l4051 13F1  
                         i1l4061 1413                           i1l4053 1402                           i1l4055 1409  
                         i1l4063 1417                           i1l4057 140C                           i1l4049 13EB  
                         i1l4059 1411                           u400_20 13F1                           u400_21 13F0  
                         u401_20 1402                           u401_21 1401                           u402_20 1409  
                         u402_21 1408                           u403_20 1411                           u403_21 1410  
                   _write_ds1307 1204                           _TMR2IE 0461                           _TMR2IF 0061  
                         _TMR2ON 0092                           _SSPADD 0093                           _TRISE1 0449  
                         _TRISE2 044A                           _SSPBUF 0013                 __end_of___xxtofl 0997  
    __end_of_init_digital_keypad 1F53                 __end_of_get_time 156D                           ___bmul 1FED  
        _init_display_controller 1737                        ??___fldiv 0032                        ??___awdiv 0076  
                      ??___awmod 0076                        ??___fltol 0048                        ??___lldiv 0020  
      change_password@reset_flag 0024                 __end_of_init_i2c 13EB                 __end_of_init_adc 1F5A  
               __end_of_read_adc 1FED                   ??_download_log 0076                 ___awdiv@quotient 0078  
                ___awmod@divisor 0072                  ___awmod@counter 0076                           main@gr 01A1  
              change_time@buffer 002B                           _strcpy 1243                           login@i 0057  
                         login@j 002B          __end_of_change_password 07D7                           saved_w 007E  
               __end_of_view_log 0C67                   ??_read_at24c04 0074                        ??_putchar 0072  
                      ??_strncmp 0076                        ??_strncpy 0077                     ___xxtofl@arg 0026  
                   ___xxtofl@exp 0025                     ___xxtofl@val 0076          __end_of__initialization 002F  
           __end_of_display_time 16D4                       ___fltol@f1 0044                  ??_i2c_rep_start 0072  
            ___bmul@multiplicand 0072                   __pcstackCOMMON 0070                     __pidataBANK1 11EB  
                  __end_of_login 1000                  login@reset_flag 0022                __end_of_i2c_start 1F6B  
              __end_of_i2c_write 1F7F     change_password@toggle_cursor 00A6                _i2c_wait_for_idle 1FAB  
                change_time@done 00A8                  change_time@wait 00A9                          ??_login 0023  
             ?_i2c_wait_for_idle 0070                       __pbssBANK0 0052                       __pbssBANK1 00A0  
                      ?_i2c_read 0070                        ?_i2c_stop 0070        ??_init_display_controller 0076  
                     _clcd_print 135A              ??_i2c_wait_for_idle 0072                       _clcd_putch 11D6  
                     _clcd_write 1421                       __pmaintext 0033                  read_ds1307@addr 0074  
                  _log_car_event 1618                  read_ds1307@data 0075                          ?___bmul 0072  
                     __pintentry 0004                          _ACKSTAT 048E                          ?_strcpy 0072  
                        _T2CKPS0 0090                          _T2CKPS1 0091                  login@stored_pwd 0026  
    __end_of_read_digital_keypad 086B                        ?___xxtofl 0076                 ?_change_password 0022  
      __end_of_i2c_wait_for_idle 1FB8                    _write_at24c04 07D7                     init_i2c@baud 0026  
                        _SSPCON2 0091                        ?_get_time 0070                       __stringtab 1800  
                     ??_i2c_read 0072                       ??_i2c_stop 0072                        ?_init_i2c 0026  
           __end_of_download_log 0B56                        ?_init_adc 0070                        ?_read_adc 0072  
              __end_of_clear_log 135A                   ?_log_car_event 0021               change_password@key 0022  
           __end_of_read_at24c04 132D                          ___fldiv 0C67                          ___awdiv 16D4  
                        ___awmod 15C1                        ?_view_log 0022                          ___fltol 086B  
                        ___lldiv 179A                   main@long_press 019C                 main@control_flag 01A4  
                        __ptext1 0B56                          __ptext2 1243                          __ptext3 0800  
                        __ptext4 1FDB                          __ptext5 0997                          __ptext6 0E31  
                        __ptext7 1618                          __ptext8 1264                          __ptext9 1457  
__end_of_init_display_controller 179A                __end_of_init_clcd 1FA0           read_digital_keypad@key 0072  
                 ?_write_at24c04 0073                       ??___xxtofl 0020                __end_of_init_uart 13B9  
               ___awmod@dividend 0074                    ??_change_time 0023                   main@reset_flag 01A2  
         display_dashboard@event 0022           display_dashboard@speed 0023                          _putchar 1F8A  
                        main@key 01A5                          clrloop0 1F5B                       _record_log 1264  
                     ??_get_time 0076                          _strncmp 14D5                          _strncpy 1491  
           end_of_initialization 002F           change_password@new_pwd 00B9                       ??_init_i2c 002A  
                     ??_init_adc 0072                       ??_read_adc 0074           change_password@pwd_pos 007A  
              _clear_clcd_screen 1FB8                      ?_clcd_print 0076                      ?_clcd_putch 0020  
                ___lldiv@divisor 0072                      ?_clcd_write 0072                  ___lldiv@counter 0025  
             ?_clear_clcd_screen 0070                       ??_view_log 0023                     __pstringtext 1000  
            ??_clear_clcd_screen 0076                          strcpy@d 0077                     _display_time 1672  
                  i2c_write@data 0072                    ___xxtofl@sign 0024                      ___fldiv@grs 003E  
                    ___fldiv@rem 0037                    clcd_print@str 0076              __end_of_change_time 0659  
      __end_of_clear_clcd_screen 1FC9                _write_str_at24c04 12AC                  ??_log_car_event 0024  
             ?_write_str_at24c04 0077                   __end_of___bmul 2000              ??_write_str_at24c04 0079  
                ??_write_at24c04 0074                      view_log@key 0026                   __end_of_strcpy 1264  
            start_initialization 000F                        _i2c_start 1F62                      __end_of_isr 1421  
                      _i2c_write 1F74                      ?_record_log 0070        __end_of_write_str_at24c04 12D7  
                    putchar@data 0072            __end_of_i2c_rep_start 1F8A                         ??___bmul 0073  
                     init_fetch0 11C3                 change_time@blink 00AA                    ??_init_ds1307 0076  
                    __pdataBANK1 00CD       read_digital_keypad@pre_key 00AD                    ??_read_ds1307 0074  
                   _download_log 0A53            change_time@reset_flag 0022                         ??_strcpy 0075  
                  ??_init_config 007A                        ___fldiv@a 002A                        ___fldiv@b 002E  
                  ??_init_timer2 0072                      __pbssCOMMON 007A                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK3 0190                      _change_time 037F  
                     ?_i2c_start 0070                       ?_i2c_write 0070                   record_log@addr 0020  
                   _read_at24c04 1302                    ??_menu_screen 0023                   change_time@key 002A  
                      _clear_log 132D                         ?___fldiv 002A                         ?___awdiv 0072  
                       ?___awmod 0072                         ?___fltol 0044                _display_dashboard 156D  
                       ?___lldiv 0072                        _clock_reg 00A0                 read_at24c04@addr 0074  
               read_at24c04@data 0075               ?_display_dashboard 0022                        __pstrings 1800  
            __end_of_init_ds1307 1FDB              read_adc@adc_reg_val 0074              ??_display_dashboard 0024  
            __end_of_read_ds1307 1302                         ?_putchar 0070                        _init_clcd 1F95  
            __end_of_init_config 1491                        _init_uart 1389                         ?_strncmp 0072  
                       ?_strncpy 0072                        _log_count 0058                    ?_write_ds1307 0073  
            __end_of_init_timer2 1FAB         ?_init_display_controller 0070                interrupt_function 0004  
                      clear_ram0 1F5A                     ??_clcd_print 0079                     ??_clcd_putch 007A  
            __end_of_menu_screen 0A53                     ??_clcd_write 0073                       ?_clear_log 0070  
      __end_of_display_dashboard 15C1                        main@F1251 00E3                        main@F1253 00CD  
                  download_log@i 002F             change_time@blink_pos 00AB                      __stringbase 1812  
                      main@event 019E       change_password@blink_delay 00A5                        main@speed 01A3  
                    ??_i2c_start 0072               __end_of_clcd_print 1389                      ??_i2c_write 0072  
             __end_of_clcd_putch 11EB               __end_of_clcd_write 1457                       ?_init_clcd 0070  
                     ?_init_uart 0026                   ??_write_ds1307 0074              _init_digital_keypad 1F4D  
          write_str_at24c04@addr 0079                         _i2c_read 1222            write_str_at24c04@data 0077  
                       _i2c_stop 1F6B               login@user_password 00C9             ?_init_digital_keypad 0070  
                    _init_ds1307 1FC9               __end_of__stringtab 1812                      _read_ds1307 12D7  
                    _init_config 1457                         ___xxtofl 08E1                      _init_timer2 1FA0  
                       __ptext10 1389                         __ptext11 1FA0                         __ptext20 1302  
                       __ptext12 13B9                         __ptext21 1286                         __ptext13 179A  
                       __ptext30 1F7F                         __ptext22 1F8A                         __ptext14 1FC9  
                       __ptext31 1222                         __ptext23 156D                         __ptext15 1F4D  
                       __ptext40 1F6B                         __ptext32 1FB8                         __ptext24 1672  
                       __ptext16 1F95                         __ptext41 1F62                         __ptext33 1FED  
                       __ptext25 132D                         __ptext17 1737                         __ptext50 0C67  
                       __ptext42 1FAB                         __ptext34 15C1                         __ptext26 037F  
                       __ptext18 1F53                         __ptext51 13EB                         __ptext43 1491  
                       __ptext35 16D4                         __ptext27 1204                         __ptext19 0A53  
                       __ptext44 14D5                         __ptext36 0659                         __ptext28 1520  
                       __ptext45 11D6                         __ptext37 12AC                         __ptext29 12D7  
                       __ptext46 135A                         __ptext38 07D7                         __ptext47 1421  
                       __ptext39 1F74                         __ptext48 08E1                         __ptext49 086B  
                   ??_record_log 007A                login@attempt_left 00AC                         _get_time 1520  
                    _menu_screen 0997                       strcpy@dest 0072                         _init_i2c 13B9  
                       _init_adc 1F53                         _read_adc 1FDB          read_digital_keypad@once 007B  
          __end_of_log_car_event 1672                      ??_clear_log 0020                ??_change_password 0025  
                       _view_log 0B56                  view_log@log_pos 0055            ??_init_digital_keypad 0072  
                       main@gear 0190               __end_of_record_log 1286                        view_log@i 0027  
          __end_of_write_at24c04 07FE                         isr@count 00A3              change_time@new_time 0052  
                   ?_change_time 0022                         init_ram0 11C7                      ??_init_clcd 0078  
                    ??_init_uart 002A                         login@key 002A                         intlevel1 0000  
                  init_uart@baud 0026                 ___lldiv@dividend 0076                        strcpy@src 0073  
                      stringcode 180A                        strncpy@cp 0079             __end_of_write_ds1307 1222  
            _read_digital_keypad 0800                 ___lldiv@quotient 0021             download_log@position 002C  
                       strncmp@l 0072                         strncmp@n 0074                         strncmp@r 0073  
                       stringtab 1800                         strncpy@d 0072                         strncpy@n 0075  
                       strncpy@s 0073                write_at24c04@addr 0076                write_at24c04@data 0073  
                    _return_time 005A             ?_read_digital_keypad 0070                 write_ds1307@addr 0074  
               write_ds1307@data 0073            menu_screen@reset_flag 0022              menu_screen@menu_pos 0056  
              download_log@index 002D                 download_log@addr 002B                  download_log@log 0020  
