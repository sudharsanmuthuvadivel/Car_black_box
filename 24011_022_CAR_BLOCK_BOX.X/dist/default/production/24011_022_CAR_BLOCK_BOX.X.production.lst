

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Nov 19 22:14:14 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,space=0,delta=2
    13                           	psect	clrtext,global,class=CODE,space=0,delta=2
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    18                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    32                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=1
    45                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=1
    46                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2,group=2
    56                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2,group=2
    57                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2,group=1
    61                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2,group=1
    62                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2,group=1
    63                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,space=0,delta=2
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    67                           	dabs	1,0x7E,2
    68     0000                     
    69                           ; Version 2.40
    70                           ; Generated 17/11/2021 GMT
    71                           ; 
    72                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F877A Definitions
   102                           ; 
   103                           ; SFR Addresses
   104     0004                     fsr             equ	4
   105     0004                     fsr0            equ	4
   106     0000                     indf            equ	0
   107     0000                     indf0           equ	0
   108     0002                     pc              equ	2
   109     0002                     pcl             equ	2
   110     000A                     pclath          equ	10
   111     0003                     status          equ	3
   112     0000                     INDF            equ	0	;# 
   113     0001                     TMR0            equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR             equ	4	;# 
   117     0005                     PORTA           equ	5	;# 
   118     0006                     PORTB           equ	6	;# 
   119     0007                     PORTC           equ	7	;# 
   120     0008                     PORTD           equ	8	;# 
   121     0009                     PORTE           equ	9	;# 
   122     000A                     PCLATH          equ	10	;# 
   123     000B                     INTCON          equ	11	;# 
   124     000C                     PIR1            equ	12	;# 
   125     000D                     PIR2            equ	13	;# 
   126     000E                     TMR1            equ	14	;# 
   127     000E                     TMR1L           equ	14	;# 
   128     000F                     TMR1H           equ	15	;# 
   129     0010                     T1CON           equ	16	;# 
   130     0011                     TMR2            equ	17	;# 
   131     0012                     T2CON           equ	18	;# 
   132     0013                     SSPBUF          equ	19	;# 
   133     0014                     SSPCON          equ	20	;# 
   134     0015                     CCPR1           equ	21	;# 
   135     0015                     CCPR1L          equ	21	;# 
   136     0016                     CCPR1H          equ	22	;# 
   137     0017                     CCP1CON         equ	23	;# 
   138     0018                     RCSTA           equ	24	;# 
   139     0019                     TXREG           equ	25	;# 
   140     001A                     RCREG           equ	26	;# 
   141     001B                     CCPR2           equ	27	;# 
   142     001B                     CCPR2L          equ	27	;# 
   143     001C                     CCPR2H          equ	28	;# 
   144     001D                     CCP2CON         equ	29	;# 
   145     001E                     ADRESH          equ	30	;# 
   146     001F                     ADCON0          equ	31	;# 
   147     0081                     OPTION_REG      equ	129	;# 
   148     0085                     TRISA           equ	133	;# 
   149     0086                     TRISB           equ	134	;# 
   150     0087                     TRISC           equ	135	;# 
   151     0088                     TRISD           equ	136	;# 
   152     0089                     TRISE           equ	137	;# 
   153     008C                     PIE1            equ	140	;# 
   154     008D                     PIE2            equ	141	;# 
   155     008E                     PCON            equ	142	;# 
   156     0091                     SSPCON2         equ	145	;# 
   157     0092                     PR2             equ	146	;# 
   158     0093                     SSPADD          equ	147	;# 
   159     0094                     SSPSTAT         equ	148	;# 
   160     0098                     TXSTA           equ	152	;# 
   161     0099                     SPBRG           equ	153	;# 
   162     009C                     CMCON           equ	156	;# 
   163     009D                     CVRCON          equ	157	;# 
   164     009E                     ADRESL          equ	158	;# 
   165     009F                     ADCON1          equ	159	;# 
   166     010C                     EEDATA          equ	268	;# 
   167     010D                     EEADR           equ	269	;# 
   168     010E                     EEDATH          equ	270	;# 
   169     010F                     EEADRH          equ	271	;# 
   170     018C                     EECON1          equ	396	;# 
   171     018D                     EECON2          equ	397	;# 
   172     0000                     INDF            equ	0	;# 
   173     0001                     TMR0            equ	1	;# 
   174     0002                     PCL             equ	2	;# 
   175     0003                     STATUS          equ	3	;# 
   176     0004                     FSR             equ	4	;# 
   177     0005                     PORTA           equ	5	;# 
   178     0006                     PORTB           equ	6	;# 
   179     0007                     PORTC           equ	7	;# 
   180     0008                     PORTD           equ	8	;# 
   181     0009                     PORTE           equ	9	;# 
   182     000A                     PCLATH          equ	10	;# 
   183     000B                     INTCON          equ	11	;# 
   184     000C                     PIR1            equ	12	;# 
   185     000D                     PIR2            equ	13	;# 
   186     000E                     TMR1            equ	14	;# 
   187     000E                     TMR1L           equ	14	;# 
   188     000F                     TMR1H           equ	15	;# 
   189     0010                     T1CON           equ	16	;# 
   190     0011                     TMR2            equ	17	;# 
   191     0012                     T2CON           equ	18	;# 
   192     0013                     SSPBUF          equ	19	;# 
   193     0014                     SSPCON          equ	20	;# 
   194     0015                     CCPR1           equ	21	;# 
   195     0015                     CCPR1L          equ	21	;# 
   196     0016                     CCPR1H          equ	22	;# 
   197     0017                     CCP1CON         equ	23	;# 
   198     0018                     RCSTA           equ	24	;# 
   199     0019                     TXREG           equ	25	;# 
   200     001A                     RCREG           equ	26	;# 
   201     001B                     CCPR2           equ	27	;# 
   202     001B                     CCPR2L          equ	27	;# 
   203     001C                     CCPR2H          equ	28	;# 
   204     001D                     CCP2CON         equ	29	;# 
   205     001E                     ADRESH          equ	30	;# 
   206     001F                     ADCON0          equ	31	;# 
   207     0081                     OPTION_REG      equ	129	;# 
   208     0085                     TRISA           equ	133	;# 
   209     0086                     TRISB           equ	134	;# 
   210     0087                     TRISC           equ	135	;# 
   211     0088                     TRISD           equ	136	;# 
   212     0089                     TRISE           equ	137	;# 
   213     008C                     PIE1            equ	140	;# 
   214     008D                     PIE2            equ	141	;# 
   215     008E                     PCON            equ	142	;# 
   216     0091                     SSPCON2         equ	145	;# 
   217     0092                     PR2             equ	146	;# 
   218     0093                     SSPADD          equ	147	;# 
   219     0094                     SSPSTAT         equ	148	;# 
   220     0098                     TXSTA           equ	152	;# 
   221     0099                     SPBRG           equ	153	;# 
   222     009C                     CMCON           equ	156	;# 
   223     009D                     CVRCON          equ	157	;# 
   224     009E                     ADRESL          equ	158	;# 
   225     009F                     ADCON1          equ	159	;# 
   226     010C                     EEDATA          equ	268	;# 
   227     010D                     EEADR           equ	269	;# 
   228     010E                     EEDATH          equ	270	;# 
   229     010F                     EEADRH          equ	271	;# 
   230     018C                     EECON1          equ	396	;# 
   231     018D                     EECON2          equ	397	;# 
   232     0000                     INDF            equ	0	;# 
   233     0001                     TMR0            equ	1	;# 
   234     0002                     PCL             equ	2	;# 
   235     0003                     STATUS          equ	3	;# 
   236     0004                     FSR             equ	4	;# 
   237     0005                     PORTA           equ	5	;# 
   238     0006                     PORTB           equ	6	;# 
   239     0007                     PORTC           equ	7	;# 
   240     0008                     PORTD           equ	8	;# 
   241     0009                     PORTE           equ	9	;# 
   242     000A                     PCLATH          equ	10	;# 
   243     000B                     INTCON          equ	11	;# 
   244     000C                     PIR1            equ	12	;# 
   245     000D                     PIR2            equ	13	;# 
   246     000E                     TMR1            equ	14	;# 
   247     000E                     TMR1L           equ	14	;# 
   248     000F                     TMR1H           equ	15	;# 
   249     0010                     T1CON           equ	16	;# 
   250     0011                     TMR2            equ	17	;# 
   251     0012                     T2CON           equ	18	;# 
   252     0013                     SSPBUF          equ	19	;# 
   253     0014                     SSPCON          equ	20	;# 
   254     0015                     CCPR1           equ	21	;# 
   255     0015                     CCPR1L          equ	21	;# 
   256     0016                     CCPR1H          equ	22	;# 
   257     0017                     CCP1CON         equ	23	;# 
   258     0018                     RCSTA           equ	24	;# 
   259     0019                     TXREG           equ	25	;# 
   260     001A                     RCREG           equ	26	;# 
   261     001B                     CCPR2           equ	27	;# 
   262     001B                     CCPR2L          equ	27	;# 
   263     001C                     CCPR2H          equ	28	;# 
   264     001D                     CCP2CON         equ	29	;# 
   265     001E                     ADRESH          equ	30	;# 
   266     001F                     ADCON0          equ	31	;# 
   267     0081                     OPTION_REG      equ	129	;# 
   268     0085                     TRISA           equ	133	;# 
   269     0086                     TRISB           equ	134	;# 
   270     0087                     TRISC           equ	135	;# 
   271     0088                     TRISD           equ	136	;# 
   272     0089                     TRISE           equ	137	;# 
   273     008C                     PIE1            equ	140	;# 
   274     008D                     PIE2            equ	141	;# 
   275     008E                     PCON            equ	142	;# 
   276     0091                     SSPCON2         equ	145	;# 
   277     0092                     PR2             equ	146	;# 
   278     0093                     SSPADD          equ	147	;# 
   279     0094                     SSPSTAT         equ	148	;# 
   280     0098                     TXSTA           equ	152	;# 
   281     0099                     SPBRG           equ	153	;# 
   282     009C                     CMCON           equ	156	;# 
   283     009D                     CVRCON          equ	157	;# 
   284     009E                     ADRESL          equ	158	;# 
   285     009F                     ADCON1          equ	159	;# 
   286     010C                     EEDATA          equ	268	;# 
   287     010D                     EEADR           equ	269	;# 
   288     010E                     EEDATH          equ	270	;# 
   289     010F                     EEADRH          equ	271	;# 
   290     018C                     EECON1          equ	396	;# 
   291     018D                     EECON2          equ	397	;# 
   292     0000                     INDF            equ	0	;# 
   293     0001                     TMR0            equ	1	;# 
   294     0002                     PCL             equ	2	;# 
   295     0003                     STATUS          equ	3	;# 
   296     0004                     FSR             equ	4	;# 
   297     0005                     PORTA           equ	5	;# 
   298     0006                     PORTB           equ	6	;# 
   299     0007                     PORTC           equ	7	;# 
   300     0008                     PORTD           equ	8	;# 
   301     0009                     PORTE           equ	9	;# 
   302     000A                     PCLATH          equ	10	;# 
   303     000B                     INTCON          equ	11	;# 
   304     000C                     PIR1            equ	12	;# 
   305     000D                     PIR2            equ	13	;# 
   306     000E                     TMR1            equ	14	;# 
   307     000E                     TMR1L           equ	14	;# 
   308     000F                     TMR1H           equ	15	;# 
   309     0010                     T1CON           equ	16	;# 
   310     0011                     TMR2            equ	17	;# 
   311     0012                     T2CON           equ	18	;# 
   312     0013                     SSPBUF          equ	19	;# 
   313     0014                     SSPCON          equ	20	;# 
   314     0015                     CCPR1           equ	21	;# 
   315     0015                     CCPR1L          equ	21	;# 
   316     0016                     CCPR1H          equ	22	;# 
   317     0017                     CCP1CON         equ	23	;# 
   318     0018                     RCSTA           equ	24	;# 
   319     0019                     TXREG           equ	25	;# 
   320     001A                     RCREG           equ	26	;# 
   321     001B                     CCPR2           equ	27	;# 
   322     001B                     CCPR2L          equ	27	;# 
   323     001C                     CCPR2H          equ	28	;# 
   324     001D                     CCP2CON         equ	29	;# 
   325     001E                     ADRESH          equ	30	;# 
   326     001F                     ADCON0          equ	31	;# 
   327     0081                     OPTION_REG      equ	129	;# 
   328     0085                     TRISA           equ	133	;# 
   329     0086                     TRISB           equ	134	;# 
   330     0087                     TRISC           equ	135	;# 
   331     0088                     TRISD           equ	136	;# 
   332     0089                     TRISE           equ	137	;# 
   333     008C                     PIE1            equ	140	;# 
   334     008D                     PIE2            equ	141	;# 
   335     008E                     PCON            equ	142	;# 
   336     0091                     SSPCON2         equ	145	;# 
   337     0092                     PR2             equ	146	;# 
   338     0093                     SSPADD          equ	147	;# 
   339     0094                     SSPSTAT         equ	148	;# 
   340     0098                     TXSTA           equ	152	;# 
   341     0099                     SPBRG           equ	153	;# 
   342     009C                     CMCON           equ	156	;# 
   343     009D                     CVRCON          equ	157	;# 
   344     009E                     ADRESL          equ	158	;# 
   345     009F                     ADCON1          equ	159	;# 
   346     010C                     EEDATA          equ	268	;# 
   347     010D                     EEADR           equ	269	;# 
   348     010E                     EEDATH          equ	270	;# 
   349     010F                     EEADRH          equ	271	;# 
   350     018C                     EECON1          equ	396	;# 
   351     018D                     EECON2          equ	397	;# 
   352     0000                     INDF            equ	0	;# 
   353     0001                     TMR0            equ	1	;# 
   354     0002                     PCL             equ	2	;# 
   355     0003                     STATUS          equ	3	;# 
   356     0004                     FSR             equ	4	;# 
   357     0005                     PORTA           equ	5	;# 
   358     0006                     PORTB           equ	6	;# 
   359     0007                     PORTC           equ	7	;# 
   360     0008                     PORTD           equ	8	;# 
   361     0009                     PORTE           equ	9	;# 
   362     000A                     PCLATH          equ	10	;# 
   363     000B                     INTCON          equ	11	;# 
   364     000C                     PIR1            equ	12	;# 
   365     000D                     PIR2            equ	13	;# 
   366     000E                     TMR1            equ	14	;# 
   367     000E                     TMR1L           equ	14	;# 
   368     000F                     TMR1H           equ	15	;# 
   369     0010                     T1CON           equ	16	;# 
   370     0011                     TMR2            equ	17	;# 
   371     0012                     T2CON           equ	18	;# 
   372     0013                     SSPBUF          equ	19	;# 
   373     0014                     SSPCON          equ	20	;# 
   374     0015                     CCPR1           equ	21	;# 
   375     0015                     CCPR1L          equ	21	;# 
   376     0016                     CCPR1H          equ	22	;# 
   377     0017                     CCP1CON         equ	23	;# 
   378     0018                     RCSTA           equ	24	;# 
   379     0019                     TXREG           equ	25	;# 
   380     001A                     RCREG           equ	26	;# 
   381     001B                     CCPR2           equ	27	;# 
   382     001B                     CCPR2L          equ	27	;# 
   383     001C                     CCPR2H          equ	28	;# 
   384     001D                     CCP2CON         equ	29	;# 
   385     001E                     ADRESH          equ	30	;# 
   386     001F                     ADCON0          equ	31	;# 
   387     0081                     OPTION_REG      equ	129	;# 
   388     0085                     TRISA           equ	133	;# 
   389     0086                     TRISB           equ	134	;# 
   390     0087                     TRISC           equ	135	;# 
   391     0088                     TRISD           equ	136	;# 
   392     0089                     TRISE           equ	137	;# 
   393     008C                     PIE1            equ	140	;# 
   394     008D                     PIE2            equ	141	;# 
   395     008E                     PCON            equ	142	;# 
   396     0091                     SSPCON2         equ	145	;# 
   397     0092                     PR2             equ	146	;# 
   398     0093                     SSPADD          equ	147	;# 
   399     0094                     SSPSTAT         equ	148	;# 
   400     0098                     TXSTA           equ	152	;# 
   401     0099                     SPBRG           equ	153	;# 
   402     009C                     CMCON           equ	156	;# 
   403     009D                     CVRCON          equ	157	;# 
   404     009E                     ADRESL          equ	158	;# 
   405     009F                     ADCON1          equ	159	;# 
   406     010C                     EEDATA          equ	268	;# 
   407     010D                     EEADR           equ	269	;# 
   408     010E                     EEDATH          equ	270	;# 
   409     010F                     EEADRH          equ	271	;# 
   410     018C                     EECON1          equ	396	;# 
   411     018D                     EECON2          equ	397	;# 
   412     0000                     INDF            equ	0	;# 
   413     0001                     TMR0            equ	1	;# 
   414     0002                     PCL             equ	2	;# 
   415     0003                     STATUS          equ	3	;# 
   416     0004                     FSR             equ	4	;# 
   417     0005                     PORTA           equ	5	;# 
   418     0006                     PORTB           equ	6	;# 
   419     0007                     PORTC           equ	7	;# 
   420     0008                     PORTD           equ	8	;# 
   421     0009                     PORTE           equ	9	;# 
   422     000A                     PCLATH          equ	10	;# 
   423     000B                     INTCON          equ	11	;# 
   424     000C                     PIR1            equ	12	;# 
   425     000D                     PIR2            equ	13	;# 
   426     000E                     TMR1            equ	14	;# 
   427     000E                     TMR1L           equ	14	;# 
   428     000F                     TMR1H           equ	15	;# 
   429     0010                     T1CON           equ	16	;# 
   430     0011                     TMR2            equ	17	;# 
   431     0012                     T2CON           equ	18	;# 
   432     0013                     SSPBUF          equ	19	;# 
   433     0014                     SSPCON          equ	20	;# 
   434     0015                     CCPR1           equ	21	;# 
   435     0015                     CCPR1L          equ	21	;# 
   436     0016                     CCPR1H          equ	22	;# 
   437     0017                     CCP1CON         equ	23	;# 
   438     0018                     RCSTA           equ	24	;# 
   439     0019                     TXREG           equ	25	;# 
   440     001A                     RCREG           equ	26	;# 
   441     001B                     CCPR2           equ	27	;# 
   442     001B                     CCPR2L          equ	27	;# 
   443     001C                     CCPR2H          equ	28	;# 
   444     001D                     CCP2CON         equ	29	;# 
   445     001E                     ADRESH          equ	30	;# 
   446     001F                     ADCON0          equ	31	;# 
   447     0081                     OPTION_REG      equ	129	;# 
   448     0085                     TRISA           equ	133	;# 
   449     0086                     TRISB           equ	134	;# 
   450     0087                     TRISC           equ	135	;# 
   451     0088                     TRISD           equ	136	;# 
   452     0089                     TRISE           equ	137	;# 
   453     008C                     PIE1            equ	140	;# 
   454     008D                     PIE2            equ	141	;# 
   455     008E                     PCON            equ	142	;# 
   456     0091                     SSPCON2         equ	145	;# 
   457     0092                     PR2             equ	146	;# 
   458     0093                     SSPADD          equ	147	;# 
   459     0094                     SSPSTAT         equ	148	;# 
   460     0098                     TXSTA           equ	152	;# 
   461     0099                     SPBRG           equ	153	;# 
   462     009C                     CMCON           equ	156	;# 
   463     009D                     CVRCON          equ	157	;# 
   464     009E                     ADRESL          equ	158	;# 
   465     009F                     ADCON1          equ	159	;# 
   466     010C                     EEDATA          equ	268	;# 
   467     010D                     EEADR           equ	269	;# 
   468     010E                     EEDATH          equ	270	;# 
   469     010F                     EEADRH          equ	271	;# 
   470     018C                     EECON1          equ	396	;# 
   471     018D                     EECON2          equ	397	;# 
   472     0000                     INDF            equ	0	;# 
   473     0001                     TMR0            equ	1	;# 
   474     0002                     PCL             equ	2	;# 
   475     0003                     STATUS          equ	3	;# 
   476     0004                     FSR             equ	4	;# 
   477     0005                     PORTA           equ	5	;# 
   478     0006                     PORTB           equ	6	;# 
   479     0007                     PORTC           equ	7	;# 
   480     0008                     PORTD           equ	8	;# 
   481     0009                     PORTE           equ	9	;# 
   482     000A                     PCLATH          equ	10	;# 
   483     000B                     INTCON          equ	11	;# 
   484     000C                     PIR1            equ	12	;# 
   485     000D                     PIR2            equ	13	;# 
   486     000E                     TMR1            equ	14	;# 
   487     000E                     TMR1L           equ	14	;# 
   488     000F                     TMR1H           equ	15	;# 
   489     0010                     T1CON           equ	16	;# 
   490     0011                     TMR2            equ	17	;# 
   491     0012                     T2CON           equ	18	;# 
   492     0013                     SSPBUF          equ	19	;# 
   493     0014                     SSPCON          equ	20	;# 
   494     0015                     CCPR1           equ	21	;# 
   495     0015                     CCPR1L          equ	21	;# 
   496     0016                     CCPR1H          equ	22	;# 
   497     0017                     CCP1CON         equ	23	;# 
   498     0018                     RCSTA           equ	24	;# 
   499     0019                     TXREG           equ	25	;# 
   500     001A                     RCREG           equ	26	;# 
   501     001B                     CCPR2           equ	27	;# 
   502     001B                     CCPR2L          equ	27	;# 
   503     001C                     CCPR2H          equ	28	;# 
   504     001D                     CCP2CON         equ	29	;# 
   505     001E                     ADRESH          equ	30	;# 
   506     001F                     ADCON0          equ	31	;# 
   507     0081                     OPTION_REG      equ	129	;# 
   508     0085                     TRISA           equ	133	;# 
   509     0086                     TRISB           equ	134	;# 
   510     0087                     TRISC           equ	135	;# 
   511     0088                     TRISD           equ	136	;# 
   512     0089                     TRISE           equ	137	;# 
   513     008C                     PIE1            equ	140	;# 
   514     008D                     PIE2            equ	141	;# 
   515     008E                     PCON            equ	142	;# 
   516     0091                     SSPCON2         equ	145	;# 
   517     0092                     PR2             equ	146	;# 
   518     0093                     SSPADD          equ	147	;# 
   519     0094                     SSPSTAT         equ	148	;# 
   520     0098                     TXSTA           equ	152	;# 
   521     0099                     SPBRG           equ	153	;# 
   522     009C                     CMCON           equ	156	;# 
   523     009D                     CVRCON          equ	157	;# 
   524     009E                     ADRESL          equ	158	;# 
   525     009F                     ADCON1          equ	159	;# 
   526     010C                     EEDATA          equ	268	;# 
   527     010D                     EEADR           equ	269	;# 
   528     010E                     EEDATH          equ	270	;# 
   529     010F                     EEADRH          equ	271	;# 
   530     018C                     EECON1          equ	396	;# 
   531     018D                     EECON2          equ	397	;# 
   532     0000                     INDF            equ	0	;# 
   533     0001                     TMR0            equ	1	;# 
   534     0002                     PCL             equ	2	;# 
   535     0003                     STATUS          equ	3	;# 
   536     0004                     FSR             equ	4	;# 
   537     0005                     PORTA           equ	5	;# 
   538     0006                     PORTB           equ	6	;# 
   539     0007                     PORTC           equ	7	;# 
   540     0008                     PORTD           equ	8	;# 
   541     0009                     PORTE           equ	9	;# 
   542     000A                     PCLATH          equ	10	;# 
   543     000B                     INTCON          equ	11	;# 
   544     000C                     PIR1            equ	12	;# 
   545     000D                     PIR2            equ	13	;# 
   546     000E                     TMR1            equ	14	;# 
   547     000E                     TMR1L           equ	14	;# 
   548     000F                     TMR1H           equ	15	;# 
   549     0010                     T1CON           equ	16	;# 
   550     0011                     TMR2            equ	17	;# 
   551     0012                     T2CON           equ	18	;# 
   552     0013                     SSPBUF          equ	19	;# 
   553     0014                     SSPCON          equ	20	;# 
   554     0015                     CCPR1           equ	21	;# 
   555     0015                     CCPR1L          equ	21	;# 
   556     0016                     CCPR1H          equ	22	;# 
   557     0017                     CCP1CON         equ	23	;# 
   558     0018                     RCSTA           equ	24	;# 
   559     0019                     TXREG           equ	25	;# 
   560     001A                     RCREG           equ	26	;# 
   561     001B                     CCPR2           equ	27	;# 
   562     001B                     CCPR2L          equ	27	;# 
   563     001C                     CCPR2H          equ	28	;# 
   564     001D                     CCP2CON         equ	29	;# 
   565     001E                     ADRESH          equ	30	;# 
   566     001F                     ADCON0          equ	31	;# 
   567     0081                     OPTION_REG      equ	129	;# 
   568     0085                     TRISA           equ	133	;# 
   569     0086                     TRISB           equ	134	;# 
   570     0087                     TRISC           equ	135	;# 
   571     0088                     TRISD           equ	136	;# 
   572     0089                     TRISE           equ	137	;# 
   573     008C                     PIE1            equ	140	;# 
   574     008D                     PIE2            equ	141	;# 
   575     008E                     PCON            equ	142	;# 
   576     0091                     SSPCON2         equ	145	;# 
   577     0092                     PR2             equ	146	;# 
   578     0093                     SSPADD          equ	147	;# 
   579     0094                     SSPSTAT         equ	148	;# 
   580     0098                     TXSTA           equ	152	;# 
   581     0099                     SPBRG           equ	153	;# 
   582     009C                     CMCON           equ	156	;# 
   583     009D                     CVRCON          equ	157	;# 
   584     009E                     ADRESL          equ	158	;# 
   585     009F                     ADCON1          equ	159	;# 
   586     010C                     EEDATA          equ	268	;# 
   587     010D                     EEADR           equ	269	;# 
   588     010E                     EEDATH          equ	270	;# 
   589     010F                     EEADRH          equ	271	;# 
   590     018C                     EECON1          equ	396	;# 
   591     018D                     EECON2          equ	397	;# 
   592     0000                     INDF            equ	0	;# 
   593     0001                     TMR0            equ	1	;# 
   594     0002                     PCL             equ	2	;# 
   595     0003                     STATUS          equ	3	;# 
   596     0004                     FSR             equ	4	;# 
   597     0005                     PORTA           equ	5	;# 
   598     0006                     PORTB           equ	6	;# 
   599     0007                     PORTC           equ	7	;# 
   600     0008                     PORTD           equ	8	;# 
   601     0009                     PORTE           equ	9	;# 
   602     000A                     PCLATH          equ	10	;# 
   603     000B                     INTCON          equ	11	;# 
   604     000C                     PIR1            equ	12	;# 
   605     000D                     PIR2            equ	13	;# 
   606     000E                     TMR1            equ	14	;# 
   607     000E                     TMR1L           equ	14	;# 
   608     000F                     TMR1H           equ	15	;# 
   609     0010                     T1CON           equ	16	;# 
   610     0011                     TMR2            equ	17	;# 
   611     0012                     T2CON           equ	18	;# 
   612     0013                     SSPBUF          equ	19	;# 
   613     0014                     SSPCON          equ	20	;# 
   614     0015                     CCPR1           equ	21	;# 
   615     0015                     CCPR1L          equ	21	;# 
   616     0016                     CCPR1H          equ	22	;# 
   617     0017                     CCP1CON         equ	23	;# 
   618     0018                     RCSTA           equ	24	;# 
   619     0019                     TXREG           equ	25	;# 
   620     001A                     RCREG           equ	26	;# 
   621     001B                     CCPR2           equ	27	;# 
   622     001B                     CCPR2L          equ	27	;# 
   623     001C                     CCPR2H          equ	28	;# 
   624     001D                     CCP2CON         equ	29	;# 
   625     001E                     ADRESH          equ	30	;# 
   626     001F                     ADCON0          equ	31	;# 
   627     0081                     OPTION_REG      equ	129	;# 
   628     0085                     TRISA           equ	133	;# 
   629     0086                     TRISB           equ	134	;# 
   630     0087                     TRISC           equ	135	;# 
   631     0088                     TRISD           equ	136	;# 
   632     0089                     TRISE           equ	137	;# 
   633     008C                     PIE1            equ	140	;# 
   634     008D                     PIE2            equ	141	;# 
   635     008E                     PCON            equ	142	;# 
   636     0091                     SSPCON2         equ	145	;# 
   637     0092                     PR2             equ	146	;# 
   638     0093                     SSPADD          equ	147	;# 
   639     0094                     SSPSTAT         equ	148	;# 
   640     0098                     TXSTA           equ	152	;# 
   641     0099                     SPBRG           equ	153	;# 
   642     009C                     CMCON           equ	156	;# 
   643     009D                     CVRCON          equ	157	;# 
   644     009E                     ADRESL          equ	158	;# 
   645     009F                     ADCON1          equ	159	;# 
   646     010C                     EEDATA          equ	268	;# 
   647     010D                     EEADR           equ	269	;# 
   648     010E                     EEDATH          equ	270	;# 
   649     010F                     EEADRH          equ	271	;# 
   650     018C                     EECON1          equ	396	;# 
   651     018D                     EECON2          equ	397	;# 
   652     0000                     INDF            equ	0	;# 
   653     0001                     TMR0            equ	1	;# 
   654     0002                     PCL             equ	2	;# 
   655     0003                     STATUS          equ	3	;# 
   656     0004                     FSR             equ	4	;# 
   657     0005                     PORTA           equ	5	;# 
   658     0006                     PORTB           equ	6	;# 
   659     0007                     PORTC           equ	7	;# 
   660     0008                     PORTD           equ	8	;# 
   661     0009                     PORTE           equ	9	;# 
   662     000A                     PCLATH          equ	10	;# 
   663     000B                     INTCON          equ	11	;# 
   664     000C                     PIR1            equ	12	;# 
   665     000D                     PIR2            equ	13	;# 
   666     000E                     TMR1            equ	14	;# 
   667     000E                     TMR1L           equ	14	;# 
   668     000F                     TMR1H           equ	15	;# 
   669     0010                     T1CON           equ	16	;# 
   670     0011                     TMR2            equ	17	;# 
   671     0012                     T2CON           equ	18	;# 
   672     0013                     SSPBUF          equ	19	;# 
   673     0014                     SSPCON          equ	20	;# 
   674     0015                     CCPR1           equ	21	;# 
   675     0015                     CCPR1L          equ	21	;# 
   676     0016                     CCPR1H          equ	22	;# 
   677     0017                     CCP1CON         equ	23	;# 
   678     0018                     RCSTA           equ	24	;# 
   679     0019                     TXREG           equ	25	;# 
   680     001A                     RCREG           equ	26	;# 
   681     001B                     CCPR2           equ	27	;# 
   682     001B                     CCPR2L          equ	27	;# 
   683     001C                     CCPR2H          equ	28	;# 
   684     001D                     CCP2CON         equ	29	;# 
   685     001E                     ADRESH          equ	30	;# 
   686     001F                     ADCON0          equ	31	;# 
   687     0081                     OPTION_REG      equ	129	;# 
   688     0085                     TRISA           equ	133	;# 
   689     0086                     TRISB           equ	134	;# 
   690     0087                     TRISC           equ	135	;# 
   691     0088                     TRISD           equ	136	;# 
   692     0089                     TRISE           equ	137	;# 
   693     008C                     PIE1            equ	140	;# 
   694     008D                     PIE2            equ	141	;# 
   695     008E                     PCON            equ	142	;# 
   696     0091                     SSPCON2         equ	145	;# 
   697     0092                     PR2             equ	146	;# 
   698     0093                     SSPADD          equ	147	;# 
   699     0094                     SSPSTAT         equ	148	;# 
   700     0098                     TXSTA           equ	152	;# 
   701     0099                     SPBRG           equ	153	;# 
   702     009C                     CMCON           equ	156	;# 
   703     009D                     CVRCON          equ	157	;# 
   704     009E                     ADRESL          equ	158	;# 
   705     009F                     ADCON1          equ	159	;# 
   706     010C                     EEDATA          equ	268	;# 
   707     010D                     EEADR           equ	269	;# 
   708     010E                     EEDATH          equ	270	;# 
   709     010F                     EEADRH          equ	271	;# 
   710     018C                     EECON1          equ	396	;# 
   711     018D                     EECON2          equ	397	;# 
   712     0000                     INDF            equ	0	;# 
   713     0001                     TMR0            equ	1	;# 
   714     0002                     PCL             equ	2	;# 
   715     0003                     STATUS          equ	3	;# 
   716     0004                     FSR             equ	4	;# 
   717     0005                     PORTA           equ	5	;# 
   718     0006                     PORTB           equ	6	;# 
   719     0007                     PORTC           equ	7	;# 
   720     0008                     PORTD           equ	8	;# 
   721     0009                     PORTE           equ	9	;# 
   722     000A                     PCLATH          equ	10	;# 
   723     000B                     INTCON          equ	11	;# 
   724     000C                     PIR1            equ	12	;# 
   725     000D                     PIR2            equ	13	;# 
   726     000E                     TMR1            equ	14	;# 
   727     000E                     TMR1L           equ	14	;# 
   728     000F                     TMR1H           equ	15	;# 
   729     0010                     T1CON           equ	16	;# 
   730     0011                     TMR2            equ	17	;# 
   731     0012                     T2CON           equ	18	;# 
   732     0013                     SSPBUF          equ	19	;# 
   733     0014                     SSPCON          equ	20	;# 
   734     0015                     CCPR1           equ	21	;# 
   735     0015                     CCPR1L          equ	21	;# 
   736     0016                     CCPR1H          equ	22	;# 
   737     0017                     CCP1CON         equ	23	;# 
   738     0018                     RCSTA           equ	24	;# 
   739     0019                     TXREG           equ	25	;# 
   740     001A                     RCREG           equ	26	;# 
   741     001B                     CCPR2           equ	27	;# 
   742     001B                     CCPR2L          equ	27	;# 
   743     001C                     CCPR2H          equ	28	;# 
   744     001D                     CCP2CON         equ	29	;# 
   745     001E                     ADRESH          equ	30	;# 
   746     001F                     ADCON0          equ	31	;# 
   747     0081                     OPTION_REG      equ	129	;# 
   748     0085                     TRISA           equ	133	;# 
   749     0086                     TRISB           equ	134	;# 
   750     0087                     TRISC           equ	135	;# 
   751     0088                     TRISD           equ	136	;# 
   752     0089                     TRISE           equ	137	;# 
   753     008C                     PIE1            equ	140	;# 
   754     008D                     PIE2            equ	141	;# 
   755     008E                     PCON            equ	142	;# 
   756     0091                     SSPCON2         equ	145	;# 
   757     0092                     PR2             equ	146	;# 
   758     0093                     SSPADD          equ	147	;# 
   759     0094                     SSPSTAT         equ	148	;# 
   760     0098                     TXSTA           equ	152	;# 
   761     0099                     SPBRG           equ	153	;# 
   762     009C                     CMCON           equ	156	;# 
   763     009D                     CVRCON          equ	157	;# 
   764     009E                     ADRESL          equ	158	;# 
   765     009F                     ADCON1          equ	159	;# 
   766     010C                     EEDATA          equ	268	;# 
   767     010D                     EEADR           equ	269	;# 
   768     010E                     EEDATH          equ	270	;# 
   769     010F                     EEADRH          equ	271	;# 
   770     018C                     EECON1          equ	396	;# 
   771     018D                     EECON2          equ	397	;# 
   772                           
   773                           	psect	idataBANK1
   774     15D3                     __pidataBANK1:
   775                           
   776                           ;initializer for main@F1244
   777     15D3  3442               	retlw	low (STR_1| (0+32768))
   778     15D4  3489               	retlw	high (STR_1| (0+32768))
   779     15D5  343C               	retlw	low (STR_2| (0+32768))
   780     15D6  3489               	retlw	high (STR_2| (0+32768))
   781     15D7  3430               	retlw	low (STR_3| (0+32768))
   782     15D8  3489               	retlw	high (STR_3| (0+32768))
   783     15D9  3433               	retlw	low (STR_4| (0+32768))
   784     15DA  3489               	retlw	high (STR_4| (0+32768))
   785     15DB  3436               	retlw	low (STR_5| (0+32768))
   786     15DC  3489               	retlw	high (STR_5| (0+32768))
   787     15DD  3439               	retlw	low (STR_6| (0+32768))
   788     15DE  3489               	retlw	high (STR_6| (0+32768))
   789                           
   790                           ;initializer for _menu
   791     15DF  340D               	retlw	low (STR_10| (0+32768))
   792     15E0  3489               	retlw	high (STR_10| (0+32768))
   793     15E1  34F0               	retlw	low (STR_11| (0+32768))
   794     15E2  3488               	retlw	high (STR_11| (0+32768))
   795     15E3  34BF               	retlw	low (STR_12| (0+32768))
   796     15E4  3488               	retlw	high (STR_12| (0+32768))
   797     15E5  3404               	retlw	low (STR_13| (0+32768))
   798     15E6  3489               	retlw	high (STR_13| (0+32768))
   799     15E7  3493               	retlw	low (STR_14| (0+32768))
   800     15E8  3488               	retlw	high (STR_14| (0+32768))
   801                           
   802                           ;initializer for main@F1242
   803     15E9  344F               	retlw	79
   804     15EA  344E               	retlw	78
   805     15EB  3400               	retlw	0
   806     0006                     _PORTB          set	6
   807     001E                     _ADRESH         set	30
   808     0013                     _SSPBUF         set	19
   809     0008                     _PORTD          set	8
   810     0091                     _T2CKPS1        set	145
   811     0090                     _T2CKPS0        set	144
   812     0061                     _TMR2IF         set	97
   813     00FA                     _nDONE          set	250
   814     00FA                     _GO             set	250
   815     00F8                     _ADON           set	248
   816     0092                     _TMR2ON         set	146
   817     005E                     _PEIE           set	94
   818     005F                     _GIE            set	95
   819     00A5                     _SSPEN          set	165
   820     00A3                     _SSPM3          set	163
   821     0049                     _RE1            set	73
   822     004A                     _RE2            set	74
   823     0092                     _PR2            set	146
   824     0086                     _TRISB          set	134
   825     009E                     _ADRESL         set	158
   826     0091                     _SSPCON2        set	145
   827     0093                     _SSPADD         set	147
   828     0088                     _TRISD          set	136
   829     0461                     _TMR2IE         set	1121
   830     04FF                     _ADFM           set	1279
   831     048E                     _ACKSTAT        set	1166
   832     048C                     _ACKEN          set	1164
   833     048D                     _ACKDT          set	1165
   834     048B                     _RCEN           set	1163
   835     048A                     _PEN            set	1162
   836     0488                     _SEN            set	1160
   837     04A2                     _R_nW           set	1186
   838     0449                     _TRISE1         set	1097
   839     044A                     _TRISE2         set	1098
   840                           
   841                           	psect	strings
   842     1000                     __pstrings:
   843     1000                     stringtab:
   844     1000                     __stringtab:
   845                           
   846                           ;	String table - string pointers are 2 bytes each
   847     1000  1BFF               	btfsc	btemp+1,7
   848     1001  280A               	ljmp	stringcode
   849     1002  1383               	bcf	3,7
   850     1003  187F               	btfsc	btemp+1,0
   851     1004  1783               	bsf	3,7
   852     1005  0800               	movf	0,w
   853     1006  0A84               	incf	4,f
   854     1007  1903               	skipnz
   855     1008  0AFF               	incf	btemp+1,f
   856     1009  0008               	return
   857     100A                     stringcode:
   858     100A  087F               	movf	btemp+1,w
   859     100B  397F               	andlw	127
   860     100C  008A               	movwf	10
   861     100D  0804               	movf	4,w
   862     100E  0A84               	incf	4,f
   863     100F  1903               	skipnz
   864     1010  0AFF               	incf	btemp+1,f
   865     1011  0082               	movwf	2
   866     1012                     __stringbase:
   867     1012                     __end_of__stringtab:
   868                           
   869                           	psect	stringtext
   870     0800                     __pstringtext:
   871     0800                     STR_29:
   872     0800  3420               	retlw	32	;' '
   873     0801  3420               	retlw	32	;' '
   874     0802  3420               	retlw	32	;' '
   875     0803  3420               	retlw	32	;' '
   876     0804  3420               	retlw	32	;' '
   877     0805  3420               	retlw	32	;' '
   878     0806  3420               	retlw	32	;' '
   879     0807  3420               	retlw	32	;' '
   880     0808  3420               	retlw	32	;' '
   881     0809  3420               	retlw	32	;' '
   882     080A  3420               	retlw	32	;' '
   883     080B  3420               	retlw	32	;' '
   884     080C  3420               	retlw	32	;' '
   885     080D  3420               	retlw	32	;' '
   886     080E  3420               	retlw	32	;' '
   887     080F  3420               	retlw	32	;' '
   888     0810  3420               	retlw	32	;' '
   889     0811  3400               	retlw	0
   890     0812                     STR_27:
   891     0812  3445               	retlw	69	;'E'
   892     0813  346E               	retlw	110	;'n'
   893     0814  3474               	retlw	116	;'t'
   894     0815  3465               	retlw	101	;'e'
   895     0816  3472               	retlw	114	;'r'
   896     0817  3420               	retlw	32	;' '
   897     0818  346E               	retlw	110	;'n'
   898     0819  3465               	retlw	101	;'e'
   899     081A  3477               	retlw	119	;'w'
   900     081B  3420               	retlw	32	;' '
   901     081C  3470               	retlw	112	;'p'
   902     081D  3477               	retlw	119	;'w'
   903     081E  3464               	retlw	100	;'d'
   904     081F  343A               	retlw	58	;':'
   905     0820  3420               	retlw	32	;' '
   906     0821  3420               	retlw	32	;' '
   907     0822  3400               	retlw	0
   908     0823                     STR_31:
   909     0823  3450               	retlw	80	;'P'
   910     0824  3461               	retlw	97	;'a'
   911     0825  3473               	retlw	115	;'s'
   912     0826  3473               	retlw	115	;'s'
   913     0827  3477               	retlw	119	;'w'
   914     0828  346F               	retlw	111	;'o'
   915     0829  3472               	retlw	114	;'r'
   916     082A  3464               	retlw	100	;'d'
   917     082B  3420               	retlw	32	;' '
   918     082C  3463               	retlw	99	;'c'
   919     082D  3468               	retlw	104	;'h'
   920     082E  3461               	retlw	97	;'a'
   921     082F  346E               	retlw	110	;'n'
   922     0830  3467               	retlw	103	;'g'
   923     0831  3465               	retlw	101	;'e'
   924     0832  3464               	retlw	100	;'d'
   925     0833  3400               	retlw	0
   926     0834                     STR_28:
   927     0834  3452               	retlw	82	;'R'
   928     0835  3465               	retlw	101	;'e'
   929     0836  342D               	retlw	45	;'-'
   930     0837  3465               	retlw	101	;'e'
   931     0838  346E               	retlw	110	;'n'
   932     0839  3474               	retlw	116	;'t'
   933     083A  3465               	retlw	101	;'e'
   934     083B  3472               	retlw	114	;'r'
   935     083C  3420               	retlw	32	;' '
   936     083D  346E               	retlw	110	;'n'
   937     083E  3465               	retlw	101	;'e'
   938     083F  3477               	retlw	119	;'w'
   939     0840  3420               	retlw	32	;' '
   940     0841  3470               	retlw	112	;'p'
   941     0842  3477               	retlw	119	;'w'
   942     0843  3464               	retlw	100	;'d'
   943     0844  3400               	retlw	0
   944     0845                     STR_33:
   945     0845  3450               	retlw	80	;'P'
   946     0846  3461               	retlw	97	;'a'
   947     0847  3473               	retlw	115	;'s'
   948     0848  3473               	retlw	115	;'s'
   949     0849  3477               	retlw	119	;'w'
   950     084A  346F               	retlw	111	;'o'
   951     084B  3472               	retlw	114	;'r'
   952     084C  3464               	retlw	100	;'d'
   953     084D  3420               	retlw	32	;' '
   954     084E  3420               	retlw	32	;' '
   955     084F  3463               	retlw	99	;'c'
   956     0850  3468               	retlw	104	;'h'
   957     0851  3461               	retlw	97	;'a'
   958     0852  346E               	retlw	110	;'n'
   959     0853  3467               	retlw	103	;'g'
   960     0854  3465               	retlw	101	;'e'
   961     0855  3400               	retlw	0
   962     0856                     STR_17:
   963     0856  3459               	retlw	89	;'Y'
   964     0857  346F               	retlw	111	;'o'
   965     0858  3475               	retlw	117	;'u'
   966     0859  3420               	retlw	32	;' '
   967     085A  3461               	retlw	97	;'a'
   968     085B  3472               	retlw	114	;'r'
   969     085C  3465               	retlw	101	;'e'
   970     085D  3420               	retlw	32	;' '
   971     085E  3462               	retlw	98	;'b'
   972     085F  346C               	retlw	108	;'l'
   973     0860  346F               	retlw	111	;'o'
   974     0861  3463               	retlw	99	;'c'
   975     0862  346B               	retlw	107	;'k'
   976     0863  3465               	retlw	101	;'e'
   977     0864  3464               	retlw	100	;'d'
   978     0865  3400               	retlw	0
   979     0866                     STR_16:
   980     0866  344C               	retlw	76	;'L'
   981     0867  346F               	retlw	111	;'o'
   982     0868  3467               	retlw	103	;'g'
   983     0869  3469               	retlw	105	;'i'
   984     086A  346E               	retlw	110	;'n'
   985     086B  3420               	retlw	32	;' '
   986     086C  3453               	retlw	83	;'S'
   987     086D  3475               	retlw	117	;'u'
   988     086E  3463               	retlw	99	;'c'
   989     086F  3463               	retlw	99	;'c'
   990     0870  3465               	retlw	101	;'e'
   991     0871  3473               	retlw	115	;'s'
   992     0872  3473               	retlw	115	;'s'
   993     0873  3421               	retlw	33	;'!'
   994     0874  3400               	retlw	0
   995     0875                     STR_15:
   996     0875  3454               	retlw	84	;'T'
   997     0876  3449               	retlw	73	;'I'
   998     0877  344D               	retlw	77	;'M'
   999     0878  3445               	retlw	69	;'E'
  1000     0879  3420               	retlw	32	;' '
  1001     087A  3420               	retlw	32	;' '
  1002     087B  3420               	retlw	32	;' '
  1003     087C  3420               	retlw	32	;' '
  1004     087D  3420               	retlw	32	;' '
  1005     087E  3445               	retlw	69	;'E'
  1006     087F  3420               	retlw	32	;' '
  1007     0880  3420               	retlw	32	;' '
  1008     0881  3453               	retlw	83	;'S'
  1009     0882  3450               	retlw	80	;'P'
  1010     0883  3400               	retlw	0
  1011     0884                     STR_20:
  1012     0884  3457               	retlw	87	;'W'
  1013     0885  3472               	retlw	114	;'r'
  1014     0886  346F               	retlw	111	;'o'
  1015     0887  346E               	retlw	110	;'n'
  1016     0888  3467               	retlw	103	;'g'
  1017     0889  3420               	retlw	32	;' '
  1018     088A  3470               	retlw	112	;'p'
  1019     088B  3461               	retlw	97	;'a'
  1020     088C  3473               	retlw	115	;'s'
  1021     088D  3473               	retlw	115	;'s'
  1022     088E  3477               	retlw	119	;'w'
  1023     088F  346F               	retlw	111	;'o'
  1024     0890  3472               	retlw	114	;'r'
  1025     0891  3464               	retlw	100	;'d'
  1026     0892  3400               	retlw	0
  1027     0893                     STR_14:
  1028     0893  3443               	retlw	67	;'C'
  1029     0894  3468               	retlw	104	;'h'
  1030     0895  3461               	retlw	97	;'a'
  1031     0896  346E               	retlw	110	;'n'
  1032     0897  3467               	retlw	103	;'g'
  1033     0898  3465               	retlw	101	;'e'
  1034     0899  3420               	retlw	32	;' '
  1035     089A  3470               	retlw	112	;'p'
  1036     089B  3461               	retlw	97	;'a'
  1037     089C  3473               	retlw	115	;'s'
  1038     089D  3473               	retlw	115	;'s'
  1039     089E  3477               	retlw	119	;'w'
  1040     089F  3472               	retlw	114	;'r'
  1041     08A0  3464               	retlw	100	;'d'
  1042     08A1  3400               	retlw	0
  1043     08A2                     STR_9:
  1044     08A2  3445               	retlw	69	;'E'
  1045     08A3  346E               	retlw	110	;'n'
  1046     08A4  3474               	retlw	116	;'t'
  1047     08A5  3465               	retlw	101	;'e'
  1048     08A6  3472               	retlw	114	;'r'
  1049     08A7  3420               	retlw	32	;' '
  1050     08A8  3450               	retlw	80	;'P'
  1051     08A9  3461               	retlw	97	;'a'
  1052     08AA  3473               	retlw	115	;'s'
  1053     08AB  3473               	retlw	115	;'s'
  1054     08AC  3477               	retlw	119	;'w'
  1055     08AD  346F               	retlw	111	;'o'
  1056     08AE  3472               	retlw	114	;'r'
  1057     08AF  3464               	retlw	100	;'d'
  1058     08B0  3400               	retlw	0
  1059     08B1                     STR_32:
  1060     08B1  3473               	retlw	115	;'s'
  1061     08B2  3475               	retlw	117	;'u'
  1062     08B3  3463               	retlw	99	;'c'
  1063     08B4  3463               	retlw	99	;'c'
  1064     08B5  3465               	retlw	101	;'e'
  1065     08B6  3473               	retlw	115	;'s'
  1066     08B7  3473               	retlw	115	;'s'
  1067     08B8  3466               	retlw	102	;'f'
  1068     08B9  3475               	retlw	117	;'u'
  1069     08BA  346C               	retlw	108	;'l'
  1070     08BB  346C               	retlw	108	;'l'
  1071     08BC  3479               	retlw	121	;'y'
  1072     08BD  3420               	retlw	32	;' '
  1073     08BE  3400               	retlw	0
  1074     08BF                     STR_12:
  1075     08BF  3444               	retlw	68	;'D'
  1076     08C0  346F               	retlw	111	;'o'
  1077     08C1  3477               	retlw	119	;'w'
  1078     08C2  346E               	retlw	110	;'n'
  1079     08C3  346C               	retlw	108	;'l'
  1080     08C4  346F               	retlw	111	;'o'
  1081     08C5  3461               	retlw	97	;'a'
  1082     08C6  3464               	retlw	100	;'d'
  1083     08C7  3420               	retlw	32	;' '
  1084     08C8  346C               	retlw	108	;'l'
  1085     08C9  346F               	retlw	111	;'o'
  1086     08CA  3467               	retlw	103	;'g'
  1087     08CB  3400               	retlw	0
  1088     08CC                     STR_21:
  1089     08CC  3461               	retlw	97	;'a'
  1090     08CD  3474               	retlw	116	;'t'
  1091     08CE  3474               	retlw	116	;'t'
  1092     08CF  3465               	retlw	101	;'e'
  1093     08D0  346D               	retlw	109	;'m'
  1094     08D1  3470               	retlw	112	;'p'
  1095     08D2  3474               	retlw	116	;'t'
  1096     08D3  3420               	retlw	32	;' '
  1097     08D4  346C               	retlw	108	;'l'
  1098     08D5  3465               	retlw	101	;'e'
  1099     08D6  3466               	retlw	102	;'f'
  1100     08D7  3474               	retlw	116	;'t'
  1101     08D8  3400               	retlw	0
  1102     08D9                     STR_24:
  1103     08D9  344C               	retlw	76	;'L'
  1104     08DA  346F               	retlw	111	;'o'
  1105     08DB  3467               	retlw	103	;'g'
  1106     08DC  3467               	retlw	103	;'g'
  1107     08DD  3465               	retlw	101	;'e'
  1108     08DE  3464               	retlw	100	;'d'
  1109     08DF  3420               	retlw	32	;' '
  1110     08E0  3464               	retlw	100	;'d'
  1111     08E1  3461               	retlw	97	;'a'
  1112     08E2  3474               	retlw	116	;'t'
  1113     08E3  3461               	retlw	97	;'a'
  1114     08E4  3400               	retlw	0
  1115     08E5                     STR_25:
  1116     08E5  3463               	retlw	99	;'c'
  1117     08E6  346C               	retlw	108	;'l'
  1118     08E7  3465               	retlw	101	;'e'
  1119     08E8  3461               	retlw	97	;'a'
  1120     08E9  3472               	retlw	114	;'r'
  1121     08EA  3465               	retlw	101	;'e'
  1122     08EB  3464               	retlw	100	;'d'
  1123     08EC  342E               	retlw	46	;'.'
  1124     08ED  342E               	retlw	46	;'.'
  1125     08EE  3421               	retlw	33	;'!'
  1126     08EF  3400               	retlw	0
  1127     08F0                     STR_11:
  1128     08F0  3443               	retlw	67	;'C'
  1129     08F1  346C               	retlw	108	;'l'
  1130     08F2  3465               	retlw	101	;'e'
  1131     08F3  3461               	retlw	97	;'a'
  1132     08F4  3472               	retlw	114	;'r'
  1133     08F5  3420               	retlw	32	;' '
  1134     08F6  346C               	retlw	108	;'l'
  1135     08F7  346F               	retlw	111	;'o'
  1136     08F8  3467               	retlw	103	;'g'
  1137     08F9  3400               	retlw	0
  1138     08FA                     STR_23:
  1139     08FA  3456               	retlw	86	;'V'
  1140     08FB  3469               	retlw	105	;'i'
  1141     08FC  3465               	retlw	101	;'e'
  1142     08FD  3477               	retlw	119	;'w'
  1143     08FE  3420               	retlw	32	;' '
  1144     08FF  346C               	retlw	108	;'l'
  1145     0900  346F               	retlw	111	;'o'
  1146     0901  3467               	retlw	103	;'g'
  1147     0902  3473               	retlw	115	;'s'
  1148     0903  3400               	retlw	0
  1149     0904                     STR_13:
  1150     0904  3453               	retlw	83	;'S'
  1151     0905  3465               	retlw	101	;'e'
  1152     0906  3474               	retlw	116	;'t'
  1153     0907  3420               	retlw	32	;' '
  1154     0908  3474               	retlw	116	;'t'
  1155     0909  3469               	retlw	105	;'i'
  1156     090A  346D               	retlw	109	;'m'
  1157     090B  3465               	retlw	101	;'e'
  1158     090C  3400               	retlw	0
  1159     090D                     STR_10:
  1160     090D  3456               	retlw	86	;'V'
  1161     090E  3469               	retlw	105	;'i'
  1162     090F  3465               	retlw	101	;'e'
  1163     0910  3477               	retlw	119	;'w'
  1164     0911  3420               	retlw	32	;' '
  1165     0912  346C               	retlw	108	;'l'
  1166     0913  346F               	retlw	111	;'o'
  1167     0914  3467               	retlw	103	;'g'
  1168     0915  3400               	retlw	0
  1169     0916                     STR_18:
  1170     0916  3457               	retlw	87	;'W'
  1171     0917  3461               	retlw	97	;'a'
  1172     0918  3469               	retlw	105	;'i'
  1173     0919  3474               	retlw	116	;'t'
  1174     091A  3420               	retlw	32	;' '
  1175     091B  3466               	retlw	102	;'f'
  1176     091C  346F               	retlw	111	;'o'
  1177     091D  3472               	retlw	114	;'r'
  1178     091E  3400               	retlw	0
  1179     091F                     STR_34:
  1180     091F  3466               	retlw	102	;'f'
  1181     0920  3461               	retlw	97	;'a'
  1182     0921  3469               	retlw	105	;'i'
  1183     0922  346C               	retlw	108	;'l'
  1184     0923  3465               	retlw	101	;'e'
  1185     0924  3464               	retlw	100	;'d'
  1186     0925  3400               	retlw	0
  1187     0926                     STR_19:
  1188     0926  3473               	retlw	115	;'s'
  1189     0927  3465               	retlw	101	;'e'
  1190     0928  3463               	retlw	99	;'c'
  1191     0929  3473               	retlw	115	;'s'
  1192     092A  3400               	retlw	0
  1193     092B                     STR_7:
  1194     092B  3431               	retlw	49	;'1'
  1195     092C  3430               	retlw	48	;'0'
  1196     092D  3430               	retlw	48	;'0'
  1197     092E  3431               	retlw	49	;'1'
  1198     092F  3400               	retlw	0
  1199     0930                     STR_3:
  1200     0930  3447               	retlw	71	;'G'
  1201     0931  3431               	retlw	49	;'1'
  1202     0932  3400               	retlw	0
  1203     0933                     STR_4:
  1204     0933  3447               	retlw	71	;'G'
  1205     0934  3432               	retlw	50	;'2'
  1206     0935  3400               	retlw	0
  1207     0936                     STR_5:
  1208     0936  3447               	retlw	71	;'G'
  1209     0937  3433               	retlw	51	;'3'
  1210     0938  3400               	retlw	0
  1211     0939                     STR_6:
  1212     0939  3447               	retlw	71	;'G'
  1213     093A  3434               	retlw	52	;'4'
  1214     093B  3400               	retlw	0
  1215     093C                     STR_2:
  1216     093C  3447               	retlw	71	;'G'
  1217     093D  344E               	retlw	78	;'N'
  1218     093E  3400               	retlw	0
  1219     093F                     STR_8:
  1220     093F  3443               	retlw	67	;'C'
  1221     0940  344F               	retlw	79	;'O'
  1222     0941  3400               	retlw	0
  1223     0942                     STR_1:
  1224     0942  3447               	retlw	71	;'G'
  1225     0943  3452               	retlw	82	;'R'
  1226     0944  3400               	retlw	0
  1227     08A2                     STR_22          equ	STR_9
  1228     0800                     STR_30          equ	STR_29
  1229     080D                     STR_26          equ	STR_29+13
  1230                           
  1231                           	psect	cinit
  1232     000F                     start_initialization:	
  1233                           ; #config settings
  1234                           
  1235     000F                     __initialization:
  1236                           
  1237                           ; Initialize objects allocated to BANK1
  1238     000F  1383               	bcf	3,7	;select IRP bank0
  1239     0010  30DF               	movlw	low (__pdataBANK1+25)
  1240     0011  00FD               	movwf	btemp+-1
  1241     0012  3015               	movlw	high __pidataBANK1
  1242     0013  00FE               	movwf	btemp
  1243     0014  30D3               	movlw	low __pidataBANK1
  1244     0015  00FF               	movwf	btemp+1
  1245     0016  30C6               	movlw	low __pdataBANK1
  1246     0017  0084               	movwf	4
  1247     0018  160A  118A  25AF  120A  118A  	fcall	init_ram0
  1248                           
  1249                           ; Clear objects allocated to BANK1
  1250     001D  30A0               	movlw	low __pbssBANK1
  1251     001E  0084               	movwf	4
  1252     001F  30C6               	movlw	low (__pbssBANK1+38)
  1253     0020  160A  118A  251B  120A  118A  	fcall	clear_ram0
  1254                           
  1255                           ; Clear objects allocated to BANK0
  1256     0025  3052               	movlw	low __pbssBANK0
  1257     0026  0084               	movwf	4
  1258     0027  305C               	movlw	low (__pbssBANK0+10)
  1259     0028  160A  118A  251B  120A  118A  	fcall	clear_ram0
  1260                           
  1261                           ; Clear objects allocated to COMMON
  1262     002D  01FA               	clrf	__pbssCOMMON& (0+127)
  1263     002E  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1264     002F                     end_of_initialization:	
  1265                           ;End of C runtime variable initialization code
  1266                           
  1267     002F                     __end_of__initialization:
  1268     002F  0183               	clrf	3
  1269     0030  120A  118A  2833   	ljmp	_main	;jump to C main() function
  1270                           
  1271                           	psect	bssCOMMON
  1272     007A                     __pbssCOMMON:
  1273     007A                     change_password@pwd_pos:
  1274     007A                     	ds	1
  1275     007B                     read_digital_keypad@once:
  1276     007B                     	ds	1
  1277                           
  1278                           	psect	bssBANK0
  1279     0052                     __pbssBANK0:
  1280     0052                     change_password@toggle_cursor:
  1281     0052                     	ds	1
  1282     0053                     view_log@log_pos:
  1283     0053                     	ds	1
  1284     0054                     menu_screen@menu_pos:
  1285     0054                     	ds	1
  1286     0055                     login@attempt_left:
  1287     0055                     	ds	1
  1288     0056                     login@i:
  1289     0056                     	ds	1
  1290     0057                     _log_count:
  1291     0057                     	ds	1
  1292     0058                     _sec:
  1293     0058                     	ds	1
  1294     0059                     _return_time:
  1295     0059                     	ds	1
  1296     005A                     read_digital_keypad@long_press:
  1297     005A                     	ds	1
  1298     005B                     read_digital_keypad@pre_key:
  1299     005B                     	ds	1
  1300                           
  1301                           	psect	bssBANK1
  1302     00A0                     __pbssBANK1:
  1303     00A0                     _clock_reg:
  1304     00A0                     	ds	3
  1305     00A3                     isr@count:
  1306     00A3                     	ds	2
  1307     00A5                     change_password@blink_delay:
  1308     00A5                     	ds	1
  1309     00A6                     change_password@pwd_changed:
  1310     00A6                     	ds	1
  1311     00A7                     _log:
  1312     00A7                     	ds	11
  1313     00B2                     change_password@new_pwd:
  1314     00B2                     	ds	9
  1315     00BB                     _time:
  1316     00BB                     	ds	7
  1317     00C2                     login@user_password:
  1318     00C2                     	ds	4
  1319                           
  1320                           	psect	dataBANK1
  1321     00C6                     __pdataBANK1:
  1322     00C6                     main@F1244:
  1323     00C6                     	ds	12
  1324     00D2                     _menu:
  1325     00D2                     	ds	10
  1326     00DC                     main@F1242:
  1327     00DC                     	ds	3
  1328                           
  1329                           	psect	inittext
  1330     15AB                     init_fetch0:	
  1331                           ;	Called with low address in FSR and high address in W
  1332                           
  1333     15AB  087E               	movf	btemp,w
  1334     15AC  008A               	movwf	10
  1335     15AD  087F               	movf	btemp+1,w
  1336     15AE  0082               	movwf	2
  1337     15AF                     init_ram0:	
  1338                           ;Called with:
  1339                           ;	high address of idata address in btemp 
  1340                           ;	low address of idata address in btemp+1 
  1341                           ;	low address of data in FSR
  1342                           ;	high address + 1 of data in btemp-1
  1343                           
  1344     15AF  160A  118A  25AB  160A  118A  	fcall	init_fetch0
  1345     15B4  0080               	movwf	0
  1346     15B5  0A84               	incf	4,f
  1347     15B6  0804               	movf	4,w
  1348     15B7  067D               	xorwf	btemp+-1,w
  1349     15B8  1903               	btfsc	3,2
  1350     15B9  3400               	retlw	0
  1351     15BA  0AFF               	incf	btemp+1,f
  1352     15BB  1903               	btfsc	3,2
  1353     15BC  0AFE               	incf	btemp,f
  1354     15BD  2DAF               	goto	init_ram0
  1355                           
  1356                           	psect	clrtext
  1357     151B                     clear_ram0:	
  1358                           ;	Called with FSR containing the base address, and
  1359                           ;	W with the last address+1
  1360                           
  1361     151B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1362     151C                     clrloop0:
  1363     151C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1364     151D  0A84               	incf	4,f	;increment pointer
  1365     151E  0604               	xorwf	4,w	;XOR with final address
  1366     151F  1903               	btfsc	3,2	;have we reached the end yet?
  1367     1520  3400               	retlw	0	;all done for this memory range, return
  1368     1521  0604               	xorwf	4,w	;XOR again to restore value
  1369     1522  2D1C               	goto	clrloop0	;do the next byte
  1370                           
  1371                           	psect	cstackBANK3
  1372     0190                     __pcstackBANK3:
  1373     0190                     main@gear:
  1374                           
  1375                           ; 12 bytes @ 0x0
  1376     0190                     	ds	12
  1377     019C                     main@long_press:
  1378                           
  1379                           ; 1 bytes @ 0xC
  1380     019C                     	ds	1
  1381     019D                     main@menu_pos:
  1382                           
  1383                           ; 1 bytes @ 0xD
  1384     019D                     	ds	1
  1385     019E                     main@event:
  1386                           
  1387                           ; 3 bytes @ 0xE
  1388     019E                     	ds	3
  1389     01A1                     main@gr:
  1390                           
  1391                           ; 1 bytes @ 0x11
  1392     01A1                     	ds	1
  1393     01A2                     main@speed:
  1394                           
  1395                           ; 1 bytes @ 0x12
  1396     01A2                     	ds	1
  1397     01A3                     main@reset_flag:
  1398                           
  1399                           ; 1 bytes @ 0x13
  1400     01A3                     	ds	1
  1401     01A4                     main@control_flag:
  1402                           
  1403                           ; 1 bytes @ 0x14
  1404     01A4                     	ds	1
  1405     01A5                     main@key:
  1406                           
  1407                           ; 1 bytes @ 0x15
  1408     01A5                     	ds	1
  1409                           
  1410                           	psect	cstackCOMMON
  1411     0070                     __pcstackCOMMON:
  1412     0070                     ?_read_ds1307:
  1413     0070                     ?_i2c_start:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416     0070                     ?_i2c_rep_start:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419     0070                     ?_i2c_read:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422     0070                     ?_i2c_stop:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425     0070                     ?_init_digital_keypad:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428     0070                     ?_init_adc:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431     0070                     ?_init_timer2:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434     0070                     ?_read_digital_keypad:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437     0070                     ?_clear_clcd_screen:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440     0070                     ?_clear_log:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443     0070                     ?_read_at24c04:	
  1444                           ; 1 bytes @ 0x0
  1445                           
  1446     0070                     ?_init_display_controller:	
  1447                           ; 1 bytes @ 0x0
  1448                           
  1449     0070                     ?_init_clcd:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452     0070                     ?_init_ds1307:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455     0070                     ?_i2c_wait_for_idle:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458     0070                     ?_init_config:	
  1459                           ; 1 bytes @ 0x0
  1460                           
  1461     0070                     ?_main:	
  1462                           ; 1 bytes @ 0x0
  1463                           
  1464     0070                     ?_get_time:	
  1465                           ; 1 bytes @ 0x0
  1466                           
  1467     0070                     ?_display_time:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470     0070                     ?_record_log:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473     0070                     ?_isr:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476     0070                     ?_i2c_write:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479     0070                     ??_isr:	
  1480                           ; 2 bytes @ 0x0
  1481                           
  1482                           
  1483                           ; 1 bytes @ 0x0
  1484     0070                     	ds	2
  1485     0072                     ?_strcpy:
  1486     0072                     ?_strncpy:	
  1487                           ; 1 bytes @ 0x2
  1488                           
  1489     0072                     ?_clcd_write:	
  1490                           ; 1 bytes @ 0x2
  1491                           
  1492     0072                     ?___bmul:	
  1493                           ; 1 bytes @ 0x2
  1494                           
  1495     0072                     ?_read_adc:	
  1496                           ; 1 bytes @ 0x2
  1497                           
  1498     0072                     ?_strncmp:	
  1499                           ; 2 bytes @ 0x2
  1500                           
  1501     0072                     ?___awdiv:	
  1502                           ; 2 bytes @ 0x2
  1503                           
  1504     0072                     ?___awmod:	
  1505                           ; 2 bytes @ 0x2
  1506                           
  1507     0072                     ?___lldiv:	
  1508                           ; 2 bytes @ 0x2
  1509                           
  1510     0072                     clcd_write@mode:	
  1511                           ; 4 bytes @ 0x2
  1512                           
  1513     0072                     i2c_read@ack:	
  1514                           ; 1 bytes @ 0x2
  1515                           
  1516     0072                     i2c_write@data:	
  1517                           ; 1 bytes @ 0x2
  1518                           
  1519     0072                     read_digital_keypad@key:	
  1520                           ; 1 bytes @ 0x2
  1521                           
  1522     0072                     ___bmul@multiplicand:	
  1523                           ; 1 bytes @ 0x2
  1524                           
  1525     0072                     strcpy@dest:	
  1526                           ; 1 bytes @ 0x2
  1527                           
  1528     0072                     strncmp@l:	
  1529                           ; 1 bytes @ 0x2
  1530                           
  1531     0072                     strncpy@d:	
  1532                           ; 1 bytes @ 0x2
  1533                           
  1534     0072                     ___awdiv@divisor:	
  1535                           ; 1 bytes @ 0x2
  1536                           
  1537     0072                     ___awmod@divisor:	
  1538                           ; 2 bytes @ 0x2
  1539                           
  1540     0072                     ___lldiv@divisor:	
  1541                           ; 2 bytes @ 0x2
  1542                           
  1543     0072                     ??_i2c_start:	
  1544                           ; 4 bytes @ 0x2
  1545                           
  1546     0072                     ??_i2c_write:	
  1547                           ; 1 bytes @ 0x2
  1548                           
  1549     0072                     ??_i2c_rep_start:	
  1550                           ; 1 bytes @ 0x2
  1551                           
  1552     0072                     ??_i2c_read:	
  1553                           ; 1 bytes @ 0x2
  1554                           
  1555     0072                     ??_i2c_stop:	
  1556                           ; 1 bytes @ 0x2
  1557                           
  1558     0072                     ??_init_digital_keypad:	
  1559                           ; 1 bytes @ 0x2
  1560                           
  1561     0072                     ??_init_adc:	
  1562                           ; 1 bytes @ 0x2
  1563                           
  1564     0072                     ??_init_timer2:	
  1565                           ; 1 bytes @ 0x2
  1566                           
  1567     0072                     ??_read_digital_keypad:	
  1568                           ; 1 bytes @ 0x2
  1569                           
  1570     0072                     ??_i2c_wait_for_idle:	
  1571                           ; 1 bytes @ 0x2
  1572                           
  1573                           
  1574                           ; 1 bytes @ 0x2
  1575     0072                     	ds	1
  1576     0073                     ?_write_ds1307:
  1577     0073                     ?_write_at24c04:	
  1578                           ; 1 bytes @ 0x3
  1579                           
  1580     0073                     write_ds1307@data:	
  1581                           ; 1 bytes @ 0x3
  1582                           
  1583     0073                     i2c_read@data:	
  1584                           ; 1 bytes @ 0x3
  1585                           
  1586     0073                     write_at24c04@data:	
  1587                           ; 1 bytes @ 0x3
  1588                           
  1589     0073                     ___bmul@product:	
  1590                           ; 1 bytes @ 0x3
  1591                           
  1592     0073                     strncmp@r:	
  1593                           ; 1 bytes @ 0x3
  1594                           
  1595     0073                     strcpy@src:	
  1596                           ; 1 bytes @ 0x3
  1597                           
  1598     0073                     strncpy@s:	
  1599                           ; 2 bytes @ 0x3
  1600                           
  1601     0073                     ??_clcd_write:	
  1602                           ; 2 bytes @ 0x3
  1603                           
  1604     0073                     ??___bmul:	
  1605                           ; 1 bytes @ 0x3
  1606                           
  1607                           
  1608                           ; 1 bytes @ 0x3
  1609     0073                     	ds	1
  1610     0074                     read_ds1307@addr:
  1611     0074                     write_ds1307@addr:	
  1612                           ; 1 bytes @ 0x4
  1613                           
  1614     0074                     read_at24c04@addr:	
  1615                           ; 1 bytes @ 0x4
  1616                           
  1617     0074                     ___bmul@multiplier:	
  1618                           ; 1 bytes @ 0x4
  1619                           
  1620     0074                     read_adc@adc_reg_val:	
  1621                           ; 1 bytes @ 0x4
  1622                           
  1623     0074                     ___awdiv@dividend:	
  1624                           ; 2 bytes @ 0x4
  1625                           
  1626     0074                     ___awmod@dividend:	
  1627                           ; 2 bytes @ 0x4
  1628                           
  1629     0074                     strncmp@n:	
  1630                           ; 2 bytes @ 0x4
  1631                           
  1632     0074                     ??_read_ds1307:	
  1633                           ; 2 bytes @ 0x4
  1634                           
  1635     0074                     ??_write_ds1307:	
  1636                           ; 1 bytes @ 0x4
  1637                           
  1638     0074                     ??_read_adc:	
  1639                           ; 1 bytes @ 0x4
  1640                           
  1641     0074                     ??_read_at24c04:	
  1642                           ; 1 bytes @ 0x4
  1643                           
  1644     0074                     ??_write_at24c04:	
  1645                           ; 1 bytes @ 0x4
  1646                           
  1647                           
  1648                           ; 1 bytes @ 0x4
  1649     0074                     	ds	1
  1650     0075                     clcd_write@byte:
  1651     0075                     read_ds1307@data:	
  1652                           ; 1 bytes @ 0x5
  1653                           
  1654     0075                     read_at24c04@data:	
  1655                           ; 1 bytes @ 0x5
  1656                           
  1657     0075                     strncpy@n:	
  1658                           ; 1 bytes @ 0x5
  1659                           
  1660     0075                     ??_strcpy:	
  1661                           ; 2 bytes @ 0x5
  1662                           
  1663                           
  1664                           ; 1 bytes @ 0x5
  1665     0075                     	ds	1
  1666     0076                     ?_clcd_print:
  1667     0076                     ?___xxtofl:	
  1668                           ; 1 bytes @ 0x6
  1669                           
  1670     0076                     init_ds1307@dummy:	
  1671                           ; 4 bytes @ 0x6
  1672                           
  1673     0076                     write_at24c04@addr:	
  1674                           ; 1 bytes @ 0x6
  1675                           
  1676     0076                     ___awdiv@counter:	
  1677                           ; 1 bytes @ 0x6
  1678                           
  1679     0076                     ___awmod@counter:	
  1680                           ; 1 bytes @ 0x6
  1681                           
  1682     0076                     clcd_print@str:	
  1683                           ; 1 bytes @ 0x6
  1684                           
  1685     0076                     ___lldiv@dividend:	
  1686                           ; 2 bytes @ 0x6
  1687                           
  1688     0076                     ___xxtofl@val:	
  1689                           ; 4 bytes @ 0x6
  1690                           
  1691     0076                     ??_clear_clcd_screen:	
  1692                           ; 4 bytes @ 0x6
  1693                           
  1694     0076                     ??_strncmp:	
  1695                           ; 1 bytes @ 0x6
  1696                           
  1697     0076                     ??_init_display_controller:	
  1698                           ; 1 bytes @ 0x6
  1699                           
  1700     0076                     ??_init_ds1307:	
  1701                           ; 1 bytes @ 0x6
  1702                           
  1703     0076                     ??_get_time:	
  1704                           ; 1 bytes @ 0x6
  1705                           
  1706     0076                     ??___awdiv:	
  1707                           ; 1 bytes @ 0x6
  1708                           
  1709     0076                     ??___awmod:	
  1710                           ; 1 bytes @ 0x6
  1711                           
  1712                           
  1713                           ; 1 bytes @ 0x6
  1714     0076                     	ds	1
  1715     0077                     ?_write_str_at24c04:
  1716     0077                     ___awdiv@sign:	
  1717                           ; 1 bytes @ 0x7
  1718                           
  1719     0077                     ___awmod@sign:	
  1720                           ; 1 bytes @ 0x7
  1721                           
  1722     0077                     strcpy@d:	
  1723                           ; 1 bytes @ 0x7
  1724                           
  1725     0077                     write_str_at24c04@data:	
  1726                           ; 1 bytes @ 0x7
  1727                           
  1728     0077                     ??_strncpy:	
  1729                           ; 2 bytes @ 0x7
  1730                           
  1731                           
  1732                           ; 1 bytes @ 0x7
  1733     0077                     	ds	1
  1734     0078                     clcd_print@addr:
  1735     0078                     ___awdiv@quotient:	
  1736                           ; 1 bytes @ 0x8
  1737                           
  1738     0078                     ??_init_clcd:	
  1739                           ; 2 bytes @ 0x8
  1740                           
  1741                           
  1742                           ; 1 bytes @ 0x8
  1743     0078                     	ds	1
  1744     0079                     write_str_at24c04@addr:
  1745     0079                     strncpy@cp:	
  1746                           ; 1 bytes @ 0x9
  1747                           
  1748     0079                     ??_write_str_at24c04:	
  1749                           ; 1 bytes @ 0x9
  1750                           
  1751     0079                     ??_clcd_print:	
  1752                           ; 1 bytes @ 0x9
  1753                           
  1754                           
  1755                           ; 1 bytes @ 0x9
  1756     0079                     	ds	1
  1757     007A                     ??_clcd_putch:
  1758     007A                     ??_init_config:	
  1759                           ; 1 bytes @ 0xA
  1760                           
  1761     007A                     ??_display_time:	
  1762                           ; 1 bytes @ 0xA
  1763                           
  1764     007A                     ??_record_log:	
  1765                           ; 1 bytes @ 0xA
  1766                           
  1767                           
  1768                           	psect	cstackBANK0
  1769     0020                     __pcstackBANK0:	
  1770                           ; 1 bytes @ 0xA
  1771                           
  1772     0020                     ?_clcd_putch:
  1773     0020                     clcd_putch@addr:	
  1774                           ; 1 bytes @ 0x0
  1775                           
  1776     0020                     record_log@addr:	
  1777                           ; 1 bytes @ 0x0
  1778                           
  1779     0020                     ??_clear_log:	
  1780                           ; 1 bytes @ 0x0
  1781                           
  1782     0020                     ??___lldiv:	
  1783                           ; 1 bytes @ 0x0
  1784                           
  1785     0020                     ??___xxtofl:	
  1786                           ; 1 bytes @ 0x0
  1787                           
  1788                           
  1789                           ; 1 bytes @ 0x0
  1790     0020                     	ds	1
  1791     0021                     ?_log_car_event:
  1792     0021                     clcd_putch@data:	
  1793                           ; 1 bytes @ 0x1
  1794                           
  1795     0021                     log_car_event@event:	
  1796                           ; 1 bytes @ 0x1
  1797                           
  1798     0021                     ___lldiv@quotient:	
  1799                           ; 1 bytes @ 0x1
  1800                           
  1801                           
  1802                           ; 4 bytes @ 0x1
  1803     0021                     	ds	1
  1804     0022                     ?_display_dashboard:
  1805     0022                     ?_login:	
  1806                           ; 1 bytes @ 0x2
  1807                           
  1808     0022                     ?_menu_screen:	
  1809                           ; 1 bytes @ 0x2
  1810                           
  1811     0022                     ?_view_log:	
  1812                           ; 1 bytes @ 0x2
  1813                           
  1814     0022                     ?_change_password:	
  1815                           ; 1 bytes @ 0x2
  1816                           
  1817     0022                     display_dashboard@event:	
  1818                           ; 1 bytes @ 0x2
  1819                           
  1820     0022                     log_car_event@speed:	
  1821                           ; 1 bytes @ 0x2
  1822                           
  1823     0022                     login@reset_flag:	
  1824                           ; 1 bytes @ 0x2
  1825                           
  1826     0022                     menu_screen@reset_flag:	
  1827                           ; 1 bytes @ 0x2
  1828                           
  1829     0022                     view_log@reset_flag:	
  1830                           ; 1 bytes @ 0x2
  1831                           
  1832     0022                     change_password@key:	
  1833                           ; 1 bytes @ 0x2
  1834                           
  1835                           
  1836                           ; 2 bytes @ 0x2
  1837     0022                     	ds	1
  1838     0023                     display_dashboard@speed:
  1839     0023                     ??_log_car_event:	
  1840                           ; 1 bytes @ 0x3
  1841                           
  1842     0023                     ??_login:	
  1843                           ; 1 bytes @ 0x3
  1844                           
  1845     0023                     ??_menu_screen:	
  1846                           ; 1 bytes @ 0x3
  1847                           
  1848     0023                     ??_view_log:	
  1849                           ; 1 bytes @ 0x3
  1850                           
  1851                           
  1852                           ; 1 bytes @ 0x3
  1853     0023                     	ds	1
  1854     0024                     change_password@reset_flag:
  1855     0024                     ___xxtofl@sign:	
  1856                           ; 1 bytes @ 0x4
  1857                           
  1858     0024                     ??_display_dashboard:	
  1859                           ; 1 bytes @ 0x4
  1860                           
  1861                           
  1862                           ; 1 bytes @ 0x4
  1863     0024                     	ds	1
  1864     0025                     menu_screen@key:
  1865     0025                     view_log@addr:	
  1866                           ; 1 bytes @ 0x5
  1867                           
  1868     0025                     ___lldiv@counter:	
  1869                           ; 1 bytes @ 0x5
  1870                           
  1871     0025                     ___xxtofl@exp:	
  1872                           ; 1 bytes @ 0x5
  1873                           
  1874     0025                     ??_change_password:	
  1875                           ; 1 bytes @ 0x5
  1876                           
  1877                           
  1878                           ; 1 bytes @ 0x5
  1879     0025                     	ds	1
  1880     0026                     ?_init_i2c:
  1881     0026                     view_log@key:	
  1882                           ; 1 bytes @ 0x6
  1883                           
  1884     0026                     init_i2c@baud:	
  1885                           ; 1 bytes @ 0x6
  1886                           
  1887     0026                     login@stored_pwd:	
  1888                           ; 4 bytes @ 0x6
  1889                           
  1890     0026                     ___xxtofl@arg:	
  1891                           ; 4 bytes @ 0x6
  1892                           
  1893                           
  1894                           ; 4 bytes @ 0x6
  1895     0026                     	ds	1
  1896     0027                     view_log@i:
  1897                           
  1898                           ; 1 bytes @ 0x7
  1899     0027                     	ds	3
  1900     002A                     ?___fldiv:
  1901     002A                     login@key:	
  1902                           ; 4 bytes @ 0xA
  1903                           
  1904     002A                     ___fldiv@a:	
  1905                           ; 1 bytes @ 0xA
  1906                           
  1907     002A                     ??_init_i2c:	
  1908                           ; 4 bytes @ 0xA
  1909                           
  1910                           
  1911                           ; 1 bytes @ 0xA
  1912     002A                     	ds	1
  1913     002B                     login@j:
  1914                           
  1915                           ; 1 bytes @ 0xB
  1916     002B                     	ds	3
  1917     002E                     ___fldiv@b:
  1918                           
  1919                           ; 4 bytes @ 0xE
  1920     002E                     	ds	4
  1921     0032                     ??___fldiv:
  1922                           
  1923                           ; 1 bytes @ 0x12
  1924     0032                     	ds	5
  1925     0037                     ___fldiv@rem:
  1926                           
  1927                           ; 4 bytes @ 0x17
  1928     0037                     	ds	4
  1929     003B                     ___fldiv@sign:
  1930                           
  1931                           ; 1 bytes @ 0x1B
  1932     003B                     	ds	1
  1933     003C                     ___fldiv@new_exp:
  1934                           
  1935                           ; 2 bytes @ 0x1C
  1936     003C                     	ds	2
  1937     003E                     ___fldiv@grs:
  1938                           
  1939                           ; 4 bytes @ 0x1E
  1940     003E                     	ds	4
  1941     0042                     ___fldiv@bexp:
  1942                           
  1943                           ; 1 bytes @ 0x22
  1944     0042                     	ds	1
  1945     0043                     ___fldiv@aexp:
  1946                           
  1947                           ; 1 bytes @ 0x23
  1948     0043                     	ds	1
  1949     0044                     ?___fltol:
  1950     0044                     ___fltol@f1:	
  1951                           ; 4 bytes @ 0x24
  1952                           
  1953                           
  1954                           ; 4 bytes @ 0x24
  1955     0044                     	ds	4
  1956     0048                     ??___fltol:
  1957                           
  1958                           ; 1 bytes @ 0x28
  1959     0048                     	ds	4
  1960     004C                     ___fltol@sign1:
  1961                           
  1962                           ; 1 bytes @ 0x2C
  1963     004C                     	ds	1
  1964     004D                     ___fltol@exp1:
  1965                           
  1966                           ; 1 bytes @ 0x2D
  1967     004D                     	ds	1
  1968     004E                     ??_main:
  1969                           
  1970                           ; 1 bytes @ 0x2E
  1971     004E                     	ds	4
  1972                           
  1973                           	psect	maintext
  1974     0033                     __pmaintext:	
  1975 ;;
  1976 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1977 ;;
  1978 ;; *************** function _main *****************
  1979 ;; Defined at:
  1980 ;;		line 30 in file "main.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  gear           12    0[BANK3 ] PTR unsigned char [6]
  1985 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(3), 
  1986 ;;		 -> STR_2(3), STR_1(3), 
  1987 ;;  event           3   14[BANK3 ] unsigned char [3]
  1988 ;;  key             1   21[BANK3 ] unsigned char 
  1989 ;;  control_flag    1   20[BANK3 ] unsigned char 
  1990 ;;  reset_flag      1   19[BANK3 ] unsigned char 
  1991 ;;  speed           1   18[BANK3 ] unsigned char 
  1992 ;;  gr              1   17[BANK3 ] unsigned char 
  1993 ;;  menu_pos        1   13[BANK3 ] unsigned char 
  1994 ;;  long_press      1   12[BANK3 ] unsigned char 
  1995 ;;  delay           1    0        unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : B00/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2005 ;;      Params:         0       0       0       0       0
  2006 ;;      Locals:         0       0       0      22       0
  2007 ;;      Temps:          0       4       0       0       0
  2008 ;;      Totals:         0       4       0      22       0
  2009 ;;Total ram usage:       26 bytes
  2010 ;; Hardware stack levels required when called: 8
  2011 ;; This function calls:
  2012 ;;		___fldiv
  2013 ;;		___fltol
  2014 ;;		___xxtofl
  2015 ;;		_change_password
  2016 ;;		_clcd_print
  2017 ;;		_clcd_write
  2018 ;;		_clear_clcd_screen
  2019 ;;		_clear_log
  2020 ;;		_display_dashboard
  2021 ;;		_init_config
  2022 ;;		_log_car_event
  2023 ;;		_login
  2024 ;;		_menu_screen
  2025 ;;		_read_adc
  2026 ;;		_read_digital_keypad
  2027 ;;		_strcpy
  2028 ;;		_view_log
  2029 ;;		_write_str_at24c04
  2030 ;; This function is called by:
  2031 ;;		Startup code after reset
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035     0033                     _main:	
  2036                           ;psect for function _main
  2037                           
  2038     0033                     l4442:	
  2039                           ;incstack = 0
  2040                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2041                           
  2042                           
  2043                           ;main.c: 32:     while (1) {
  2044     0033  3001               	movlw	1
  2045     0034  1683               	bsf	3,5	;RP0=1, select bank3
  2046     0035  1703               	bsf	3,6	;RP1=1, select bank3
  2047     0036  00A4               	movwf	main@control_flag^(0+384)
  2048     0037                     l4444:
  2049                           
  2050                           ;main.c: 33: 
  2051     0037  01A2               	clrf	main@speed^(0+384)
  2052     0038  019C               	clrf	main@long_press^(0+384)
  2053     0039                     l4446:
  2054                           
  2055                           ;main.c: 34:         key = read_digital_keypad();
  2056     0039  1683               	bsf	3,5	;RP0=1, select bank1
  2057     003A  1303               	bcf	3,6	;RP1=0, select bank1
  2058     003B  085C               	movf	main@F1242^(0+128),w
  2059     003C  1683               	bsf	3,5	;RP0=1, select bank3
  2060     003D  1703               	bsf	3,6	;RP1=1, select bank3
  2061     003E  009E               	movwf	main@event^(0+384)
  2062     003F  1683               	bsf	3,5	;RP0=1, select bank1
  2063     0040  1303               	bcf	3,6	;RP1=0, select bank1
  2064     0041  085D               	movf	(main@F1242+1)^(0+128),w
  2065     0042  1683               	bsf	3,5	;RP0=1, select bank3
  2066     0043  1703               	bsf	3,6	;RP1=1, select bank3
  2067     0044  009F               	movwf	(main@event+1)^(0+384)
  2068     0045  1683               	bsf	3,5	;RP0=1, select bank1
  2069     0046  1303               	bcf	3,6	;RP1=0, select bank1
  2070     0047  085E               	movf	(main@F1242+2)^(0+128),w
  2071     0048  1683               	bsf	3,5	;RP0=1, select bank3
  2072     0049  1703               	bsf	3,6	;RP1=1, select bank3
  2073     004A  00A0               	movwf	(main@event+2)^(0+384)
  2074     004B                     l4448:
  2075                           
  2076                           ;main.c: 35: 
  2077     004B  30C6               	movlw	main@F1244& (0+255)
  2078     004C  0084               	movwf	4
  2079     004D  3090               	movlw	low main@gear
  2080     004E  1283               	bcf	3,5	;RP0=0, select bank0
  2081     004F  1303               	bcf	3,6	;RP1=0, select bank0
  2082     0050  00CE               	movwf	??_main
  2083     0051  300C               	movlw	12
  2084     0052  00CF               	movwf	??_main+1
  2085     0053                     u5090:
  2086     0053  1383               	bcf	3,7	;select IRP bank1
  2087     0054  0800               	movf	0,w
  2088     0055  00D0               	movwf	??_main+2
  2089     0056  0A04               	incf	4,w
  2090     0057  00D1               	movwf	??_main+3
  2091     0058  084E               	movf	??_main,w
  2092     0059  0084               	movwf	4
  2093     005A  1783               	bsf	3,7	;select IRP bank3
  2094     005B  0850               	movf	??_main+2,w
  2095     005C  0080               	movwf	0
  2096     005D  0A04               	incf	4,w
  2097     005E  00CE               	movwf	??_main
  2098     005F  0851               	movf	??_main+3,w
  2099     0060  0084               	movwf	4
  2100     0061  0BCF               	decfsz	??_main+1,f
  2101     0062  2853               	goto	u5090
  2102     0063                     l4450:
  2103                           
  2104                           ;main.c: 36: 
  2105     0063  1683               	bsf	3,5	;RP0=1, select bank3
  2106     0064  1703               	bsf	3,6	;RP1=1, select bank3
  2107     0065  01A1               	clrf	main@gr^(0+384)
  2108     0066                     l4452:
  2109                           
  2110                           ;main.c: 37: 
  2111     0066  160A  118A  2711  120A  118A  	fcall	_init_config
  2112     006B                     l4454:
  2113                           
  2114                           ;main.c: 38:         if(key == 0x3E)
  2115     006B  309E               	movlw	(low (main@event| (0+256)))& (0+255)
  2116     006C  1283               	bcf	3,5	;RP0=0, select bank0
  2117     006D  1303               	bcf	3,6	;RP1=0, select bank0
  2118     006E  00A1               	movwf	log_car_event@event
  2119     006F  01A2               	clrf	log_car_event@speed
  2120     0070  120A  158A  22C0  120A  118A  	fcall	_log_car_event
  2121     0075                     l4456:
  2122                           
  2123                           ;main.c: 40:             strcpy(event, "CO");
  2124     0075  302B               	movlw	low (STR_7| (0+32768))
  2125     0076  00F7               	movwf	write_str_at24c04@data
  2126     0077  3089               	movlw	high (STR_7| (0+32768))
  2127     0078  00F8               	movwf	write_str_at24c04@data+1
  2128     0079  3000               	movlw	0
  2129     007A  160A  118A  26BB  120A  118A  	fcall	_write_str_at24c04
  2130     007F                     l4458:
  2131                           
  2132                           ;main.c: 43:         else if(key == 0x3D && gr < 6)
  2133     007F  120A  158A  2442  120A  118A  	fcall	_read_digital_keypad
  2134     0084  1683               	bsf	3,5	;RP0=1, select bank3
  2135     0085  1703               	bsf	3,6	;RP1=1, select bank3
  2136     0086  00A5               	movwf	main@key^(0+384)
  2137     0087                     l4460:
  2138                           
  2139                           ;main.c: 47:             log_car_event(event, speed);
  2140     0087  303E               	movlw	62
  2141     0088  0625               	xorwf	main@key^(0+384),w
  2142     0089  1D03               	btfss	3,2
  2143     008A  288C               	goto	u5101
  2144     008B  288D               	goto	u5100
  2145     008C                     u5101:
  2146     008C  28A8               	goto	l4464
  2147     008D                     u5100:
  2148     008D                     l4462:
  2149                           
  2150                           ;main.c: 48:         };main.c: 49:         else if(key == 0x3B && gr > 0)
  2151     008D  309E               	movlw	(low (main@event| (0+256)))& (0+255)
  2152     008E  00F2               	movwf	strcpy@dest
  2153     008F  303F               	movlw	low (STR_8| (0+32768))
  2154     0090  00F3               	movwf	strcpy@src
  2155     0091  3089               	movlw	high (STR_8| (0+32768))
  2156     0092  00F4               	movwf	strcpy@src+1
  2157     0093  160A  118A  262B  120A  118A  	fcall	_strcpy
  2158                           
  2159                           ;main.c: 50:         {
  2160     0098  309E               	movlw	(low (main@event| (0+256)))& (0+255)
  2161     0099  1283               	bcf	3,5	;RP0=0, select bank0
  2162     009A  1303               	bcf	3,6	;RP1=0, select bank0
  2163     009B  00A1               	movwf	log_car_event@event
  2164     009C  1683               	bsf	3,5	;RP0=1, select bank3
  2165     009D  1703               	bsf	3,6	;RP1=1, select bank3
  2166     009E  0822               	movf	main@speed^(0+384),w
  2167     009F  1283               	bcf	3,5	;RP0=0, select bank0
  2168     00A0  1303               	bcf	3,6	;RP1=0, select bank0
  2169     00A1  00A2               	movwf	log_car_event@speed
  2170     00A2  120A  158A  22C0  120A  118A  	fcall	_log_car_event
  2171                           
  2172                           ;main.c: 51:             gr--;
  2173     00A7  2979               	goto	l4524
  2174     00A8                     l4464:
  2175     00A8  303D               	movlw	61
  2176     00A9  0625               	xorwf	main@key^(0+384),w
  2177     00AA  1D03               	btfss	3,2
  2178     00AB  28AD               	goto	u5111
  2179     00AC  28AE               	goto	u5110
  2180     00AD                     u5111:
  2181     00AD  28DD               	goto	l4474
  2182     00AE                     u5110:
  2183     00AE                     l4466:
  2184     00AE  3006               	movlw	6
  2185     00AF  0221               	subwf	main@gr^(0+384),w
  2186     00B0  1803               	skipnc
  2187     00B1  28B3               	goto	u5121
  2188     00B2  28B4               	goto	u5120
  2189     00B3                     u5121:
  2190     00B3  28DD               	goto	l4474
  2191     00B4                     u5120:
  2192     00B4                     l4468:
  2193                           
  2194                           ;main.c: 53:             log_car_event(event, speed);;main.c: 54:         }
  2195     00B4  309E               	movlw	(low (main@event| (0+256)))& (0+255)
  2196     00B5  00F2               	movwf	strcpy@dest
  2197     00B6  0821               	movf	main@gr^(0+384),w
  2198     00B7  1283               	bcf	3,5	;RP0=0, select bank0
  2199     00B8  1303               	bcf	3,6	;RP1=0, select bank0
  2200     00B9  00CE               	movwf	??_main
  2201     00BA  074E               	addwf	??_main,w
  2202     00BB  3E90               	addlw	(low (main@gear| (0+256)))& (0+255)
  2203     00BC  0084               	movwf	4
  2204     00BD  1783               	bsf	3,7	;select IRP bank3
  2205     00BE  0800               	movf	0,w
  2206     00BF  00F3               	movwf	strcpy@src
  2207     00C0  0A84               	incf	4,f
  2208     00C1  0800               	movf	0,w
  2209     00C2  0384               	decf	4,f
  2210     00C3  00F4               	movwf	strcpy@src+1
  2211     00C4  160A  118A  262B  120A  118A  	fcall	_strcpy
  2212     00C9                     l4470:
  2213                           
  2214                           ;main.c: 55:         else if((key == 0x37 || key == 0x2F) && control_flag == 0x01 )
  2215     00C9  3001               	movlw	1
  2216     00CA  1683               	bsf	3,5	;RP0=1, select bank3
  2217     00CB  1703               	bsf	3,6	;RP1=1, select bank3
  2218     00CC  07A1               	addwf	main@gr^(0+384),f
  2219     00CD                     l4472:
  2220                           
  2221                           ;main.c: 56:         {
  2222     00CD  309E               	movlw	(low (main@event| (0+256)))& (0+255)
  2223     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  2224     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  2225     00D0  00A1               	movwf	log_car_event@event
  2226     00D1  1683               	bsf	3,5	;RP0=1, select bank3
  2227     00D2  1703               	bsf	3,6	;RP1=1, select bank3
  2228     00D3  0822               	movf	main@speed^(0+384),w
  2229     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  2230     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  2231     00D6  00A2               	movwf	log_car_event@speed
  2232     00D7  120A  158A  22C0  120A  118A  	fcall	_log_car_event
  2233                           
  2234                           ;main.c: 57:             control_flag = 0x02;
  2235     00DC  2979               	goto	l4524
  2236     00DD                     l4474:
  2237     00DD  303B               	movlw	59
  2238     00DE  0625               	xorwf	main@key^(0+384),w
  2239     00DF  1D03               	btfss	3,2
  2240     00E0  28E2               	goto	u5131
  2241     00E1  28E3               	goto	u5130
  2242     00E2                     u5131:
  2243     00E2  2900               	goto	l4484
  2244     00E3                     u5130:
  2245     00E3                     l4476:
  2246     00E3  0821               	movf	main@gr^(0+384),w
  2247     00E4  1903               	btfsc	3,2
  2248     00E5  28E7               	goto	u5141
  2249     00E6  28E8               	goto	u5140
  2250     00E7                     u5141:
  2251     00E7  2900               	goto	l4484
  2252     00E8                     u5140:
  2253     00E8                     l4478:
  2254                           
  2255                           ;main.c: 59:             clear_clcd_screen();;main.c: 60:             clcd_print("Enter 
      +                          Password", (0x80 + 1));
  2256     00E8  3001               	movlw	1
  2257     00E9  02A1               	subwf	main@gr^(0+384),f
  2258     00EA                     l4480:
  2259                           
  2260                           ;main.c: 61: 
  2261     00EA  309E               	movlw	(low (main@event| (0+256)))& (0+255)
  2262     00EB  00F2               	movwf	strcpy@dest
  2263     00EC  0821               	movf	main@gr^(0+384),w
  2264     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  2265     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  2266     00EF  00CE               	movwf	??_main
  2267     00F0  074E               	addwf	??_main,w
  2268     00F1  3E90               	addlw	(low (main@gear| (0+256)))& (0+255)
  2269     00F2  0084               	movwf	4
  2270     00F3  1783               	bsf	3,7	;select IRP bank3
  2271     00F4  0800               	movf	0,w
  2272     00F5  00F3               	movwf	strcpy@src
  2273     00F6  0A84               	incf	4,f
  2274     00F7  0800               	movf	0,w
  2275     00F8  0384               	decf	4,f
  2276     00F9  00F4               	movwf	strcpy@src+1
  2277     00FA  160A  118A  262B  120A  118A  	fcall	_strcpy
  2278     00FF  28CD               	goto	l4472
  2279     0100                     l4484:
  2280     0100  3037               	movlw	55
  2281     0101  0625               	xorwf	main@key^(0+384),w
  2282     0102  1903               	btfsc	3,2
  2283     0103  2905               	goto	u5151
  2284     0104  2906               	goto	u5150
  2285     0105                     u5151:
  2286     0105  290C               	goto	l4488
  2287     0106                     u5150:
  2288     0106                     l4486:
  2289     0106  302F               	movlw	47
  2290     0107  0625               	xorwf	main@key^(0+384),w
  2291     0108  1D03               	btfss	3,2
  2292     0109  290B               	goto	u5161
  2293     010A  290C               	goto	u5160
  2294     010B                     u5161:
  2295     010B  293E               	goto	l4504
  2296     010C                     u5160:
  2297     010C                     l4488:
  2298     010C  0324               	decf	main@control_flag^(0+384),w
  2299     010D  1D03               	btfss	3,2
  2300     010E  2910               	goto	u5171
  2301     010F  2911               	goto	u5170
  2302     0110                     u5171:
  2303     0110  293E               	goto	l4504
  2304     0111                     u5170:
  2305     0111                     l4490:
  2306                           
  2307                           ;main.c: 65:             TMR2ON = 1;;main.c: 66:         }
  2308     0111  3002               	movlw	2
  2309     0112  00A4               	movwf	main@control_flag^(0+384)
  2310                           
  2311                           ;main.c: 67:         else if(key == 0x80 && control_flag == 0x03)
  2312     0113  3011               	movlw	17
  2313     0114  00A3               	movwf	main@reset_flag^(0+384)
  2314     0115                     l4492:
  2315                           
  2316                           ;main.c: 68:         {
  2317     0115  160A  118A  2563  120A  118A  	fcall	_clear_clcd_screen
  2318     011A                     l4494:
  2319                           
  2320                           ;main.c: 69:             switch(menu_pos)
  2321     011A  30A2               	movlw	low (STR_9| (0+32768))
  2322     011B  00F6               	movwf	clcd_print@str
  2323     011C  3088               	movlw	high (STR_9| (0+32768))
  2324     011D  00F7               	movwf	clcd_print@str+1
  2325     011E  3081               	movlw	129
  2326     011F  00F8               	movwf	clcd_print@addr
  2327     0120  160A  118A  2769  120A  118A  	fcall	_clcd_print
  2328     0125                     l4496:
  2329                           
  2330                           ;main.c: 71:                 case 0:
  2331     0125  01F2               	clrf	clcd_write@mode
  2332     0126  30C4               	movlw	196
  2333     0127  120A  158A  2150  120A  118A  	fcall	_clcd_write
  2334     012C                     l4498:
  2335                           
  2336                           ;main.c: 72:                     control_flag = 0x05;
  2337     012C  01F2               	clrf	clcd_write@mode
  2338     012D  300F               	movlw	15
  2339     012E  120A  158A  2150  120A  118A  	fcall	_clcd_write
  2340     0133                     l4500:
  2341                           
  2342                           ;main.c: 73:                     reset_flag = 0x23;
  2343     0133  30A5               	movlw	165
  2344     0134  1283               	bcf	3,5	;RP0=0, select bank0
  2345     0135  1303               	bcf	3,6	;RP1=0, select bank0
  2346     0136  00CE               	movwf	??_main
  2347     0137                     u5227:
  2348     0137  0BCE               	decfsz	??_main,f
  2349     0138  2937               	goto	u5227
  2350     0139  293A               	nop2
  2351     013A                     l4502:
  2352                           
  2353                           ;main.c: 74:                     clear_clcd_screen();
  2354     013A  1283               	bcf	3,5	;RP0=0, select bank0
  2355     013B  1303               	bcf	3,6	;RP1=0, select bank0
  2356     013C  1512               	bsf	18,2	;volatile
  2357                           
  2358                           ;main.c: 75:                     TMR2ON = 1;
  2359     013D  2979               	goto	l4524
  2360     013E                     l4504:
  2361     013E  3080               	movlw	128
  2362     013F  0625               	xorwf	main@key^(0+384),w
  2363     0140  1D03               	btfss	3,2
  2364     0141  2943               	goto	u5181
  2365     0142  2944               	goto	u5180
  2366     0143                     u5181:
  2367     0143  2979               	goto	l4524
  2368     0144                     u5180:
  2369     0144                     l4506:
  2370     0144  3003               	movlw	3
  2371     0145  0624               	xorwf	main@control_flag^(0+384),w
  2372     0146  1D03               	btfss	3,2
  2373     0147  2949               	goto	u5191
  2374     0148  294A               	goto	u5190
  2375     0149                     u5191:
  2376     0149  2979               	goto	l4524
  2377     014A                     u5190:
  2378     014A  2968               	goto	l4522
  2379     014B                     l180:	
  2380                           ;main.c: 79:                     clear_clcd_screen();;main.c: 80:                     br
      +                          eak;
  2381                           
  2382                           
  2383                           ;main.c: 81:                 case 2:
  2384     014B  3005               	movlw	5
  2385     014C  00A4               	movwf	main@control_flag^(0+384)
  2386                           
  2387                           ;main.c: 82:                     control_flag = 0x07;
  2388     014D  3023               	movlw	35
  2389     014E  00A3               	movwf	main@reset_flag^(0+384)
  2390     014F                     l4510:
  2391                           
  2392                           ;main.c: 83:                     break;
  2393     014F  160A  118A  2563  120A  118A  	fcall	_clear_clcd_screen
  2394     0154  293A               	goto	l4502
  2395     0155                     l182:	
  2396                           ;main.c: 86:                     break;
  2397                           
  2398                           
  2399                           ;main.c: 87:                 case 4:
  2400     0155  3006               	movlw	6
  2401     0156  00A4               	movwf	main@control_flag^(0+384)
  2402     0157                     l4514:
  2403                           
  2404                           ;main.c: 88:                     control_flag = 0x09;
  2405     0157  160A  118A  2563  120A  118A  	fcall	_clear_clcd_screen
  2406                           
  2407                           ;main.c: 89:                     reset_flag = 0x11;
  2408     015C  2979               	goto	l4524
  2409     015D                     l183:	
  2410                           ;main.c: 90:                     clear_clcd_screen();
  2411                           
  2412                           
  2413                           ;main.c: 91:                     TMR2ON = 1;
  2414     015D  3007               	movlw	7
  2415     015E  00A4               	movwf	main@control_flag^(0+384)
  2416                           
  2417                           ;main.c: 92:                     break;
  2418     015F  2979               	goto	l4524
  2419     0160                     l184:	
  2420                           ;main.c: 93: 
  2421                           
  2422                           
  2423                           ;main.c: 94:             }
  2424     0160  3008               	movlw	8
  2425     0161  00A4               	movwf	main@control_flag^(0+384)
  2426                           
  2427                           ;main.c: 95:         }
  2428     0162  2979               	goto	l4524
  2429     0163                     l185:	
  2430                           ;main.c: 96: 
  2431                           
  2432                           
  2433                           ;main.c: 97: 
  2434     0163  3009               	movlw	9
  2435     0164  00A4               	movwf	main@control_flag^(0+384)
  2436                           
  2437                           ;main.c: 98: 
  2438     0165  3011               	movlw	17
  2439     0166  00A3               	movwf	main@reset_flag^(0+384)
  2440     0167  294F               	goto	l4510
  2441     0168                     l4522:
  2442     0168  081D               	movf	main@menu_pos^(0+384),w
  2443                           
  2444                           ; Switch size 1, requested type "simple"
  2445                           ; Number of cases is 5, Range of values is 0 to 4
  2446                           ; switch strategies available:
  2447                           ; Name         Instructions Cycles
  2448                           ; simple_byte           16     9 (average)
  2449                           ; direct_byte           23     8 (fixed)
  2450                           ; jumptable            260     6 (fixed)
  2451                           ;	Chosen strategy is simple_byte
  2452     0169  3A00               	xorlw	0	; case 0
  2453     016A  1903               	skipnz
  2454     016B  294B               	goto	l180
  2455     016C  3A01               	xorlw	1	; case 1
  2456     016D  1903               	skipnz
  2457     016E  2955               	goto	l182
  2458     016F  3A03               	xorlw	3	; case 2
  2459     0170  1903               	skipnz
  2460     0171  295D               	goto	l183
  2461     0172  3A01               	xorlw	1	; case 3
  2462     0173  1903               	skipnz
  2463     0174  2960               	goto	l184
  2464     0175  3A07               	xorlw	7	; case 4
  2465     0176  1903               	skipnz
  2466     0177  2963               	goto	l185
  2467     0178  2979               	goto	l173
  2468     0179                     l173:
  2469     0179                     l4524:
  2470                           
  2471                           ;main.c: 111:                 {
  2472     0179  160A  118A  2586  120A  118A  	fcall	_read_adc
  2473     017E  0872               	movf	?_read_adc,w
  2474     017F  1283               	bcf	3,5	;RP0=0, select bank0
  2475     0180  1303               	bcf	3,6	;RP1=0, select bank0
  2476     0181  00CE               	movwf	??_main
  2477     0182  0873               	movf	?_read_adc+1,w
  2478     0183  00CF               	movwf	??_main+1
  2479     0184  01D0               	clrf	??_main+2
  2480     0185  01D1               	clrf	??_main+3
  2481     0186  0851               	movf	??_main+3,w
  2482     0187  00F9               	movwf	___xxtofl@val+3
  2483     0188  0850               	movf	??_main+2,w
  2484     0189  00F8               	movwf	___xxtofl@val+2
  2485     018A  084F               	movf	??_main+1,w
  2486     018B  00F7               	movwf	___xxtofl@val+1
  2487     018C  084E               	movf	??_main,w
  2488     018D  00F6               	movwf	___xxtofl@val
  2489     018E  3000               	movlw	0
  2490     018F  120A  158A  2583  120A  118A  	fcall	___xxtofl
  2491     0194  0879               	movf	?___xxtofl+3,w
  2492     0195  1283               	bcf	3,5	;RP0=0, select bank0
  2493     0196  1303               	bcf	3,6	;RP1=0, select bank0
  2494     0197  00B1               	movwf	___fldiv@b+3
  2495     0198  0878               	movf	?___xxtofl+2,w
  2496     0199  00B0               	movwf	___fldiv@b+2
  2497     019A  0877               	movf	?___xxtofl+1,w
  2498     019B  00AF               	movwf	___fldiv@b+1
  2499     019C  0876               	movf	?___xxtofl,w
  2500     019D  00AE               	movwf	___fldiv@b
  2501     019E  3041               	movlw	65
  2502     019F  00AD               	movwf	___fldiv@a+3
  2503     01A0  3024               	movlw	36
  2504     01A1  00AC               	movwf	___fldiv@a+2
  2505     01A2  3000               	movlw	0
  2506     01A3  00AB               	movwf	___fldiv@a+1
  2507     01A4  3000               	movlw	0
  2508     01A5  00AA               	movwf	___fldiv@a
  2509     01A6  120A  118A  246D  120A  118A  	fcall	___fldiv
  2510     01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2511     01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2512     01AD  082D               	movf	?___fldiv+3,w
  2513     01AE  00C7               	movwf	___fltol@f1+3
  2514     01AF  082C               	movf	?___fldiv+2,w
  2515     01B0  00C6               	movwf	___fltol@f1+2
  2516     01B1  082B               	movf	?___fldiv+1,w
  2517     01B2  00C5               	movwf	___fltol@f1+1
  2518     01B3  082A               	movf	?___fldiv,w
  2519     01B4  00C4               	movwf	___fltol@f1
  2520     01B5  120A  158A  250D  120A  118A  	fcall	___fltol
  2521     01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2522     01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2523     01BC  0844               	movf	?___fltol,w
  2524     01BD  1683               	bsf	3,5	;RP0=1, select bank3
  2525     01BE  1703               	bsf	3,6	;RP1=1, select bank3
  2526     01BF  00A2               	movwf	main@speed^(0+384)
  2527                           
  2528                           ;main.c: 113:                         control_flag = 0x01;
  2529     01C0  2A87               	goto	l4590
  2530     01C1                     l4526:
  2531                           
  2532                           ;main.c: 116:                         _delay((unsigned long)((100)*(20000000/4000000.0))
      +                          );
  2533     01C1  309E               	movlw	(low (main@event| (0+256)))& (0+255)
  2534     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2535     01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2536     01C4  00A2               	movwf	display_dashboard@event
  2537     01C5  1683               	bsf	3,5	;RP0=1, select bank3
  2538     01C6  1703               	bsf	3,6	;RP1=1, select bank3
  2539     01C7  0822               	movf	main@speed^(0+384),w
  2540     01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2541     01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2542     01CA  00A3               	movwf	display_dashboard@speed
  2543     01CB  120A  158A  2215  120A  118A  	fcall	_display_dashboard
  2544                           
  2545                           ;main.c: 117:                         TMR2ON = 0;
  2546     01D0  2A9B               	goto	l4592
  2547     01D1                     l191:	
  2548                           ;main.c: 120:                     case 0x44:;main.c: 121:                         contro
      +                          l_flag = 0x03;
  2549                           
  2550                           
  2551                           ;main.c: 122:                         clcd_write(0x0C, 0);
  2552     01D1  3001               	movlw	1
  2553     01D2  1683               	bsf	3,5	;RP0=1, select bank3
  2554     01D3  1703               	bsf	3,6	;RP1=1, select bank3
  2555     01D4  00A4               	movwf	main@control_flag^(0+384)
  2556     01D5                     l4528:
  2557                           
  2558                           ;main.c: 123:                         _delay((unsigned long)((100)*(20000000/4000000.0))
      +                          );
  2559     01D5  160A  118A  2563  120A  118A  	fcall	_clear_clcd_screen
  2560                           
  2561                           ;main.c: 124:                         reset_flag = 0x55;
  2562     01DA  01F2               	clrf	clcd_write@mode
  2563     01DB  300C               	movlw	12
  2564     01DC  120A  158A  2150  120A  118A  	fcall	_clcd_write
  2565     01E1                     l4530:
  2566                           
  2567                           ;main.c: 125:                         TMR2ON = 1;
  2568     01E1  30A5               	movlw	165
  2569     01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2570     01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2571     01E4  00CE               	movwf	??_main
  2572     01E5                     u5237:
  2573     01E5  0BCE               	decfsz	??_main,f
  2574     01E6  29E5               	goto	u5237
  2575     01E7  29E8               	nop2
  2576     01E8                     l4532:
  2577                           
  2578                           ;main.c: 126:                         continue;
  2579     01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2580     01E9  1303               	bcf	3,6	;RP1=0, select bank0
  2581     01EA  1112               	bcf	18,2	;volatile
  2582                           
  2583                           ;main.c: 127:                 }
  2584     01EB  2A9B               	goto	l4592
  2585     01EC                     l193:	
  2586                           ;main.c: 129:             case 0x03:
  2587                           
  2588                           
  2589                           ;main.c: 130:                 menu_pos = menu_screen(key, reset_flag);
  2590     01EC  3003               	movlw	3
  2591     01ED  1683               	bsf	3,5	;RP0=1, select bank3
  2592     01EE  1703               	bsf	3,6	;RP1=1, select bank3
  2593     01EF  00A4               	movwf	main@control_flag^(0+384)
  2594     01F0                     l4534:
  2595                           
  2596                           ;main.c: 131:                  if(menu_pos == 0x33)
  2597     01F0  01F2               	clrf	clcd_write@mode
  2598     01F1  300C               	movlw	12
  2599     01F2  120A  158A  2150  120A  118A  	fcall	_clcd_write
  2600     01F7                     l4536:
  2601                           
  2602                           ;main.c: 132:                 {
  2603     01F7  30A5               	movlw	165
  2604     01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2605     01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2606     01FA  00CE               	movwf	??_main
  2607     01FB                     u5247:
  2608     01FB  0BCE               	decfsz	??_main,f
  2609     01FC  29FB               	goto	u5247
  2610     01FD  29FE               	nop2
  2611     01FE                     l4538:
  2612                           
  2613                           ;main.c: 133:                     clear_clcd_screen();
  2614     01FE  3055               	movlw	85
  2615     01FF  1683               	bsf	3,5	;RP0=1, select bank3
  2616     0200  1703               	bsf	3,6	;RP1=1, select bank3
  2617     0201  00A3               	movwf	main@reset_flag^(0+384)
  2618     0202                     l4540:
  2619                           
  2620                           ;main.c: 134:                     control_flag = 0x01;
  2621     0202  1283               	bcf	3,5	;RP0=0, select bank0
  2622     0203  1303               	bcf	3,6	;RP1=0, select bank0
  2623     0204  1512               	bsf	18,2	;volatile
  2624                           
  2625                           ;main.c: 135:                     TMR2ON = 0;
  2626     0205  287F               	goto	l4458
  2627     0206                     l4544:
  2628     0206  0823               	movf	main@reset_flag^(0+384),w
  2629     0207  1283               	bcf	3,5	;RP0=0, select bank0
  2630     0208  1303               	bcf	3,6	;RP1=0, select bank0
  2631     0209  00A2               	movwf	login@reset_flag
  2632     020A  1683               	bsf	3,5	;RP0=1, select bank3
  2633     020B  1703               	bsf	3,6	;RP1=1, select bank3
  2634     020C  0825               	movf	main@key^(0+384),w
  2635     020D  120A  118A  22A2  120A  118A  	fcall	_login
  2636                           
  2637                           ; Switch size 1, requested type "simple"
  2638                           ; Number of cases is 2, Range of values is 51 to 68
  2639                           ; switch strategies available:
  2640                           ; Name         Instructions Cycles
  2641                           ; simple_byte            7     4 (average)
  2642                           ; direct_byte           65    11 (fixed)
  2643                           ; jumptable            263     9 (fixed)
  2644                           ;	Chosen strategy is simple_byte
  2645     0212  3A33               	xorlw	51	; case 51
  2646     0213  1903               	skipnz
  2647     0214  29D1               	goto	l191
  2648     0215  3A77               	xorlw	119	; case 68
  2649     0216  1903               	skipnz
  2650     0217  29EC               	goto	l193
  2651     0218  2A9B               	goto	l4592
  2652     0219                     l4546:
  2653                           
  2654                           ;main.c: 139:             case 0x05:
  2655     0219  0823               	movf	main@reset_flag^(0+384),w
  2656     021A  1283               	bcf	3,5	;RP0=0, select bank0
  2657     021B  1303               	bcf	3,6	;RP1=0, select bank0
  2658     021C  00A2               	movwf	menu_screen@reset_flag
  2659     021D  1683               	bsf	3,5	;RP0=1, select bank3
  2660     021E  1703               	bsf	3,6	;RP1=1, select bank3
  2661     021F  0825               	movf	main@key^(0+384),w
  2662     0220  120A  158A  2639  120A  118A  	fcall	_menu_screen
  2663     0225  1683               	bsf	3,5	;RP0=1, select bank3
  2664     0226  1703               	bsf	3,6	;RP1=1, select bank3
  2665     0227  009D               	movwf	main@menu_pos^(0+384)
  2666     0228                     l4548:
  2667                           
  2668                           ;main.c: 140: 
  2669     0228  3033               	movlw	51
  2670     0229  061D               	xorwf	main@menu_pos^(0+384),w
  2671     022A  1D03               	btfss	3,2
  2672     022B  2A2D               	goto	u5201
  2673     022C  2A2E               	goto	u5200
  2674     022D                     u5201:
  2675     022D  2A9B               	goto	l4592
  2676     022E                     u5200:
  2677     022E                     l4550:
  2678                           
  2679                           ;main.c: 141:                 if(view_log(key, reset_flag) == 0x33);main.c: 142:        
      +                                   {
  2680     022E  160A  118A  2563  120A  118A  	fcall	_clear_clcd_screen
  2681     0233                     l4552:
  2682                           
  2683                           ;main.c: 143:                     control_flag = 0x01;
  2684     0233  3001               	movlw	1
  2685     0234  1683               	bsf	3,5	;RP0=1, select bank3
  2686     0235  1703               	bsf	3,6	;RP1=1, select bank3
  2687     0236  00A4               	movwf	main@control_flag^(0+384)
  2688     0237  29E8               	goto	l4532
  2689     0238                     l4556:
  2690                           
  2691                           ;main.c: 150:                 clear_clcd_screen();
  2692     0238  0823               	movf	main@reset_flag^(0+384),w
  2693     0239  1283               	bcf	3,5	;RP0=0, select bank0
  2694     023A  1303               	bcf	3,6	;RP1=0, select bank0
  2695     023B  00A2               	movwf	view_log@reset_flag
  2696     023C  1683               	bsf	3,5	;RP0=1, select bank3
  2697     023D  1703               	bsf	3,6	;RP1=1, select bank3
  2698     023E  0825               	movf	main@key^(0+384),w
  2699     023F  120A  158A  26EF  120A  118A  	fcall	_view_log
  2700     0244  3A33               	xorlw	51
  2701     0245  1D03               	skipz
  2702     0246  2A48               	goto	u5211
  2703     0247  2A49               	goto	u5210
  2704     0248                     u5211:
  2705     0248  2A9B               	goto	l4592
  2706     0249                     u5210:
  2707     0249                     l4558:
  2708                           
  2709                           ;main.c: 151:                 control_flag = 0x01;;main.c: 152:                 break;
  2710     0249  3001               	movlw	1
  2711     024A  1683               	bsf	3,5	;RP0=1, select bank3
  2712     024B  1703               	bsf	3,6	;RP1=1, select bank3
  2713     024C  00A4               	movwf	main@control_flag^(0+384)
  2714     024D                     l4560:
  2715                           
  2716                           ;main.c: 153: 
  2717     024D  160A  118A  2563  120A  118A  	fcall	_clear_clcd_screen
  2718     0252  29E8               	goto	l4532
  2719     0253                     l4564:
  2720                           
  2721                           ;main.c: 158:                     case 0x33:
  2722     0253  160A  118A  273C  120A  118A  	fcall	_clear_log
  2723     0258                     l4566:
  2724                           
  2725                           ;main.c: 159:                         clear_clcd_screen();
  2726     0258  160A  118A  2563  120A  118A  	fcall	_clear_clcd_screen
  2727     025D                     l4568:
  2728                           
  2729                           ;main.c: 160:                         control_flag = 0x01;
  2730     025D  3001               	movlw	1
  2731     025E  1683               	bsf	3,5	;RP0=1, select bank3
  2732     025F  1703               	bsf	3,6	;RP1=1, select bank3
  2733     0260  00A4               	movwf	main@control_flag^(0+384)
  2734                           
  2735                           ;main.c: 161:                         TMR2ON = 0;
  2736     0261  2A9B               	goto	l4592
  2737     0262                     l4576:
  2738                           
  2739                           ;main.c: 174:         reset_flag = 0x00;
  2740     0262  160A  118A  2563  120A  118A  	fcall	_clear_clcd_screen
  2741     0267                     l4578:
  2742                           
  2743                           ;main.c: 175: 
  2744     0267  3003               	movlw	3
  2745     0268  1683               	bsf	3,5	;RP0=1, select bank3
  2746     0269  1703               	bsf	3,6	;RP1=1, select bank3
  2747     026A  00A4               	movwf	main@control_flag^(0+384)
  2748     026B  29FE               	goto	l4538
  2749     026C                     l4586:
  2750     026C  0825               	movf	main@key^(0+384),w
  2751     026D  1283               	bcf	3,5	;RP0=0, select bank0
  2752     026E  1303               	bcf	3,6	;RP1=0, select bank0
  2753     026F  00CE               	movwf	??_main
  2754     0270  01CF               	clrf	??_main+1
  2755     0271  084E               	movf	??_main,w
  2756     0272  00A2               	movwf	change_password@key
  2757     0273  084F               	movf	??_main+1,w
  2758     0274  00A3               	movwf	change_password@key+1
  2759     0275  1683               	bsf	3,5	;RP0=1, select bank3
  2760     0276  1703               	bsf	3,6	;RP1=1, select bank3
  2761     0277  0823               	movf	main@reset_flag^(0+384),w
  2762     0278  1283               	bcf	3,5	;RP0=0, select bank0
  2763     0279  1303               	bcf	3,6	;RP1=0, select bank0
  2764     027A  00A4               	movwf	change_password@reset_flag
  2765     027B  120A  118A  2637  120A  118A  	fcall	_change_password
  2766                           
  2767                           ; Switch size 1, requested type "simple"
  2768                           ; Number of cases is 2, Range of values is 51 to 119
  2769                           ; switch strategies available:
  2770                           ; Name         Instructions Cycles
  2771                           ; simple_byte            7     4 (average)
  2772                           ; direct_byte          218    11 (fixed)
  2773                           ; jumptable            263     9 (fixed)
  2774                           ;	Chosen strategy is simple_byte
  2775     0280  3A33               	xorlw	51	; case 51
  2776     0281  1903               	skipnz
  2777     0282  2A2E               	goto	l4550
  2778     0283  3A44               	xorlw	68	; case 119
  2779     0284  1903               	skipnz
  2780     0285  2A62               	goto	l4576
  2781     0286  2A9B               	goto	l4592
  2782     0287                     l4590:
  2783     0287  0824               	movf	main@control_flag^(0+384),w
  2784                           
  2785                           ; Switch size 1, requested type "simple"
  2786                           ; Number of cases is 6, Range of values is 1 to 9
  2787                           ; switch strategies available:
  2788                           ; Name         Instructions Cycles
  2789                           ; simple_byte           19    10 (average)
  2790                           ; direct_byte           38    11 (fixed)
  2791                           ; jumptable            263     9 (fixed)
  2792                           ;	Chosen strategy is simple_byte
  2793     0288  3A01               	xorlw	1	; case 1
  2794     0289  1903               	skipnz
  2795     028A  29C1               	goto	l4526
  2796     028B  3A03               	xorlw	3	; case 2
  2797     028C  1903               	skipnz
  2798     028D  2A06               	goto	l4544
  2799     028E  3A01               	xorlw	1	; case 3
  2800     028F  1903               	skipnz
  2801     0290  2A19               	goto	l4546
  2802     0291  3A06               	xorlw	6	; case 5
  2803     0292  1903               	skipnz
  2804     0293  2A38               	goto	l4556
  2805     0294  3A03               	xorlw	3	; case 6
  2806     0295  1903               	skipnz
  2807     0296  2A53               	goto	l4564
  2808     0297  3A0F               	xorlw	15	; case 9
  2809     0298  1903               	skipnz
  2810     0299  2A6C               	goto	l4586
  2811     029A  2A9B               	goto	l4592
  2812     029B                     l4592:
  2813     029B  1683               	bsf	3,5	;RP0=1, select bank3
  2814     029C  1703               	bsf	3,6	;RP1=1, select bank3
  2815     029D  01A3               	clrf	main@reset_flag^(0+384)
  2816     029E  287F               	goto	l4458
  2817     029F  120A  118A  280C   	ljmp	start
  2818     02A2                     __end_of_main:
  2819                           
  2820                           	psect	text1
  2821     0EEF                     __ptext1:	
  2822 ;; *************** function _view_log *****************
  2823 ;; Defined at:
  2824 ;;		line 218 in file "car_block_box_def.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  key             1    wreg     unsigned char 
  2827 ;;  reset_flag      1    2[BANK0 ] unsigned char 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  key             1    6[BANK0 ] unsigned char 
  2830 ;;  i               1    7[BANK0 ] unsigned char 
  2831 ;;  addr            1    5[BANK0 ] unsigned char 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      unsigned char 
  2834 ;; Registers used:
  2835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2841 ;;      Params:         0       1       0       0       0
  2842 ;;      Locals:         0       3       0       0       0
  2843 ;;      Temps:          0       2       0       0       0
  2844 ;;      Totals:         0       6       0       0       0
  2845 ;;Total ram usage:        6 bytes
  2846 ;; Hardware stack levels used: 1
  2847 ;; Hardware stack levels required when called: 5
  2848 ;; This function calls:
  2849 ;;		___awmod
  2850 ;;		___bmul
  2851 ;;		_clcd_print
  2852 ;;		_clcd_putch
  2853 ;;		_read_at24c04
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859     0EEF                     _view_log:	
  2860                           ;psect for function _view_log
  2861                           
  2862                           
  2863                           ;incstack = 0
  2864                           ; Regs used in _view_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2865                           ;view_log@key stored from wreg
  2866     0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  2867     0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  2868     0EF1  00A6               	movwf	view_log@key
  2869     0EF2                     l4030:
  2870                           
  2871                           ;car_block_box_def.c: 218: unsigned char view_log(unsigned char key, unsigned char reset
      +                          _flag);car_block_box_def.c: 219: {;car_block_box_def.c: 221:     clcd_print("View logs",
      +                           (0x80 + 4));
  2872     0EF2  30FA               	movlw	low (STR_23| (0+32768))
  2873     0EF3  00F6               	movwf	clcd_print@str
  2874     0EF4  3088               	movlw	high (STR_23| (0+32768))
  2875     0EF5  00F7               	movwf	clcd_print@str+1
  2876     0EF6  3084               	movlw	132
  2877     0EF7  00F8               	movwf	clcd_print@addr
  2878     0EF8  160A  118A  2769  120A  158A  	fcall	_clcd_print
  2879     0EFD                     l4032:
  2880                           
  2881                           ;car_block_box_def.c: 222:     static unsigned char log_pos = 0;;car_block_box_def.c: 22
      +                          3:     if(reset_flag == 0x23)
  2882     0EFD  3023               	movlw	35
  2883     0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  2884     0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  2885     0F00  0622               	xorwf	view_log@reset_flag,w
  2886     0F01  1D03               	btfss	3,2
  2887     0F02  2F04               	goto	u4331
  2888     0F03  2F05               	goto	u4330
  2889     0F04                     u4331:
  2890     0F04  2F08               	goto	l4038
  2891     0F05                     u4330:
  2892     0F05                     l4034:
  2893                           
  2894                           ;car_block_box_def.c: 224:     {;car_block_box_def.c: 225:         log_pos = 0;
  2895     0F05  01D3               	clrf	view_log@log_pos
  2896     0F06                     l4036:
  2897                           
  2898                           ;car_block_box_def.c: 226:         return_time = 5;
  2899     0F06  3005               	movlw	5
  2900     0F07  00D9               	movwf	_return_time
  2901     0F08                     l4038:
  2902                           
  2903                           ;car_block_box_def.c: 228:     if(return_time == 0)
  2904     0F08  0859               	movf	_return_time,w
  2905     0F09  1D03               	btfss	3,2
  2906     0F0A  2F0C               	goto	u4341
  2907     0F0B  2F0D               	goto	u4340
  2908     0F0C                     u4341:
  2909     0F0C  2F0F               	goto	l4044
  2910     0F0D                     u4340:
  2911     0F0D                     l4040:
  2912                           
  2913                           ;car_block_box_def.c: 229:         return 0x33;
  2914     0F0D  3033               	movlw	51
  2915     0F0E  2FFF               	goto	l345
  2916     0F0F                     l4044:
  2917                           
  2918                           ;car_block_box_def.c: 231:     if(key == 0x37 )
  2919     0F0F  3037               	movlw	55
  2920     0F10  0626               	xorwf	view_log@key,w
  2921     0F11  1D03               	btfss	3,2
  2922     0F12  2F14               	goto	u4351
  2923     0F13  2F15               	goto	u4350
  2924     0F14                     u4351:
  2925     0F14  2F27               	goto	l4054
  2926     0F15                     u4350:
  2927     0F15                     l4046:
  2928                           
  2929                           ;car_block_box_def.c: 232:     {;car_block_box_def.c: 233:         return_time = 5;
  2930     0F15  3005               	movlw	5
  2931     0F16  00D9               	movwf	_return_time
  2932     0F17                     l4048:
  2933                           
  2934                           ;car_block_box_def.c: 234:         if(++log_pos == log_count || log_pos == 10)
  2935     0F17  3001               	movlw	1
  2936     0F18  07D3               	addwf	view_log@log_pos,f
  2937     0F19  0853               	movf	view_log@log_pos,w
  2938     0F1A  0657               	xorwf	_log_count,w
  2939     0F1B  1903               	skipnz
  2940     0F1C  2F1E               	goto	u4361
  2941     0F1D  2F1F               	goto	u4360
  2942     0F1E                     u4361:
  2943     0F1E  2F25               	goto	l4052
  2944     0F1F                     u4360:
  2945     0F1F                     l4050:
  2946     0F1F  300A               	movlw	10
  2947     0F20  0653               	xorwf	view_log@log_pos,w
  2948     0F21  1D03               	btfss	3,2
  2949     0F22  2F24               	goto	u4371
  2950     0F23  2F25               	goto	u4370
  2951     0F24                     u4371:
  2952     0F24  2F36               	goto	l4062
  2953     0F25                     u4370:
  2954     0F25                     l4052:
  2955                           
  2956                           ;car_block_box_def.c: 235:             log_pos = 0;
  2957     0F25  01D3               	clrf	view_log@log_pos
  2958     0F26  2F36               	goto	l4062
  2959     0F27                     l4054:
  2960     0F27  302F               	movlw	47
  2961     0F28  0626               	xorwf	view_log@key,w
  2962     0F29  1D03               	btfss	3,2
  2963     0F2A  2F2C               	goto	u4381
  2964     0F2B  2F2D               	goto	u4380
  2965     0F2C                     u4381:
  2966     0F2C  2F36               	goto	l4062
  2967     0F2D                     u4380:
  2968     0F2D                     l4056:
  2969     0F2D  0853               	movf	view_log@log_pos,w
  2970     0F2E  1903               	btfsc	3,2
  2971     0F2F  2F31               	goto	u4391
  2972     0F30  2F32               	goto	u4390
  2973     0F31                     u4391:
  2974     0F31  2F36               	goto	l4062
  2975     0F32                     u4390:
  2976     0F32                     l4058:
  2977                           
  2978                           ;car_block_box_def.c: 238:     {;car_block_box_def.c: 239:         return_time = 5;
  2979     0F32  3005               	movlw	5
  2980     0F33  00D9               	movwf	_return_time
  2981     0F34                     l4060:
  2982                           
  2983                           ;car_block_box_def.c: 240:         log_pos--;
  2984     0F34  3001               	movlw	1
  2985     0F35  02D3               	subwf	view_log@log_pos,f
  2986     0F36                     l4062:
  2987                           
  2988                           ;car_block_box_def.c: 245:     unsigned char addr = 0x05 + (log_pos * 10);
  2989     0F36  300A               	movlw	10
  2990     0F37  00F2               	movwf	___bmul@multiplicand
  2991     0F38  0853               	movf	view_log@log_pos,w
  2992     0F39  160A  118A  2598  120A  158A  	fcall	___bmul
  2993     0F3E  3E05               	addlw	5
  2994     0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2995     0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2996     0F41  00A5               	movwf	view_log@addr
  2997     0F42                     l4064:
  2998                           
  2999                           ;car_block_box_def.c: 246:     for(unsigned char i = 0; i < 11; i++)
  3000     0F42  01A7               	clrf	view_log@i
  3001     0F43                     l4070:
  3002                           
  3003                           ;car_block_box_def.c: 247:         log[i] = read_at24c04(addr + i);
  3004     0F43  0827               	movf	view_log@i,w
  3005     0F44  3EA7               	addlw	(low (_log| 0))& (0+255)
  3006     0F45  0084               	movwf	4
  3007     0F46  0827               	movf	view_log@i,w
  3008     0F47  0725               	addwf	view_log@addr,w
  3009     0F48  160A  118A  266E  120A  158A  	fcall	_read_at24c04
  3010     0F4D  1383               	bcf	3,7	;select IRP bank1
  3011     0F4E  0080               	movwf	0
  3012     0F4F                     l4072:
  3013     0F4F  3001               	movlw	1
  3014     0F50  1283               	bcf	3,5	;RP0=0, select bank0
  3015     0F51  1303               	bcf	3,6	;RP1=0, select bank0
  3016     0F52  07A7               	addwf	view_log@i,f
  3017     0F53                     l4074:
  3018     0F53  300B               	movlw	11
  3019     0F54  0227               	subwf	view_log@i,w
  3020     0F55  1C03               	skipc
  3021     0F56  2F58               	goto	u4401
  3022     0F57  2F59               	goto	u4400
  3023     0F58                     u4401:
  3024     0F58  2F43               	goto	l4070
  3025     0F59                     u4400:
  3026     0F59                     l4076:
  3027                           
  3028                           ;car_block_box_def.c: 249:     clcd_putch(log_pos % 10 + '0', (0xC0 + 0));
  3029     0F59  30C0               	movlw	192
  3030     0F5A  00A0               	movwf	clcd_putch@addr
  3031     0F5B  300A               	movlw	10
  3032     0F5C  00F2               	movwf	___awmod@divisor
  3033     0F5D  3000               	movlw	0
  3034     0F5E  00F3               	movwf	___awmod@divisor+1
  3035     0F5F  0853               	movf	view_log@log_pos,w
  3036     0F60  00A3               	movwf	??_view_log
  3037     0F61  01A4               	clrf	??_view_log+1
  3038     0F62  0823               	movf	??_view_log,w
  3039     0F63  00F4               	movwf	___awmod@dividend
  3040     0F64  0824               	movf	??_view_log+1,w
  3041     0F65  00F5               	movwf	___awmod@dividend+1
  3042     0F66  120A  158A  2269  120A  158A  	fcall	___awmod
  3043     0F6B  0872               	movf	?___awmod,w
  3044     0F6C  3E30               	addlw	48
  3045     0F6D  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3046                           
  3047                           ;car_block_box_def.c: 250:     clcd_putch(log[0], (0xC0 + 2));
  3048     0F72  30C2               	movlw	194
  3049     0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3050     0F74  1303               	bcf	3,6	;RP1=0, select bank0
  3051     0F75  00A0               	movwf	clcd_putch@addr
  3052     0F76  1683               	bsf	3,5	;RP0=1, select bank1
  3053     0F77  1303               	bcf	3,6	;RP1=0, select bank1
  3054     0F78  0827               	movf	_log^(0+128),w
  3055     0F79  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3056                           
  3057                           ;car_block_box_def.c: 251:     clcd_putch(log[1], (0xC0 + 3));
  3058     0F7E  30C3               	movlw	195
  3059     0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  3060     0F80  1303               	bcf	3,6	;RP1=0, select bank0
  3061     0F81  00A0               	movwf	clcd_putch@addr
  3062     0F82  1683               	bsf	3,5	;RP0=1, select bank1
  3063     0F83  1303               	bcf	3,6	;RP1=0, select bank1
  3064     0F84  0828               	movf	(_log^(0+128)+1),w
  3065     0F85  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3066                           
  3067                           ;car_block_box_def.c: 252:     clcd_putch(':', (0xC0 + 4));
  3068     0F8A  30C4               	movlw	196
  3069     0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  3070     0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  3071     0F8D  00A0               	movwf	clcd_putch@addr
  3072     0F8E  303A               	movlw	58
  3073     0F8F  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3074                           
  3075                           ;car_block_box_def.c: 253:     clcd_putch(log[2], (0xC0 + 5));
  3076     0F94  30C5               	movlw	197
  3077     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3078     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3079     0F97  00A0               	movwf	clcd_putch@addr
  3080     0F98  1683               	bsf	3,5	;RP0=1, select bank1
  3081     0F99  1303               	bcf	3,6	;RP1=0, select bank1
  3082     0F9A  0829               	movf	(_log^(0+128)+2),w
  3083     0F9B  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3084                           
  3085                           ;car_block_box_def.c: 254:     clcd_putch(log[3], (0xC0 + 6));
  3086     0FA0  30C6               	movlw	198
  3087     0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  3088     0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  3089     0FA3  00A0               	movwf	clcd_putch@addr
  3090     0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  3091     0FA5  1303               	bcf	3,6	;RP1=0, select bank1
  3092     0FA6  082A               	movf	(_log^(0+128)+3),w
  3093     0FA7  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3094                           
  3095                           ;car_block_box_def.c: 255:     clcd_putch(':', (0xC0 + 7));
  3096     0FAC  30C7               	movlw	199
  3097     0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  3098     0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  3099     0FAF  00A0               	movwf	clcd_putch@addr
  3100     0FB0  303A               	movlw	58
  3101     0FB1  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3102                           
  3103                           ;car_block_box_def.c: 256:     clcd_putch(log[4], (0xC0 + 8));
  3104     0FB6  30C8               	movlw	200
  3105     0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  3106     0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  3107     0FB9  00A0               	movwf	clcd_putch@addr
  3108     0FBA  1683               	bsf	3,5	;RP0=1, select bank1
  3109     0FBB  1303               	bcf	3,6	;RP1=0, select bank1
  3110     0FBC  082B               	movf	(_log^(0+128)+4),w
  3111     0FBD  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3112                           
  3113                           ;car_block_box_def.c: 257:     clcd_putch(log[5], (0xC0 + 9));
  3114     0FC2  30C9               	movlw	201
  3115     0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  3116     0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  3117     0FC5  00A0               	movwf	clcd_putch@addr
  3118     0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  3119     0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  3120     0FC8  082C               	movf	(_log^(0+128)+5),w
  3121     0FC9  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3122                           
  3123                           ;car_block_box_def.c: 259:     clcd_putch(log[6], (0xC0 + 11));
  3124     0FCE  30CB               	movlw	203
  3125     0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  3126     0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  3127     0FD1  00A0               	movwf	clcd_putch@addr
  3128     0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  3129     0FD3  1303               	bcf	3,6	;RP1=0, select bank1
  3130     0FD4  082D               	movf	(_log^(0+128)+6),w
  3131     0FD5  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3132                           
  3133                           ;car_block_box_def.c: 260:     clcd_putch(log[7], (0xC0 + 12));
  3134     0FDA  30CC               	movlw	204
  3135     0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  3136     0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  3137     0FDD  00A0               	movwf	clcd_putch@addr
  3138     0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  3139     0FDF  1303               	bcf	3,6	;RP1=0, select bank1
  3140     0FE0  082E               	movf	(_log^(0+128)+7),w
  3141     0FE1  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3142                           
  3143                           ;car_block_box_def.c: 262:     clcd_putch(log[8], (0xC0 + 14));
  3144     0FE6  30CE               	movlw	206
  3145     0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  3146     0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  3147     0FE9  00A0               	movwf	clcd_putch@addr
  3148     0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  3149     0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  3150     0FEC  082F               	movf	(_log^(0+128)+8),w
  3151     0FED  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3152                           
  3153                           ;car_block_box_def.c: 263:     clcd_putch(log[9], (0xC0 + 15));
  3154     0FF2  30CF               	movlw	207
  3155     0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  3156     0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  3157     0FF5  00A0               	movwf	clcd_putch@addr
  3158     0FF6  1683               	bsf	3,5	;RP0=1, select bank1
  3159     0FF7  1303               	bcf	3,6	;RP1=0, select bank1
  3160     0FF8  0830               	movf	(_log^(0+128)+9),w
  3161     0FF9  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3162     0FFE                     l4078:
  3163                           
  3164                           ;car_block_box_def.c: 265:     return 0x32;
  3165     0FFE  3032               	movlw	50
  3166     0FFF                     l345:
  3167     0FFF  0008               	return
  3168     1000                     __end_of_view_log:
  3169                           
  3170                           	psect	text2
  3171     162B                     __ptext2:	
  3172 ;; *************** function _strcpy *****************
  3173 ;; Defined at:
  3174 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  dest            1    2[COMMON] PTR unsigned char 
  3177 ;;		 -> main@event(3), 
  3178 ;;  src             2    3[COMMON] PTR const unsigned char 
  3179 ;;		 -> STR_8(3), STR_6(3), STR_5(3), STR_4(3), 
  3180 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  d               1    7[COMMON] PTR unsigned char 
  3183 ;;		 -> main@event(3), 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    2[COMMON] PTR unsigned char 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3193 ;;      Params:         3       0       0       0       0
  3194 ;;      Locals:         1       0       0       0       0
  3195 ;;      Temps:          2       0       0       0       0
  3196 ;;      Totals:         6       0       0       0       0
  3197 ;;Total ram usage:        6 bytes
  3198 ;; Hardware stack levels used: 2
  3199 ;; Hardware stack levels required when called: 1
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207     162B                     _strcpy:	
  3208                           ;psect for function _strcpy
  3209                           
  3210     162B                     l3844:	
  3211                           ;incstack = 0
  3212                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3213                           
  3214     162B  0872               	movf	strcpy@dest,w
  3215     162C  00F7               	movwf	strcpy@d
  3216     162D                     l3846:
  3217     162D  0874               	movf	strcpy@src+1,w
  3218     162E  00F6               	movwf	??_strcpy+1
  3219     162F  0873               	movf	strcpy@src,w
  3220     1630  00F5               	movwf	??_strcpy
  3221     1631  0AF3               	incf	strcpy@src,f
  3222     1632  1903               	skipnz
  3223     1633  0AF4               	incf	strcpy@src+1,f
  3224     1634  0876               	movf	??_strcpy+1,w
  3225     1635  1283               	bcf	3,5	;RP0=0, select bank0
  3226     1636  1303               	bcf	3,6	;RP1=0, select bank0
  3227     1637  00FF               	movwf	btemp+1
  3228     1638  0875               	movf	??_strcpy,w
  3229     1639  0084               	movwf	4
  3230     163A  160A  118A  2000  160A  118A  	fcall	stringtab
  3231     163F  00FF               	movwf	btemp+1
  3232     1640  0877               	movf	strcpy@d,w
  3233     1641  0AF7               	incf	strcpy@d,f
  3234     1642  0084               	movwf	4
  3235     1643  087F               	movf	btemp+1,w
  3236     1644  1783               	bsf	3,7	;select IRP bank2
  3237     1645  0080               	movwf	0
  3238     1646  0800               	movf	0,w
  3239     1647  1D03               	btfss	3,2
  3240     1648  2E4A               	goto	u4131
  3241     1649  2E4B               	goto	u4130
  3242     164A                     u4131:
  3243     164A  2E2D               	goto	l3846
  3244     164B                     u4130:
  3245     164B                     l995:
  3246     164B  0008               	return
  3247     164C                     __end_of_strcpy:
  3248                           
  3249                           	psect	text3
  3250     0C42                     __ptext3:	
  3251 ;; *************** function _read_digital_keypad *****************
  3252 ;; Defined at:
  3253 ;;		line 16 in file "digital_keypad.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  key             1    2[COMMON] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      unsigned char 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3267 ;;      Params:         0       0       0       0       0
  3268 ;;      Locals:         1       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0
  3270 ;;      Totals:         1       0       0       0       0
  3271 ;;Total ram usage:        1 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 1
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281     0C42                     _read_digital_keypad:	
  3282                           ;psect for function _read_digital_keypad
  3283                           
  3284     0C42                     l3782:	
  3285                           ;incstack = 0
  3286                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
  3287                           
  3288                           
  3289                           ;digital_keypad.c: 18:     static unsigned char once, pre_key, long_press;;digital_keypa
      +                          d.c: 19:     unsigned char key = PORTB & 0x3F;
  3290     0C42  1283               	bcf	3,5	;RP0=0, select bank0
  3291     0C43  1303               	bcf	3,6	;RP1=0, select bank0
  3292     0C44  0806               	movf	6,w	;volatile
  3293     0C45  00F2               	movwf	read_digital_keypad@key
  3294     0C46                     l3784:
  3295     0C46  303F               	movlw	63
  3296     0C47  05F2               	andwf	read_digital_keypad@key,f
  3297     0C48                     l3786:
  3298                           
  3299                           ;digital_keypad.c: 21:     if(key != 0x3F && once == 0)
  3300     0C48  303F               	movlw	63
  3301     0C49  0672               	xorwf	read_digital_keypad@key,w
  3302     0C4A  1903               	btfsc	3,2
  3303     0C4B  2C4D               	goto	u4001
  3304     0C4C  2C4E               	goto	u4000
  3305     0C4D                     u4001:
  3306     0C4D  2C59               	goto	l3796
  3307     0C4E                     u4000:
  3308     0C4E                     l3788:
  3309     0C4E  087B               	movf	read_digital_keypad@once,w
  3310     0C4F  1D03               	btfss	3,2
  3311     0C50  2C52               	goto	u4011
  3312     0C51  2C53               	goto	u4010
  3313     0C52                     u4011:
  3314     0C52  2C59               	goto	l3796
  3315     0C53                     u4010:
  3316     0C53                     l3790:
  3317                           
  3318                           ;digital_keypad.c: 22:     {;digital_keypad.c: 23:         once = 1;
  3319     0C53  3001               	movlw	1
  3320     0C54  00FB               	movwf	read_digital_keypad@once
  3321     0C55                     l3792:
  3322                           
  3323                           ;digital_keypad.c: 24:         pre_key = key;
  3324     0C55  0872               	movf	read_digital_keypad@key,w
  3325     0C56  00DB               	movwf	read_digital_keypad@pre_key
  3326     0C57                     l3794:
  3327                           
  3328                           ;digital_keypad.c: 25:         long_press = 0;
  3329     0C57  01DA               	clrf	read_digital_keypad@long_press
  3330                           
  3331                           ;digital_keypad.c: 26:     }
  3332     0C58  2C6D               	goto	l3808
  3333     0C59                     l3796:
  3334     0C59  303F               	movlw	63
  3335     0C5A  0672               	xorwf	read_digital_keypad@key,w
  3336     0C5B  1D03               	btfss	3,2
  3337     0C5C  2C5E               	goto	u4021
  3338     0C5D  2C5F               	goto	u4020
  3339     0C5E                     u4021:
  3340     0C5E  2C6D               	goto	l3808
  3341     0C5F                     u4020:
  3342     0C5F                     l3798:
  3343     0C5F  037B               	decf	read_digital_keypad@once,w
  3344     0C60  1D03               	btfss	3,2
  3345     0C61  2C63               	goto	u4031
  3346     0C62  2C64               	goto	u4030
  3347     0C63                     u4031:
  3348     0C63  2C6D               	goto	l3808
  3349     0C64                     u4030:
  3350     0C64                     l3800:
  3351                           
  3352                           ;digital_keypad.c: 28:     {;digital_keypad.c: 29:         once = 0;
  3353     0C64  01FB               	clrf	read_digital_keypad@once
  3354     0C65                     l3802:
  3355                           
  3356                           ;digital_keypad.c: 30:         if(long_press < 15)
  3357     0C65  300F               	movlw	15
  3358     0C66  025A               	subwf	read_digital_keypad@long_press,w
  3359     0C67  1803               	skipnc
  3360     0C68  2C6A               	goto	u4041
  3361     0C69  2C6B               	goto	u4040
  3362     0C6A                     u4041:
  3363     0C6A  2C6D               	goto	l3808
  3364     0C6B                     u4040:
  3365     0C6B                     l3804:
  3366                           
  3367                           ;digital_keypad.c: 31:             return pre_key;
  3368     0C6B  085B               	movf	read_digital_keypad@pre_key,w
  3369     0C6C  2CA6               	goto	l247
  3370     0C6D                     l3808:
  3371                           
  3372                           ;digital_keypad.c: 35:     if(once == 1 && long_press < 16)
  3373     0C6D  037B               	decf	read_digital_keypad@once,w
  3374     0C6E  1D03               	btfss	3,2
  3375     0C6F  2C71               	goto	u4051
  3376     0C70  2C72               	goto	u4050
  3377     0C71                     u4051:
  3378     0C71  2C7B               	goto	l3814
  3379     0C72                     u4050:
  3380     0C72                     l3810:
  3381     0C72  3010               	movlw	16
  3382     0C73  025A               	subwf	read_digital_keypad@long_press,w
  3383     0C74  1803               	skipnc
  3384     0C75  2C77               	goto	u4061
  3385     0C76  2C78               	goto	u4060
  3386     0C77                     u4061:
  3387     0C77  2C7B               	goto	l3814
  3388     0C78                     u4060:
  3389     0C78                     l3812:
  3390                           
  3391                           ;digital_keypad.c: 36:         long_press++;
  3392     0C78  3001               	movlw	1
  3393     0C79  07DA               	addwf	read_digital_keypad@long_press,f
  3394     0C7A  2CA5               	goto	l3840
  3395     0C7B                     l3814:
  3396     0C7B  037B               	decf	read_digital_keypad@once,w
  3397     0C7C  1D03               	btfss	3,2
  3398     0C7D  2C7F               	goto	u4071
  3399     0C7E  2C80               	goto	u4070
  3400     0C7F                     u4071:
  3401     0C7F  2C90               	goto	l3828
  3402     0C80                     u4070:
  3403     0C80                     l3816:
  3404     0C80  3010               	movlw	16
  3405     0C81  065A               	xorwf	read_digital_keypad@long_press,w
  3406     0C82  1D03               	btfss	3,2
  3407     0C83  2C85               	goto	u4081
  3408     0C84  2C86               	goto	u4080
  3409     0C85                     u4081:
  3410     0C85  2C90               	goto	l3828
  3411     0C86                     u4080:
  3412     0C86                     l3818:
  3413     0C86  3037               	movlw	55
  3414     0C87  0672               	xorwf	read_digital_keypad@key,w
  3415     0C88  1D03               	btfss	3,2
  3416     0C89  2C8B               	goto	u4091
  3417     0C8A  2C8C               	goto	u4090
  3418     0C8B                     u4091:
  3419     0C8B  2C90               	goto	l3828
  3420     0C8C                     u4090:
  3421     0C8C                     l3820:
  3422                           
  3423                           ;digital_keypad.c: 39:     {;digital_keypad.c: 40:         long_press++;
  3424     0C8C  3001               	movlw	1
  3425     0C8D  07DA               	addwf	read_digital_keypad@long_press,f
  3426     0C8E                     l3822:
  3427                           
  3428                           ;digital_keypad.c: 41:         return 0x80;
  3429     0C8E  3080               	movlw	128
  3430     0C8F  2CA6               	goto	l247
  3431     0C90                     l3828:
  3432     0C90  037B               	decf	read_digital_keypad@once,w
  3433     0C91  1D03               	btfss	3,2
  3434     0C92  2C94               	goto	u4101
  3435     0C93  2C95               	goto	u4100
  3436     0C94                     u4101:
  3437     0C94  2CA5               	goto	l3840
  3438     0C95                     u4100:
  3439     0C95                     l3830:
  3440     0C95  3010               	movlw	16
  3441     0C96  065A               	xorwf	read_digital_keypad@long_press,w
  3442     0C97  1D03               	btfss	3,2
  3443     0C98  2C9A               	goto	u4111
  3444     0C99  2C9B               	goto	u4110
  3445     0C9A                     u4111:
  3446     0C9A  2CA5               	goto	l3840
  3447     0C9B                     u4110:
  3448     0C9B                     l3832:
  3449     0C9B  302F               	movlw	47
  3450     0C9C  0672               	xorwf	read_digital_keypad@key,w
  3451     0C9D  1D03               	btfss	3,2
  3452     0C9E  2CA0               	goto	u4121
  3453     0C9F  2CA1               	goto	u4120
  3454     0CA0                     u4121:
  3455     0CA0  2CA5               	goto	l3840
  3456     0CA1                     u4120:
  3457     0CA1                     l3834:
  3458                           
  3459                           ;digital_keypad.c: 44:     {;digital_keypad.c: 45:         long_press++;
  3460     0CA1  3001               	movlw	1
  3461     0CA2  07DA               	addwf	read_digital_keypad@long_press,f
  3462     0CA3                     l3836:
  3463                           
  3464                           ;digital_keypad.c: 46:         return 0x90;
  3465     0CA3  3090               	movlw	144
  3466     0CA4  2CA6               	goto	l247
  3467     0CA5                     l3840:
  3468                           
  3469                           ;digital_keypad.c: 49:     return 0x3F;
  3470     0CA5  303F               	movlw	63
  3471     0CA6                     l247:
  3472     0CA6  0008               	return
  3473     0CA7                     __end_of_read_digital_keypad:
  3474                           
  3475                           	psect	text4
  3476     1586                     __ptext4:	
  3477 ;; *************** function _read_adc *****************
  3478 ;; Defined at:
  3479 ;;		line 12 in file "adc.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  adc_reg_val     2    4[COMMON] unsigned short 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  2    2[COMMON] unsigned short 
  3486 ;; Registers used:
  3487 ;;		wreg
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3493 ;;      Params:         2       0       0       0       0
  3494 ;;      Locals:         2       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0
  3496 ;;      Totals:         4       0       0       0       0
  3497 ;;Total ram usage:        4 bytes
  3498 ;; Hardware stack levels used: 1
  3499 ;; Hardware stack levels required when called: 1
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_main
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507     1586                     _read_adc:	
  3508                           ;psect for function _read_adc
  3509                           
  3510     1586                     l3848:	
  3511                           ;incstack = 0
  3512                           ; Regs used in _read_adc: [wreg]
  3513                           
  3514                           
  3515                           ;adc.c: 14:     unsigned short adc_reg_val;;adc.c: 17:     GO = 1;
  3516     1586  1283               	bcf	3,5	;RP0=0, select bank0
  3517     1587  1303               	bcf	3,6	;RP1=0, select bank0
  3518     1588  151F               	bsf	31,2	;volatile
  3519     1589                     l224:	
  3520                           ;adc.c: 20:     while (nDONE);
  3521                           
  3522     1589  191F               	btfsc	31,2	;volatile
  3523     158A  2D8C               	goto	u4141
  3524     158B  2D8D               	goto	u4140
  3525     158C                     u4141:
  3526     158C  2D89               	goto	l224
  3527     158D                     u4140:
  3528     158D                     l3850:
  3529                           
  3530                           ;adc.c: 23:     adc_reg_val = (unsigned short)((ADRESH << 8) | ADRESL);
  3531     158D  081E               	movf	30,w	;volatile
  3532     158E  00F5               	movwf	read_adc@adc_reg_val+1
  3533     158F  1683               	bsf	3,5	;RP0=1, select bank1
  3534     1590  1303               	bcf	3,6	;RP1=0, select bank1
  3535     1591  081E               	movf	30,w	;volatile
  3536     1592  00F4               	movwf	read_adc@adc_reg_val
  3537                           
  3538                           ;adc.c: 25:     return adc_reg_val;
  3539     1593  0875               	movf	read_adc@adc_reg_val+1,w
  3540     1594  00F3               	movwf	?_read_adc+1
  3541     1595  0874               	movf	read_adc@adc_reg_val,w
  3542     1596  00F2               	movwf	?_read_adc
  3543     1597                     l227:
  3544     1597  0008               	return
  3545     1598                     __end_of_read_adc:
  3546                           
  3547                           	psect	text5
  3548     0E39                     __ptext5:	
  3549 ;; *************** function _menu_screen *****************
  3550 ;; Defined at:
  3551 ;;		line 179 in file "car_block_box_def.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;  key             1    wreg     unsigned char 
  3554 ;;  reset_flag      1    2[BANK0 ] unsigned char 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  key             1    5[BANK0 ] unsigned char 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      unsigned char 
  3559 ;; Registers used:
  3560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3566 ;;      Params:         0       1       0       0       0
  3567 ;;      Locals:         0       1       0       0       0
  3568 ;;      Temps:          0       2       0       0       0
  3569 ;;      Totals:         0       4       0       0       0
  3570 ;;Total ram usage:        4 bytes
  3571 ;; Hardware stack levels used: 1
  3572 ;; Hardware stack levels required when called: 3
  3573 ;; This function calls:
  3574 ;;		_clcd_print
  3575 ;;		_clcd_putch
  3576 ;;		_clear_clcd_screen
  3577 ;; This function is called by:
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582     0E39                     _menu_screen:	
  3583                           ;psect for function _menu_screen
  3584                           
  3585                           
  3586                           ;incstack = 0
  3587                           ; Regs used in _menu_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3588                           ;menu_screen@key stored from wreg
  3589     0E39  1283               	bcf	3,5	;RP0=0, select bank0
  3590     0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  3591     0E3B  00A5               	movwf	menu_screen@key
  3592     0E3C                     l3978:
  3593                           
  3594                           ;car_block_box_def.c: 179: unsigned char menu_screen(unsigned char key, unsigned char re
      +                          set_flag);car_block_box_def.c: 180: {;car_block_box_def.c: 181:     static unsigned char
      +                           menu_pos;;car_block_box_def.c: 182:     if(reset_flag == 0x55)
  3595     0E3C  3055               	movlw	85
  3596     0E3D  0622               	xorwf	menu_screen@reset_flag,w
  3597     0E3E  1D03               	btfss	3,2
  3598     0E3F  2E41               	goto	u4261
  3599     0E40  2E42               	goto	u4260
  3600     0E41                     u4261:
  3601     0E41  2E4C               	goto	l3986
  3602     0E42                     u4260:
  3603     0E42                     l3980:
  3604                           
  3605                           ;car_block_box_def.c: 183:     {;car_block_box_def.c: 184:         clear_clcd_screen();
  3606     0E42  160A  118A  2563  120A  158A  	fcall	_clear_clcd_screen
  3607     0E47                     l3982:
  3608                           
  3609                           ;car_block_box_def.c: 185:         menu_pos = 0;
  3610     0E47  1283               	bcf	3,5	;RP0=0, select bank0
  3611     0E48  1303               	bcf	3,6	;RP1=0, select bank0
  3612     0E49  01D4               	clrf	menu_screen@menu_pos
  3613     0E4A                     l3984:
  3614                           
  3615                           ;car_block_box_def.c: 186:         return_time = 6;
  3616     0E4A  3006               	movlw	6
  3617     0E4B  00D9               	movwf	_return_time
  3618     0E4C                     l3986:
  3619                           
  3620                           ;car_block_box_def.c: 188:     if(return_time == 0)
  3621     0E4C  0859               	movf	_return_time,w
  3622     0E4D  1D03               	btfss	3,2
  3623     0E4E  2E50               	goto	u4271
  3624     0E4F  2E51               	goto	u4270
  3625     0E50                     u4271:
  3626     0E50  2E53               	goto	l3992
  3627     0E51                     u4270:
  3628     0E51                     l3988:
  3629                           
  3630                           ;car_block_box_def.c: 189:         return 0x33;
  3631     0E51  3033               	movlw	51
  3632     0E52  2EEE               	goto	l333
  3633     0E53                     l3992:
  3634                           
  3635                           ;car_block_box_def.c: 191:     if(key == 0x37 && menu_pos < 4)
  3636     0E53  3037               	movlw	55
  3637     0E54  0625               	xorwf	menu_screen@key,w
  3638     0E55  1D03               	btfss	3,2
  3639     0E56  2E58               	goto	u4281
  3640     0E57  2E59               	goto	u4280
  3641     0E58                     u4281:
  3642     0E58  2E6B               	goto	l4002
  3643     0E59                     u4280:
  3644     0E59                     l3994:
  3645     0E59  3004               	movlw	4
  3646     0E5A  0254               	subwf	menu_screen@menu_pos,w
  3647     0E5B  1803               	skipnc
  3648     0E5C  2E5E               	goto	u4291
  3649     0E5D  2E5F               	goto	u4290
  3650     0E5E                     u4291:
  3651     0E5E  2E6B               	goto	l4002
  3652     0E5F                     u4290:
  3653     0E5F                     l3996:
  3654                           
  3655                           ;car_block_box_def.c: 192:     {;car_block_box_def.c: 193:         clear_clcd_screen();
  3656     0E5F  160A  118A  2563  120A  158A  	fcall	_clear_clcd_screen
  3657     0E64                     l3998:
  3658                           
  3659                           ;car_block_box_def.c: 194:         menu_pos++;
  3660     0E64  3001               	movlw	1
  3661     0E65  1283               	bcf	3,5	;RP0=0, select bank0
  3662     0E66  1303               	bcf	3,6	;RP1=0, select bank0
  3663     0E67  07D4               	addwf	menu_screen@menu_pos,f
  3664     0E68                     l4000:
  3665                           
  3666                           ;car_block_box_def.c: 195:         return_time = 5;
  3667     0E68  3005               	movlw	5
  3668     0E69  00D9               	movwf	_return_time
  3669                           
  3670                           ;car_block_box_def.c: 196:     }
  3671     0E6A  2E80               	goto	l4012
  3672     0E6B                     l4002:
  3673     0E6B  302F               	movlw	47
  3674     0E6C  0625               	xorwf	menu_screen@key,w
  3675     0E6D  1D03               	btfss	3,2
  3676     0E6E  2E70               	goto	u4301
  3677     0E6F  2E71               	goto	u4300
  3678     0E70                     u4301:
  3679     0E70  2E80               	goto	l4012
  3680     0E71                     u4300:
  3681     0E71                     l4004:
  3682     0E71  0854               	movf	menu_screen@menu_pos,w
  3683     0E72  1903               	btfsc	3,2
  3684     0E73  2E75               	goto	u4311
  3685     0E74  2E76               	goto	u4310
  3686     0E75                     u4311:
  3687     0E75  2E80               	goto	l4012
  3688     0E76                     u4310:
  3689     0E76                     l4006:
  3690                           
  3691                           ;car_block_box_def.c: 198:     {;car_block_box_def.c: 199:         clear_clcd_screen();
  3692     0E76  160A  118A  2563  120A  158A  	fcall	_clear_clcd_screen
  3693     0E7B                     l4008:
  3694                           
  3695                           ;car_block_box_def.c: 200:         menu_pos--;
  3696     0E7B  3001               	movlw	1
  3697     0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  3698     0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  3699     0E7E  02D4               	subwf	menu_screen@menu_pos,f
  3700     0E7F  2E68               	goto	l4000
  3701     0E80                     l4012:
  3702                           
  3703                           ;car_block_box_def.c: 203:     if(menu_pos == 4)
  3704     0E80  3004               	movlw	4
  3705     0E81  0654               	xorwf	menu_screen@menu_pos,w
  3706     0E82  1D03               	btfss	3,2
  3707     0E83  2E85               	goto	u4321
  3708     0E84  2E86               	goto	u4320
  3709     0E85                     u4321:
  3710     0E85  2EB9               	goto	l4020
  3711     0E86                     u4320:
  3712     0E86                     l4014:
  3713                           
  3714                           ;car_block_box_def.c: 204:     {;car_block_box_def.c: 205:         clcd_putch('*', (0xC0
      +                           + 0));
  3715     0E86  30C0               	movlw	192
  3716     0E87  00A0               	movwf	clcd_putch@addr
  3717     0E88  302A               	movlw	42
  3718     0E89  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3719     0E8E                     l4016:
  3720                           
  3721                           ;car_block_box_def.c: 206:         clcd_print(menu[menu_pos - 1], (0x80 + 2));
  3722     0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  3723     0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  3724     0E90  0854               	movf	menu_screen@menu_pos,w
  3725     0E91  00A3               	movwf	??_menu_screen
  3726     0E92  0723               	addwf	??_menu_screen,w
  3727     0E93  3ED0               	addlw	(low ((_menu| 0+254)))& (0+255)
  3728     0E94  0084               	movwf	4
  3729     0E95  1383               	bcf	3,7	;select IRP bank1
  3730     0E96  0800               	movf	0,w
  3731     0E97  00F6               	movwf	clcd_print@str
  3732     0E98  0A84               	incf	4,f
  3733     0E99  0800               	movf	0,w
  3734     0E9A  0384               	decf	4,f
  3735     0E9B  00F7               	movwf	clcd_print@str+1
  3736     0E9C  3082               	movlw	130
  3737     0E9D  00F8               	movwf	clcd_print@addr
  3738     0E9E  160A  118A  2769  120A  158A  	fcall	_clcd_print
  3739     0EA3                     l4018:
  3740                           
  3741                           ;car_block_box_def.c: 207:         clcd_print(menu[menu_pos],(0xC0 + 2));
  3742     0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  3743     0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  3744     0EA5  0854               	movf	menu_screen@menu_pos,w
  3745     0EA6  00A3               	movwf	??_menu_screen
  3746     0EA7  0723               	addwf	??_menu_screen,w
  3747     0EA8  3ED2               	addlw	(low (_menu| 0))& (0+255)
  3748     0EA9  0084               	movwf	4
  3749     0EAA  1383               	bcf	3,7	;select IRP bank1
  3750     0EAB  0800               	movf	0,w
  3751     0EAC  00F6               	movwf	clcd_print@str
  3752     0EAD  0A84               	incf	4,f
  3753     0EAE  0800               	movf	0,w
  3754     0EAF  0384               	decf	4,f
  3755     0EB0  00F7               	movwf	clcd_print@str+1
  3756     0EB1  30C2               	movlw	194
  3757     0EB2  00F8               	movwf	clcd_print@addr
  3758     0EB3  160A  118A  2769  120A  158A  	fcall	_clcd_print
  3759                           
  3760                           ;car_block_box_def.c: 208:     }
  3761     0EB8  2EEB               	goto	l4026
  3762     0EB9                     l4020:
  3763                           
  3764                           ;car_block_box_def.c: 210:     {;car_block_box_def.c: 211:         clcd_putch('*', (0x80
      +                           + 0));
  3765     0EB9  3080               	movlw	128
  3766     0EBA  00A0               	movwf	clcd_putch@addr
  3767     0EBB  302A               	movlw	42
  3768     0EBC  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  3769     0EC1                     l4022:
  3770                           
  3771                           ;car_block_box_def.c: 212:         clcd_print(menu[menu_pos], (0x80 + 2));
  3772     0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  3773     0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  3774     0EC3  0854               	movf	menu_screen@menu_pos,w
  3775     0EC4  00A3               	movwf	??_menu_screen
  3776     0EC5  0723               	addwf	??_menu_screen,w
  3777     0EC6  3ED2               	addlw	(low (_menu| 0))& (0+255)
  3778     0EC7  0084               	movwf	4
  3779     0EC8  1383               	bcf	3,7	;select IRP bank1
  3780     0EC9  0800               	movf	0,w
  3781     0ECA  00F6               	movwf	clcd_print@str
  3782     0ECB  0A84               	incf	4,f
  3783     0ECC  0800               	movf	0,w
  3784     0ECD  0384               	decf	4,f
  3785     0ECE  00F7               	movwf	clcd_print@str+1
  3786     0ECF  3082               	movlw	130
  3787     0ED0  00F8               	movwf	clcd_print@addr
  3788     0ED1  160A  118A  2769  120A  158A  	fcall	_clcd_print
  3789     0ED6                     l4024:
  3790                           
  3791                           ;car_block_box_def.c: 213:         clcd_print(menu[menu_pos + 1],(0xC0 + 2));
  3792     0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  3793     0ED7  1303               	bcf	3,6	;RP1=0, select bank0
  3794     0ED8  0854               	movf	menu_screen@menu_pos,w
  3795     0ED9  00A3               	movwf	??_menu_screen
  3796     0EDA  0723               	addwf	??_menu_screen,w
  3797     0EDB  3ED4               	addlw	(low ((_menu| 0+2)))& (0+255)
  3798     0EDC  0084               	movwf	4
  3799     0EDD  1383               	bcf	3,7	;select IRP bank1
  3800     0EDE  0800               	movf	0,w
  3801     0EDF  00F6               	movwf	clcd_print@str
  3802     0EE0  0A84               	incf	4,f
  3803     0EE1  0800               	movf	0,w
  3804     0EE2  0384               	decf	4,f
  3805     0EE3  00F7               	movwf	clcd_print@str+1
  3806     0EE4  30C2               	movlw	194
  3807     0EE5  00F8               	movwf	clcd_print@addr
  3808     0EE6  160A  118A  2769  120A  158A  	fcall	_clcd_print
  3809     0EEB                     l4026:
  3810                           
  3811                           ;car_block_box_def.c: 215:     return menu_pos;
  3812     0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  3813     0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  3814     0EED  0854               	movf	menu_screen@menu_pos,w
  3815     0EEE                     l333:
  3816     0EEE  0008               	return
  3817     0EEF                     __end_of_menu_screen:
  3818                           
  3819                           	psect	text6
  3820     02A2                     __ptext6:	
  3821 ;; *************** function _login *****************
  3822 ;; Defined at:
  3823 ;;		line 81 in file "car_block_box_def.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  key             1    wreg     unsigned char 
  3826 ;;  reset_flag      1    2[BANK0 ] unsigned char 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  key             1   10[BANK0 ] unsigned char 
  3829 ;;  j               1   11[BANK0 ] unsigned char 
  3830 ;;  stored_pwd      4    6[BANK0 ] unsigned char [4]
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      unsigned char 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3840 ;;      Params:         0       1       0       0       0
  3841 ;;      Locals:         0       6       0       0       0
  3842 ;;      Temps:          0       3       0       0       0
  3843 ;;      Totals:         0      10       0       0       0
  3844 ;;Total ram usage:       10 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 5
  3847 ;; This function calls:
  3848 ;;		___awdiv
  3849 ;;		___awmod
  3850 ;;		_clcd_print
  3851 ;;		_clcd_putch
  3852 ;;		_clcd_write
  3853 ;;		_clear_clcd_screen
  3854 ;;		_read_at24c04
  3855 ;;		_strncmp
  3856 ;; This function is called by:
  3857 ;;		_main
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861     02A2                     _login:	
  3862                           ;psect for function _login
  3863                           
  3864                           
  3865                           ;incstack = 0
  3866                           ; Regs used in _login: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3867                           ;login@key stored from wreg
  3868     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  3869     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  3870     02A4  00AA               	movwf	login@key
  3871     02A5                     l3860:
  3872                           
  3873                           ;car_block_box_def.c: 81: unsigned char login(unsigned char key, unsigned char reset_fla
      +                          g);car_block_box_def.c: 82: {;car_block_box_def.c: 83:     static char user_password[4];
      +                          ;car_block_box_def.c: 84:     static unsigned char i, attempt_left;;car_block_box_def.c:
      +                           86:     if(reset_flag == 0x11)
  3874     02A5  3011               	movlw	17
  3875     02A6  0622               	xorwf	login@reset_flag,w
  3876     02A7  1D03               	btfss	3,2
  3877     02A8  2AAA               	goto	u4151
  3878     02A9  2AAB               	goto	u4150
  3879     02AA                     u4151:
  3880     02AA  2ABA               	goto	l3868
  3881     02AB                     u4150:
  3882     02AB                     l3862:
  3883                           
  3884                           ;car_block_box_def.c: 87:     {;car_block_box_def.c: 88:         key = 0x3F;
  3885     02AB  303F               	movlw	63
  3886     02AC  00AA               	movwf	login@key
  3887                           
  3888                           ;car_block_box_def.c: 89:         attempt_left = 3;
  3889     02AD  3003               	movlw	3
  3890     02AE  00D5               	movwf	login@attempt_left
  3891     02AF                     l3864:
  3892                           
  3893                           ;car_block_box_def.c: 91:         user_password[0] = '\0';
  3894     02AF  1683               	bsf	3,5	;RP0=1, select bank1
  3895     02B0  1303               	bcf	3,6	;RP1=0, select bank1
  3896     02B1  01C2               	clrf	login@user_password^(0+128)
  3897                           
  3898                           ;car_block_box_def.c: 92:         user_password[1] = '\0';
  3899     02B2  01C3               	clrf	(login@user_password^(0+128)+1)
  3900                           
  3901                           ;car_block_box_def.c: 93:         user_password[2] = '\0';
  3902     02B3  01C4               	clrf	(login@user_password^(0+128)+2)
  3903                           
  3904                           ;car_block_box_def.c: 94:         user_password[3] = '\0';
  3905     02B4  01C5               	clrf	(login@user_password^(0+128)+3)
  3906                           
  3907                           ;car_block_box_def.c: 95:         i = 0;
  3908     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  3909     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  3910     02B7  01D6               	clrf	login@i
  3911     02B8                     l3866:
  3912                           
  3913                           ;car_block_box_def.c: 96:         return_time = 5;
  3914     02B8  3005               	movlw	5
  3915     02B9  00D9               	movwf	_return_time
  3916     02BA                     l3868:
  3917                           
  3918                           ;car_block_box_def.c: 98:     if(return_time == 0)
  3919     02BA  0859               	movf	_return_time,w
  3920     02BB  1D03               	btfss	3,2
  3921     02BC  2ABE               	goto	u4161
  3922     02BD  2ABF               	goto	u4160
  3923     02BE                     u4161:
  3924     02BE  2AC1               	goto	l3874
  3925     02BF                     u4160:
  3926     02BF                     l3870:
  3927                           
  3928                           ;car_block_box_def.c: 99:     {;car_block_box_def.c: 100:         return 0x33;
  3929     02BF  3033               	movlw	51
  3930     02C0  2C6C               	goto	l313
  3931     02C1                     l3874:
  3932                           
  3933                           ;car_block_box_def.c: 103:     _delay((unsigned long)((50)*(20000000/4000.0)));
  3934     02C1  3002               	movlw	2
  3935     02C2  1283               	bcf	3,5	;RP0=0, select bank0
  3936     02C3  1303               	bcf	3,6	;RP1=0, select bank0
  3937     02C4  00A5               	movwf	??_login+2
  3938     02C5  3045               	movlw	69
  3939     02C6  00A4               	movwf	??_login+1
  3940     02C7  30A9               	movlw	169
  3941     02C8  00A3               	movwf	??_login
  3942     02C9                     u5257:
  3943     02C9  0BA3               	decfsz	??_login,f
  3944     02CA  2AC9               	goto	u5257
  3945     02CB  0BA4               	decfsz	??_login+1,f
  3946     02CC  2AC9               	goto	u5257
  3947     02CD  0BA5               	decfsz	??_login+2,f
  3948     02CE  2AC9               	goto	u5257
  3949     02CF                     l3876:
  3950                           
  3951                           ;car_block_box_def.c: 104:     if(key == 0x37 && i < 4)
  3952     02CF  3037               	movlw	55
  3953     02D0  1283               	bcf	3,5	;RP0=0, select bank0
  3954     02D1  1303               	bcf	3,6	;RP1=0, select bank0
  3955     02D2  062A               	xorwf	login@key,w
  3956     02D3  1D03               	btfss	3,2
  3957     02D4  2AD6               	goto	u4171
  3958     02D5  2AD7               	goto	u4170
  3959     02D6                     u4171:
  3960     02D6  2AF3               	goto	l3888
  3961     02D7                     u4170:
  3962     02D7                     l3878:
  3963     02D7  3004               	movlw	4
  3964     02D8  0256               	subwf	login@i,w
  3965     02D9  1803               	skipnc
  3966     02DA  2ADC               	goto	u4181
  3967     02DB  2ADD               	goto	u4180
  3968     02DC                     u4181:
  3969     02DC  2AF3               	goto	l3888
  3970     02DD                     u4180:
  3971     02DD                     l3880:
  3972                           
  3973                           ;car_block_box_def.c: 105:     {;car_block_box_def.c: 106:         clcd_putch('*', (0xC0
      +                           + 4 + i));
  3974     02DD  0856               	movf	login@i,w
  3975     02DE  3EC4               	addlw	196
  3976     02DF  00A0               	movwf	clcd_putch@addr
  3977     02E0  302A               	movlw	42
  3978     02E1  160A  118A  25BE  120A  118A  	fcall	_clcd_putch
  3979     02E6                     l3882:
  3980                           
  3981                           ;car_block_box_def.c: 107:         user_password[i] = '1';
  3982     02E6  1283               	bcf	3,5	;RP0=0, select bank0
  3983     02E7  1303               	bcf	3,6	;RP1=0, select bank0
  3984     02E8  0856               	movf	login@i,w
  3985     02E9  3EC2               	addlw	(low (login@user_password| 0))& (0+255)
  3986     02EA  0084               	movwf	4
  3987     02EB  3031               	movlw	49
  3988     02EC  1383               	bcf	3,7	;select IRP bank1
  3989     02ED  0080               	movwf	0
  3990     02EE                     l3884:
  3991                           
  3992                           ;car_block_box_def.c: 108:         i++;
  3993     02EE  3001               	movlw	1
  3994     02EF  07D6               	addwf	login@i,f
  3995     02F0                     l3886:
  3996                           
  3997                           ;car_block_box_def.c: 109:         return_time = 5;
  3998     02F0  3005               	movlw	5
  3999     02F1  00D9               	movwf	_return_time
  4000                           
  4001                           ;car_block_box_def.c: 110:     }
  4002     02F2  2B11               	goto	l3900
  4003     02F3                     l3888:
  4004     02F3  302F               	movlw	47
  4005     02F4  062A               	xorwf	login@key,w
  4006     02F5  1D03               	btfss	3,2
  4007     02F6  2AF8               	goto	u4191
  4008     02F7  2AF9               	goto	u4190
  4009     02F8                     u4191:
  4010     02F8  2B11               	goto	l3900
  4011     02F9                     u4190:
  4012     02F9                     l3890:
  4013     02F9  3004               	movlw	4
  4014     02FA  0256               	subwf	login@i,w
  4015     02FB  1803               	skipnc
  4016     02FC  2AFE               	goto	u4201
  4017     02FD  2AFF               	goto	u4200
  4018     02FE                     u4201:
  4019     02FE  2B11               	goto	l3900
  4020     02FF                     u4200:
  4021     02FF                     l3892:
  4022                           
  4023                           ;car_block_box_def.c: 112:     {;car_block_box_def.c: 113:         clcd_putch('*', (0xC0
      +                           + 4 + i));
  4024     02FF  0856               	movf	login@i,w
  4025     0300  3EC4               	addlw	196
  4026     0301  00A0               	movwf	clcd_putch@addr
  4027     0302  302A               	movlw	42
  4028     0303  160A  118A  25BE  120A  118A  	fcall	_clcd_putch
  4029     0308                     l3894:
  4030                           
  4031                           ;car_block_box_def.c: 114:         user_password[i] = '0';
  4032     0308  1283               	bcf	3,5	;RP0=0, select bank0
  4033     0309  1303               	bcf	3,6	;RP1=0, select bank0
  4034     030A  0856               	movf	login@i,w
  4035     030B  3EC2               	addlw	(low (login@user_password| 0))& (0+255)
  4036     030C  0084               	movwf	4
  4037     030D  3030               	movlw	48
  4038     030E  1383               	bcf	3,7	;select IRP bank1
  4039     030F  0080               	movwf	0
  4040     0310  2AEE               	goto	l3884
  4041     0311                     l3900:
  4042                           
  4043                           ;car_block_box_def.c: 119:     if(i == 4)
  4044     0311  3004               	movlw	4
  4045     0312  0656               	xorwf	login@i,w
  4046     0313  1D03               	btfss	3,2
  4047     0314  2B16               	goto	u4211
  4048     0315  2B17               	goto	u4210
  4049     0316                     u4211:
  4050     0316  2C6B               	goto	l3974
  4051     0317                     u4210:
  4052     0317                     l3902:
  4053                           
  4054                           ;car_block_box_def.c: 120:     {;car_block_box_def.c: 121:         _delay((unsigned long
      +                          )((1000)*(20000000/4000.0)));
  4055     0317  301A               	movlw	26
  4056     0318  1283               	bcf	3,5	;RP0=0, select bank0
  4057     0319  1303               	bcf	3,6	;RP1=0, select bank0
  4058     031A  00A5               	movwf	??_login+2
  4059     031B  305E               	movlw	94
  4060     031C  00A4               	movwf	??_login+1
  4061     031D  306D               	movlw	109
  4062     031E  00A3               	movwf	??_login
  4063     031F                     u5267:
  4064     031F  0BA3               	decfsz	??_login,f
  4065     0320  2B1F               	goto	u5267
  4066     0321  0BA4               	decfsz	??_login+1,f
  4067     0322  2B1F               	goto	u5267
  4068     0323  0BA5               	decfsz	??_login+2,f
  4069     0324  2B1F               	goto	u5267
  4070     0325  2B26               	nop2
  4071     0326                     l3904:
  4072                           
  4073                           ;car_block_box_def.c: 122:         char stored_pwd[4];;car_block_box_def.c: 124:        
      +                           for(unsigned char j = 0; j < 4; j++)
  4074     0326  1283               	bcf	3,5	;RP0=0, select bank0
  4075     0327  1303               	bcf	3,6	;RP1=0, select bank0
  4076     0328  01AB               	clrf	login@j
  4077     0329                     l3910:
  4078                           
  4079                           ;car_block_box_def.c: 125:             stored_pwd[j] = read_at24c04(j);
  4080     0329  082B               	movf	login@j,w
  4081     032A  3E26               	addlw	(low (login@stored_pwd| 0))& (0+255)
  4082     032B  0084               	movwf	4
  4083     032C  082B               	movf	login@j,w
  4084     032D  160A  118A  266E  120A  118A  	fcall	_read_at24c04
  4085     0332  1383               	bcf	3,7	;select IRP bank0
  4086     0333  0080               	movwf	0
  4087     0334                     l3912:
  4088     0334  3001               	movlw	1
  4089     0335  1283               	bcf	3,5	;RP0=0, select bank0
  4090     0336  1303               	bcf	3,6	;RP1=0, select bank0
  4091     0337  07AB               	addwf	login@j,f
  4092     0338                     l3914:
  4093     0338  3004               	movlw	4
  4094     0339  022B               	subwf	login@j,w
  4095     033A  1C03               	skipc
  4096     033B  2B3D               	goto	u4221
  4097     033C  2B3E               	goto	u4220
  4098     033D                     u4221:
  4099     033D  2B29               	goto	l3910
  4100     033E                     u4220:
  4101     033E                     l3916:
  4102                           
  4103                           ;car_block_box_def.c: 127:         if(strncmp(stored_pwd, user_password, 4) == 0)
  4104     033E  3026               	movlw	(low (login@stored_pwd| 0))& (0+255)
  4105     033F  00F2               	movwf	strncmp@l
  4106     0340  30C2               	movlw	(low (login@user_password| 0))& (0+255)
  4107     0341  00F3               	movwf	strncmp@r
  4108     0342  3004               	movlw	4
  4109     0343  00F4               	movwf	strncmp@n
  4110     0344  3000               	movlw	0
  4111     0345  00F5               	movwf	strncmp@n+1
  4112     0346  120A  158A  21CA  120A  118A  	fcall	_strncmp
  4113     034B  0872               	movf	?_strncmp,w
  4114     034C  0473               	iorwf	?_strncmp+1,w
  4115     034D  1D03               	btfss	3,2
  4116     034E  2B50               	goto	u4231
  4117     034F  2B51               	goto	u4230
  4118     0350                     u4231:
  4119     0350  2B7F               	goto	l3932
  4120     0351                     u4230:
  4121     0351                     l3918:
  4122                           
  4123                           ;car_block_box_def.c: 128:         {;car_block_box_def.c: 129:             clear_clcd_sc
      +                          reen();
  4124     0351  160A  118A  2563  120A  118A  	fcall	_clear_clcd_screen
  4125                           
  4126                           ;car_block_box_def.c: 130:             clcd_write(0x0C, 0);
  4127     0356  01F2               	clrf	clcd_write@mode
  4128     0357  300C               	movlw	12
  4129     0358  120A  158A  2150  120A  118A  	fcall	_clcd_write
  4130     035D                     l3920:
  4131                           
  4132                           ;car_block_box_def.c: 131:             _delay((unsigned long)((100)*(20000000/4000000.0)
      +                          ));
  4133     035D  30A5               	movlw	165
  4134     035E  1283               	bcf	3,5	;RP0=0, select bank0
  4135     035F  1303               	bcf	3,6	;RP1=0, select bank0
  4136     0360  00A3               	movwf	??_login
  4137     0361                     u5277:
  4138     0361  0BA3               	decfsz	??_login,f
  4139     0362  2B61               	goto	u5277
  4140     0363  2B64               	nop2
  4141     0364                     l3922:
  4142                           
  4143                           ;car_block_box_def.c: 132:             clcd_print("Login Success!", (0x80 + 1));
  4144     0364  3066               	movlw	low (STR_16| (0+32768))
  4145     0365  00F6               	movwf	clcd_print@str
  4146     0366  3088               	movlw	high (STR_16| (0+32768))
  4147     0367  00F7               	movwf	clcd_print@str+1
  4148     0368  3081               	movlw	129
  4149     0369  00F8               	movwf	clcd_print@addr
  4150     036A  160A  118A  2769  120A  118A  	fcall	_clcd_print
  4151     036F                     l3924:
  4152                           
  4153                           ;car_block_box_def.c: 133:             _delay((unsigned long)((2000)*(20000000/4000.0)))
      +                          ;
  4154     036F  3033               	movlw	51
  4155     0370  1283               	bcf	3,5	;RP0=0, select bank0
  4156     0371  1303               	bcf	3,6	;RP1=0, select bank0
  4157     0372  00A5               	movwf	??_login+2
  4158     0373  30BB               	movlw	187
  4159     0374  00A4               	movwf	??_login+1
  4160     0375  30DF               	movlw	223
  4161     0376  00A3               	movwf	??_login
  4162     0377                     u5287:
  4163     0377  0BA3               	decfsz	??_login,f
  4164     0378  2B77               	goto	u5287
  4165     0379  0BA4               	decfsz	??_login+1,f
  4166     037A  2B77               	goto	u5287
  4167     037B  0BA5               	decfsz	??_login+2,f
  4168     037C  2B77               	goto	u5287
  4169     037D                     l3926:
  4170                           
  4171                           ;car_block_box_def.c: 134:             return 0x44;
  4172     037D  3044               	movlw	68
  4173     037E  2C6C               	goto	l313
  4174     037F                     l3932:
  4175                           
  4176                           ;car_block_box_def.c: 137:         {;car_block_box_def.c: 138:             attempt_left-
      +                          -;
  4177     037F  3001               	movlw	1
  4178     0380  1283               	bcf	3,5	;RP0=0, select bank0
  4179     0381  1303               	bcf	3,6	;RP1=0, select bank0
  4180     0382  02D5               	subwf	login@attempt_left,f
  4181                           
  4182                           ;car_block_box_def.c: 139:             if(attempt_left == 0)
  4183     0383  0855               	movf	login@attempt_left,w
  4184     0384  1D03               	btfss	3,2
  4185     0385  2B87               	goto	u4241
  4186     0386  2B88               	goto	u4240
  4187     0387                     u4241:
  4188     0387  2BFF               	goto	l3950
  4189     0388                     u4240:
  4190     0388                     l3934:
  4191                           
  4192                           ;car_block_box_def.c: 140:             {;car_block_box_def.c: 141:                 clear
      +                          _clcd_screen();
  4193     0388  160A  118A  2563  120A  118A  	fcall	_clear_clcd_screen
  4194                           
  4195                           ;car_block_box_def.c: 142:                 clcd_write(0x0C, 0);
  4196     038D  01F2               	clrf	clcd_write@mode
  4197     038E  300C               	movlw	12
  4198     038F  120A  158A  2150  120A  118A  	fcall	_clcd_write
  4199     0394                     l3936:
  4200                           
  4201                           ;car_block_box_def.c: 143:                 _delay((unsigned long)((100)*(20000000/400000
      +                          0.0)));
  4202     0394  30A5               	movlw	165
  4203     0395  1283               	bcf	3,5	;RP0=0, select bank0
  4204     0396  1303               	bcf	3,6	;RP1=0, select bank0
  4205     0397  00A3               	movwf	??_login
  4206     0398                     u5297:
  4207     0398  0BA3               	decfsz	??_login,f
  4208     0399  2B98               	goto	u5297
  4209     039A  2B9B               	nop2
  4210     039B                     l3938:
  4211                           
  4212                           ;car_block_box_def.c: 144:                 clcd_print("You are blocked", (0x80 + 0));
  4213     039B  3056               	movlw	low (STR_17| (0+32768))
  4214     039C  00F6               	movwf	clcd_print@str
  4215     039D  3088               	movlw	high (STR_17| (0+32768))
  4216     039E  00F7               	movwf	clcd_print@str+1
  4217     039F  3080               	movlw	128
  4218     03A0  00F8               	movwf	clcd_print@addr
  4219     03A1  160A  118A  2769  120A  118A  	fcall	_clcd_print
  4220     03A6                     l3940:
  4221                           
  4222                           ;car_block_box_def.c: 145:                 clcd_print("Wait for", (0xC0 + 0));
  4223     03A6  3016               	movlw	low (STR_18| (0+32768))
  4224     03A7  00F6               	movwf	clcd_print@str
  4225     03A8  3089               	movlw	high (STR_18| (0+32768))
  4226     03A9  00F7               	movwf	clcd_print@str+1
  4227     03AA  30C0               	movlw	192
  4228     03AB  00F8               	movwf	clcd_print@addr
  4229     03AC  160A  118A  2769  120A  118A  	fcall	_clcd_print
  4230     03B1                     l3942:
  4231                           
  4232                           ;car_block_box_def.c: 146:                 clcd_print("secs", (0xC0 + 12));
  4233     03B1  3026               	movlw	low (STR_19| (0+32768))
  4234     03B2  00F6               	movwf	clcd_print@str
  4235     03B3  3089               	movlw	high (STR_19| (0+32768))
  4236     03B4  00F7               	movwf	clcd_print@str+1
  4237     03B5  30CC               	movlw	204
  4238     03B6  00F8               	movwf	clcd_print@addr
  4239     03B7  160A  118A  2769  120A  118A  	fcall	_clcd_print
  4240     03BC                     l3944:
  4241                           
  4242                           ;car_block_box_def.c: 149:                 sec = 60;
  4243     03BC  303C               	movlw	60
  4244     03BD  1283               	bcf	3,5	;RP0=0, select bank0
  4245     03BE  1303               	bcf	3,6	;RP1=0, select bank0
  4246     03BF  00D8               	movwf	_sec
  4247                           
  4248                           ;car_block_box_def.c: 150:                 while(sec)
  4249     03C0  2BF5               	goto	l3948
  4250     03C1                     l3946:
  4251                           
  4252                           ;car_block_box_def.c: 151:                 {;car_block_box_def.c: 152:                  
      +                             clcd_putch(sec/10 + '0', (0xC0 + 9));
  4253     03C1  30C9               	movlw	201
  4254     03C2  00A0               	movwf	clcd_putch@addr
  4255     03C3  300A               	movlw	10
  4256     03C4  00F2               	movwf	___awdiv@divisor
  4257     03C5  3000               	movlw	0
  4258     03C6  00F3               	movwf	___awdiv@divisor+1
  4259     03C7  0858               	movf	_sec,w
  4260     03C8  00A3               	movwf	??_login
  4261     03C9  01A4               	clrf	??_login+1
  4262     03CA  0823               	movf	??_login,w
  4263     03CB  00F4               	movwf	___awdiv@dividend
  4264     03CC  0824               	movf	??_login+1,w
  4265     03CD  00F5               	movwf	___awdiv@dividend+1
  4266     03CE  120A  158A  237C  120A  118A  	fcall	___awdiv
  4267     03D3  0872               	movf	?___awdiv,w
  4268     03D4  3E30               	addlw	48
  4269     03D5  160A  118A  25BE  120A  118A  	fcall	_clcd_putch
  4270                           
  4271                           ;car_block_box_def.c: 153:                     clcd_putch(sec%10 + '0', (0xC0 + 10));
  4272     03DA  30CA               	movlw	202
  4273     03DB  1283               	bcf	3,5	;RP0=0, select bank0
  4274     03DC  1303               	bcf	3,6	;RP1=0, select bank0
  4275     03DD  00A0               	movwf	clcd_putch@addr
  4276     03DE  300A               	movlw	10
  4277     03DF  00F2               	movwf	___awmod@divisor
  4278     03E0  3000               	movlw	0
  4279     03E1  00F3               	movwf	___awmod@divisor+1
  4280     03E2  0858               	movf	_sec,w
  4281     03E3  00A3               	movwf	??_login
  4282     03E4  01A4               	clrf	??_login+1
  4283     03E5  0823               	movf	??_login,w
  4284     03E6  00F4               	movwf	___awmod@dividend
  4285     03E7  0824               	movf	??_login+1,w
  4286     03E8  00F5               	movwf	___awmod@dividend+1
  4287     03E9  120A  158A  2269  120A  118A  	fcall	___awmod
  4288     03EE  0872               	movf	?___awmod,w
  4289     03EF  3E30               	addlw	48
  4290     03F0  160A  118A  25BE  120A  118A  	fcall	_clcd_putch
  4291     03F5                     l3948:
  4292                           
  4293                           ;car_block_box_def.c: 150:                 while(sec)
  4294     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  4295     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  4296     03F7  0858               	movf	_sec,w
  4297     03F8  1D03               	btfss	3,2
  4298     03F9  2BFB               	goto	u4251
  4299     03FA  2BFC               	goto	u4250
  4300     03FB                     u4251:
  4301     03FB  2BC1               	goto	l3946
  4302     03FC                     u4250:
  4303     03FC                     l325:
  4304                           
  4305                           ;car_block_box_def.c: 155:                 attempt_left = 3;
  4306     03FC  3003               	movlw	3
  4307     03FD  00D5               	movwf	login@attempt_left
  4308                           
  4309                           ;car_block_box_def.c: 156:             }
  4310     03FE  2C41               	goto	l3960
  4311     03FF                     l3950:
  4312                           
  4313                           ;car_block_box_def.c: 158:             {;car_block_box_def.c: 159:                 clear
      +                          _clcd_screen();
  4314     03FF  160A  118A  2563  120A  118A  	fcall	_clear_clcd_screen
  4315                           
  4316                           ;car_block_box_def.c: 160:                 clcd_write(0x0C, 0);
  4317     0404  01F2               	clrf	clcd_write@mode
  4318     0405  300C               	movlw	12
  4319     0406  120A  158A  2150  120A  118A  	fcall	_clcd_write
  4320     040B                     l3952:
  4321                           
  4322                           ;car_block_box_def.c: 161:                 _delay((unsigned long)((100)*(20000000/400000
      +                          0.0)));
  4323     040B  30A5               	movlw	165
  4324     040C  1283               	bcf	3,5	;RP0=0, select bank0
  4325     040D  1303               	bcf	3,6	;RP1=0, select bank0
  4326     040E  00A3               	movwf	??_login
  4327     040F                     u5307:
  4328     040F  0BA3               	decfsz	??_login,f
  4329     0410  2C0F               	goto	u5307
  4330     0411  2C12               	nop2
  4331     0412                     l3954:
  4332                           
  4333                           ;car_block_box_def.c: 162:                 clcd_print("Wrong password", (0x80 + 0));
  4334     0412  3084               	movlw	low (STR_20| (0+32768))
  4335     0413  00F6               	movwf	clcd_print@str
  4336     0414  3088               	movlw	high (STR_20| (0+32768))
  4337     0415  00F7               	movwf	clcd_print@str+1
  4338     0416  3080               	movlw	128
  4339     0417  00F8               	movwf	clcd_print@addr
  4340     0418  160A  118A  2769  120A  118A  	fcall	_clcd_print
  4341     041D                     l3956:
  4342                           
  4343                           ;car_block_box_def.c: 163:                 clcd_putch(attempt_left + '0', (0xC0 + 1));
  4344     041D  30C1               	movlw	193
  4345     041E  1283               	bcf	3,5	;RP0=0, select bank0
  4346     041F  1303               	bcf	3,6	;RP1=0, select bank0
  4347     0420  00A0               	movwf	clcd_putch@addr
  4348     0421  0855               	movf	login@attempt_left,w
  4349     0422  3E30               	addlw	48
  4350     0423  160A  118A  25BE  120A  118A  	fcall	_clcd_putch
  4351     0428                     l3958:
  4352                           
  4353                           ;car_block_box_def.c: 164:                 clcd_print("attempt left", (0xC0 + 3));
  4354     0428  30CC               	movlw	low (STR_21| (0+32768))
  4355     0429  00F6               	movwf	clcd_print@str
  4356     042A  3088               	movlw	high (STR_21| (0+32768))
  4357     042B  00F7               	movwf	clcd_print@str+1
  4358     042C  30C3               	movlw	195
  4359     042D  00F8               	movwf	clcd_print@addr
  4360     042E  160A  118A  2769  120A  118A  	fcall	_clcd_print
  4361                           
  4362                           ;car_block_box_def.c: 165:                 _delay((unsigned long)((3000)*(20000000/4000.
      +                          0)));
  4363     0433  304D               	movlw	77
  4364     0434  1283               	bcf	3,5	;RP0=0, select bank0
  4365     0435  1303               	bcf	3,6	;RP1=0, select bank0
  4366     0436  00A5               	movwf	??_login+2
  4367     0437  3019               	movlw	25
  4368     0438  00A4               	movwf	??_login+1
  4369     0439  304F               	movlw	79
  4370     043A  00A3               	movwf	??_login
  4371     043B                     u5317:
  4372     043B  0BA3               	decfsz	??_login,f
  4373     043C  2C3B               	goto	u5317
  4374     043D  0BA4               	decfsz	??_login+1,f
  4375     043E  2C3B               	goto	u5317
  4376     043F  0BA5               	decfsz	??_login+2,f
  4377     0440  2C3B               	goto	u5317
  4378     0441                     l3960:
  4379                           
  4380                           ;car_block_box_def.c: 168:             clear_clcd_screen();
  4381     0441  160A  118A  2563  120A  118A  	fcall	_clear_clcd_screen
  4382     0446                     l3962:
  4383                           
  4384                           ;car_block_box_def.c: 169:             clcd_print("Enter Password", (0x80 + 1));
  4385     0446  30A2               	movlw	low (STR_9| (0+32768))
  4386     0447  00F6               	movwf	clcd_print@str
  4387     0448  3088               	movlw	high (STR_9| (0+32768))
  4388     0449  00F7               	movwf	clcd_print@str+1
  4389     044A  3081               	movlw	129
  4390     044B  00F8               	movwf	clcd_print@addr
  4391     044C  160A  118A  2769  120A  118A  	fcall	_clcd_print
  4392     0451                     l3964:
  4393                           
  4394                           ;car_block_box_def.c: 170:             clcd_write((0xC0 + 4), 0);
  4395     0451  01F2               	clrf	clcd_write@mode
  4396     0452  30C4               	movlw	196
  4397     0453  120A  158A  2150  120A  118A  	fcall	_clcd_write
  4398     0458                     l3966:
  4399                           
  4400                           ;car_block_box_def.c: 171:             clcd_write(0x0F, 0);
  4401     0458  01F2               	clrf	clcd_write@mode
  4402     0459  300F               	movlw	15
  4403     045A  120A  158A  2150  120A  118A  	fcall	_clcd_write
  4404     045F                     l3968:
  4405                           
  4406                           ;car_block_box_def.c: 172:             _delay((unsigned long)((100)*(20000000/4000000.0)
      +                          ));
  4407     045F  30A5               	movlw	165
  4408     0460  1283               	bcf	3,5	;RP0=0, select bank0
  4409     0461  1303               	bcf	3,6	;RP1=0, select bank0
  4410     0462  00A3               	movwf	??_login
  4411     0463                     u5327:
  4412     0463  0BA3               	decfsz	??_login,f
  4413     0464  2C63               	goto	u5327
  4414     0465  2C66               	nop2
  4415     0466                     l3970:
  4416                           
  4417                           ;car_block_box_def.c: 173:             i = 0;
  4418     0466  1283               	bcf	3,5	;RP0=0, select bank0
  4419     0467  1303               	bcf	3,6	;RP1=0, select bank0
  4420     0468  01D6               	clrf	login@i
  4421     0469                     l3972:
  4422                           
  4423                           ;car_block_box_def.c: 174:             return_time = 5;
  4424     0469  3005               	movlw	5
  4425     046A  00D9               	movwf	_return_time
  4426     046B                     l3974:
  4427                           
  4428                           ;car_block_box_def.c: 177:     return 0x32;
  4429     046B  3032               	movlw	50
  4430     046C                     l313:
  4431     046C  0008               	return
  4432     046D                     __end_of_login:
  4433                           
  4434                           	psect	text7
  4435     166E                     __ptext7:	
  4436 ;; *************** function _read_at24c04 *****************
  4437 ;; Defined at:
  4438 ;;		line 13 in file "at24c04.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  addr            1    wreg     unsigned char 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  addr            1    4[COMMON] unsigned char 
  4443 ;;  data            1    5[COMMON] unsigned char 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      unsigned char 
  4446 ;; Registers used:
  4447 ;;		wreg, status,2, status,0, pclath, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4453 ;;      Params:         0       0       0       0       0
  4454 ;;      Locals:         2       0       0       0       0
  4455 ;;      Temps:          0       0       0       0       0
  4456 ;;      Totals:         2       0       0       0       0
  4457 ;;Total ram usage:        2 bytes
  4458 ;; Hardware stack levels used: 1
  4459 ;; Hardware stack levels required when called: 4
  4460 ;; This function calls:
  4461 ;;		_i2c_read
  4462 ;;		_i2c_rep_start
  4463 ;;		_i2c_start
  4464 ;;		_i2c_write
  4465 ;; This function is called by:
  4466 ;;		_login
  4467 ;;		_view_log
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471     166E                     _read_at24c04:	
  4472                           ;psect for function _read_at24c04
  4473                           
  4474                           
  4475                           ;incstack = 0
  4476                           ; Regs used in _read_at24c04: [wreg+status,2+status,0+pclath+cstack]
  4477                           ;read_at24c04@addr stored from wreg
  4478     166E  00F4               	movwf	read_at24c04@addr
  4479     166F                     l3652:
  4480                           
  4481                           ;at24c04.c: 13: unsigned char read_at24c04(unsigned char addr);at24c04.c: 14: {;at24c04.
      +                          c: 15:     unsigned char data;;at24c04.c: 16:     i2c_start();
  4482     166F  160A  118A  2523  160A  118A  	fcall	_i2c_start
  4483                           
  4484                           ;at24c04.c: 17:     i2c_write(0b10100000);
  4485     1674  30A0               	movlw	160
  4486     1675  160A  118A  2535  160A  118A  	fcall	_i2c_write
  4487                           
  4488                           ;at24c04.c: 18:     i2c_write(addr);
  4489     167A  0874               	movf	read_at24c04@addr,w
  4490     167B  160A  118A  2535  160A  118A  	fcall	_i2c_write
  4491                           
  4492                           ;at24c04.c: 19:     i2c_rep_start();
  4493     1680  160A  118A  2540  160A  118A  	fcall	_i2c_rep_start
  4494                           
  4495                           ;at24c04.c: 20:     i2c_write(0b10100001);
  4496     1685  30A1               	movlw	161
  4497     1686  160A  118A  2535  160A  118A  	fcall	_i2c_write
  4498                           
  4499                           ;at24c04.c: 21:     data = i2c_read(0);
  4500     168B  3000               	movlw	0
  4501     168C  160A  118A  260A  160A  118A  	fcall	_i2c_read
  4502     1691  00F5               	movwf	read_at24c04@data
  4503     1692                     l3654:
  4504                           
  4505                           ;at24c04.c: 24:     return data;
  4506     1692  0875               	movf	read_at24c04@data,w
  4507     1693                     l407:
  4508     1693  0008               	return
  4509     1694                     __end_of_read_at24c04:
  4510                           
  4511                           	psect	text8
  4512     0AC0                     __ptext8:	
  4513 ;; *************** function _log_car_event *****************
  4514 ;; Defined at:
  4515 ;;		line 70 in file "car_block_box_def.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  event           1    1[BANK0 ] PTR unsigned char 
  4518 ;;		 -> main@event(3), 
  4519 ;;  speed           1    2[BANK0 ] unsigned char 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4531 ;;      Params:         0       2       0       0       0
  4532 ;;      Locals:         0       0       0       0       0
  4533 ;;      Temps:          0       2       0       0       0
  4534 ;;      Totals:         0       4       0       0       0
  4535 ;;Total ram usage:        4 bytes
  4536 ;; Hardware stack levels used: 1
  4537 ;; Hardware stack levels required when called: 6
  4538 ;; This function calls:
  4539 ;;		___awdiv
  4540 ;;		___awmod
  4541 ;;		_get_time
  4542 ;;		_record_log
  4543 ;;		_strncpy
  4544 ;; This function is called by:
  4545 ;;		_main
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549     0AC0                     _log_car_event:	
  4550                           ;psect for function _log_car_event
  4551                           
  4552     0AC0                     l3772:	
  4553                           ;incstack = 0
  4554                           ; Regs used in _log_car_event: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4555                           
  4556                           
  4557                           ;car_block_box_def.c: 70: void log_car_event(char event[], unsigned char speed);car_bloc
      +                          k_box_def.c: 71: {;car_block_box_def.c: 72:     get_time();
  4558     0AC0  120A  118A  27AE  120A  158A  	fcall	_get_time
  4559     0AC5                     l3774:
  4560                           
  4561                           ;car_block_box_def.c: 73:     strncpy(log, time, 6);
  4562     0AC5  30A7               	movlw	(low (_log| 0))& (0+255)
  4563     0AC6  00F2               	movwf	strncpy@d
  4564     0AC7  30BB               	movlw	(low (_time| 0))& (0+255)
  4565     0AC8  00F3               	movwf	strncpy@s
  4566     0AC9  3000               	movlw	0
  4567     0ACA  00F4               	movwf	strncpy@s+1
  4568     0ACB  3006               	movlw	6
  4569     0ACC  00F5               	movwf	strncpy@n
  4570     0ACD  3000               	movlw	0
  4571     0ACE  00F6               	movwf	strncpy@n+1
  4572     0ACF  120A  158A  2186  120A  158A  	fcall	_strncpy
  4573     0AD4                     l3776:
  4574                           
  4575                           ;car_block_box_def.c: 74:     strncpy(&log[6], event, 2);
  4576     0AD4  30AD               	movlw	(low ((_log| 0+6)))& (0+255)
  4577     0AD5  00F2               	movwf	strncpy@d
  4578     0AD6  1283               	bcf	3,5	;RP0=0, select bank0
  4579     0AD7  1303               	bcf	3,6	;RP1=0, select bank0
  4580     0AD8  0821               	movf	log_car_event@event,w
  4581     0AD9  00F3               	movwf	strncpy@s
  4582     0ADA  3001               	movlw	1
  4583     0ADB  00F4               	movwf	strncpy@s+1
  4584     0ADC  3002               	movlw	2
  4585     0ADD  00F5               	movwf	strncpy@n
  4586     0ADE  3000               	movlw	0
  4587     0ADF  00F6               	movwf	strncpy@n+1
  4588     0AE0  120A  158A  2186  120A  158A  	fcall	_strncpy
  4589                           
  4590                           ;car_block_box_def.c: 75:     log[8] = speed / 10 + '0';
  4591     0AE5  300A               	movlw	10
  4592     0AE6  00F2               	movwf	___awdiv@divisor
  4593     0AE7  3000               	movlw	0
  4594     0AE8  00F3               	movwf	___awdiv@divisor+1
  4595     0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  4596     0AEA  1303               	bcf	3,6	;RP1=0, select bank0
  4597     0AEB  0822               	movf	log_car_event@speed,w
  4598     0AEC  00A3               	movwf	??_log_car_event
  4599     0AED  01A4               	clrf	??_log_car_event+1
  4600     0AEE  0823               	movf	??_log_car_event,w
  4601     0AEF  00F4               	movwf	___awdiv@dividend
  4602     0AF0  0824               	movf	??_log_car_event+1,w
  4603     0AF1  00F5               	movwf	___awdiv@dividend+1
  4604     0AF2  120A  158A  237C  120A  158A  	fcall	___awdiv
  4605     0AF7  0872               	movf	?___awdiv,w
  4606     0AF8  3E30               	addlw	48
  4607     0AF9  1683               	bsf	3,5	;RP0=1, select bank1
  4608     0AFA  1303               	bcf	3,6	;RP1=0, select bank1
  4609     0AFB  00AF               	movwf	(_log^(0+128)+8)
  4610                           
  4611                           ;car_block_box_def.c: 76:     log[9] = speed % 10 + '0';
  4612     0AFC  300A               	movlw	10
  4613     0AFD  00F2               	movwf	___awmod@divisor
  4614     0AFE  3000               	movlw	0
  4615     0AFF  00F3               	movwf	___awmod@divisor+1
  4616     0B00  1283               	bcf	3,5	;RP0=0, select bank0
  4617     0B01  1303               	bcf	3,6	;RP1=0, select bank0
  4618     0B02  0822               	movf	log_car_event@speed,w
  4619     0B03  00A3               	movwf	??_log_car_event
  4620     0B04  01A4               	clrf	??_log_car_event+1
  4621     0B05  0823               	movf	??_log_car_event,w
  4622     0B06  00F4               	movwf	___awmod@dividend
  4623     0B07  0824               	movf	??_log_car_event+1,w
  4624     0B08  00F5               	movwf	___awmod@dividend+1
  4625     0B09  120A  158A  2269  120A  158A  	fcall	___awmod
  4626     0B0E  0872               	movf	?___awmod,w
  4627     0B0F  3E30               	addlw	48
  4628     0B10  1683               	bsf	3,5	;RP0=1, select bank1
  4629     0B11  1303               	bcf	3,6	;RP1=0, select bank1
  4630     0B12  00B0               	movwf	(_log^(0+128)+9)
  4631     0B13                     l3778:
  4632                           
  4633                           ;car_block_box_def.c: 77:     log[10] = '\0';
  4634     0B13  01B1               	clrf	(_log^(0+128)+10)
  4635     0B14                     l3780:
  4636                           
  4637                           ;car_block_box_def.c: 79:     record_log();
  4638     0B14  160A  118A  264C  120A  158A  	fcall	_record_log
  4639     0B19                     l302:
  4640     0B19  0008               	return
  4641     0B1A                     __end_of_log_car_event:
  4642                           
  4643                           	psect	text9
  4644     164C                     __ptext9:	
  4645 ;; *************** function _record_log *****************
  4646 ;; Defined at:
  4647 ;;		line 58 in file "car_block_box_def.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;		None
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  addr            1    0[BANK0 ] unsigned char 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      void 
  4654 ;; Registers used:
  4655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4661 ;;      Params:         0       0       0       0       0
  4662 ;;      Locals:         0       1       0       0       0
  4663 ;;      Temps:          0       0       0       0       0
  4664 ;;      Totals:         0       1       0       0       0
  4665 ;;Total ram usage:        1 bytes
  4666 ;; Hardware stack levels used: 1
  4667 ;; Hardware stack levels required when called: 5
  4668 ;; This function calls:
  4669 ;;		___bmul
  4670 ;;		_write_str_at24c04
  4671 ;; This function is called by:
  4672 ;;		_log_car_event
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676     164C                     _record_log:	
  4677                           ;psect for function _record_log
  4678                           
  4679     164C                     l3626:	
  4680                           ;incstack = 0
  4681                           ; Regs used in _record_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4682                           
  4683                           
  4684                           ;car_block_box_def.c: 63:     if(log_count == 10)
  4685     164C  300A               	movlw	10
  4686     164D  1283               	bcf	3,5	;RP0=0, select bank0
  4687     164E  1303               	bcf	3,6	;RP1=0, select bank0
  4688     164F  0657               	xorwf	_log_count,w
  4689     1650  1D03               	btfss	3,2
  4690     1651  2E53               	goto	u3721
  4691     1652  2E54               	goto	u3720
  4692     1653                     u3721:
  4693     1653  2E55               	goto	l3630
  4694     1654                     u3720:
  4695     1654                     l3628:
  4696                           
  4697                           ;car_block_box_def.c: 64:         log_count = 0;
  4698     1654  01D7               	clrf	_log_count
  4699     1655                     l3630:
  4700                           
  4701                           ;car_block_box_def.c: 66:     char addr = 0x05 + log_count * 10;
  4702     1655  300A               	movlw	10
  4703     1656  00F2               	movwf	___bmul@multiplicand
  4704     1657  0857               	movf	_log_count,w
  4705     1658  160A  118A  2598  160A  118A  	fcall	___bmul
  4706     165D  3E05               	addlw	5
  4707     165E  1283               	bcf	3,5	;RP0=0, select bank0
  4708     165F  1303               	bcf	3,6	;RP1=0, select bank0
  4709     1660  00A0               	movwf	record_log@addr
  4710     1661                     l3632:
  4711                           
  4712                           ;car_block_box_def.c: 67:     log_count++;
  4713     1661  3001               	movlw	1
  4714     1662  07D7               	addwf	_log_count,f
  4715     1663                     l3634:
  4716                           
  4717                           ;car_block_box_def.c: 68:     write_str_at24c04(addr, log);
  4718     1663  30A7               	movlw	(low (_log| 0))& (0+255)
  4719     1664  00F7               	movwf	write_str_at24c04@data
  4720     1665  3000               	movlw	0
  4721     1666  00F8               	movwf	write_str_at24c04@data+1
  4722     1667  0820               	movf	record_log@addr,w
  4723     1668  160A  118A  26BB  160A  118A  	fcall	_write_str_at24c04
  4724     166D                     l299:
  4725     166D  0008               	return
  4726     166E                     __end_of_record_log:
  4727                           
  4728                           	psect	text10
  4729     1598                     __ptext10:	
  4730 ;; *************** function ___bmul *****************
  4731 ;; Defined at:
  4732 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  multiplier      1    wreg     unsigned char 
  4735 ;;  multiplicand    1    2[COMMON] unsigned char 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  multiplier      1    4[COMMON] unsigned char 
  4738 ;;  product         1    3[COMMON] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      unsigned char 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4748 ;;      Params:         1       0       0       0       0
  4749 ;;      Locals:         2       0       0       0       0
  4750 ;;      Temps:          0       0       0       0       0
  4751 ;;      Totals:         3       0       0       0       0
  4752 ;;Total ram usage:        3 bytes
  4753 ;; Hardware stack levels used: 1
  4754 ;; Hardware stack levels required when called: 1
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_record_log
  4759 ;;		_view_log
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763     1598                     ___bmul:	
  4764                           ;psect for function ___bmul
  4765                           
  4766                           
  4767                           ;incstack = 0
  4768                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4769                           ;___bmul@multiplier stored from wreg
  4770     1598  00F4               	movwf	___bmul@multiplier
  4771     1599                     l3548:
  4772     1599  01F3               	clrf	___bmul@product
  4773     159A                     l3550:
  4774     159A  1C74               	btfss	___bmul@multiplier,0
  4775     159B  2D9D               	goto	u3611
  4776     159C  2D9E               	goto	u3610
  4777     159D                     u3611:
  4778     159D  2DA0               	goto	l3554
  4779     159E                     u3610:
  4780     159E                     l3552:
  4781     159E  0872               	movf	___bmul@multiplicand,w
  4782     159F  07F3               	addwf	___bmul@product,f
  4783     15A0                     l3554:
  4784     15A0  1003               	clrc
  4785     15A1  0DF2               	rlf	___bmul@multiplicand,f
  4786     15A2                     l3556:
  4787     15A2  1003               	clrc
  4788     15A3  0CF4               	rrf	___bmul@multiplier,f
  4789     15A4  0874               	movf	___bmul@multiplier,w
  4790     15A5  1D03               	btfss	3,2
  4791     15A6  2DA8               	goto	u3621
  4792     15A7  2DA9               	goto	u3620
  4793     15A8                     u3621:
  4794     15A8  2D9A               	goto	l3550
  4795     15A9                     u3620:
  4796     15A9                     l3558:
  4797     15A9  0873               	movf	___bmul@product,w
  4798     15AA                     l559:
  4799     15AA  0008               	return
  4800     15AB                     __end_of___bmul:
  4801                           
  4802                           	psect	text11
  4803     1711                     __ptext11:	
  4804 ;; *************** function _init_config *****************
  4805 ;; Defined at:
  4806 ;;		line 9 in file "main.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      void 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0, pclath, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4820 ;;      Params:         0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0
  4823 ;;      Totals:         0       0       0       0       0
  4824 ;;Total ram usage:        0 bytes
  4825 ;; Hardware stack levels used: 1
  4826 ;; Hardware stack levels required when called: 6
  4827 ;; This function calls:
  4828 ;;		_init_adc
  4829 ;;		_init_clcd
  4830 ;;		_init_digital_keypad
  4831 ;;		_init_ds1307
  4832 ;;		_init_i2c
  4833 ;;		_init_timer2
  4834 ;; This function is called by:
  4835 ;;		_main
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839     1711                     _init_config:	
  4840                           ;psect for function _init_config
  4841                           
  4842     1711                     l3762:	
  4843                           ;incstack = 0
  4844                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  4845                           
  4846                           
  4847                           ;main.c: 12: 
  4848     1711  3000               	movlw	0
  4849     1712  1283               	bcf	3,5	;RP0=0, select bank0
  4850     1713  1303               	bcf	3,6	;RP1=0, select bank0
  4851     1714  00A9               	movwf	init_i2c@baud+3
  4852     1715  3001               	movlw	1
  4853     1716  00A8               	movwf	init_i2c@baud+2
  4854     1717  3086               	movlw	134
  4855     1718  00A7               	movwf	init_i2c@baud+1
  4856     1719  30A0               	movlw	160
  4857     171A  00A6               	movwf	init_i2c@baud
  4858     171B  160A  118A  2798  160A  118A  	fcall	_init_i2c
  4859                           
  4860                           ;main.c: 14:     init_timer2();
  4861     1720  160A  118A  2574  160A  118A  	fcall	_init_ds1307
  4862                           
  4863                           ;main.c: 16:     GIE = 1;
  4864     1725  160A  118A  254B  160A  118A  	fcall	_init_clcd
  4865                           
  4866                           ;main.c: 18: 
  4867     172A  160A  118A  250E  160A  118A  	fcall	_init_digital_keypad
  4868     172F                     l3764:
  4869                           
  4870                           ;main.c: 20: 
  4871     172F  160A  118A  2514  160A  118A  	fcall	_init_adc
  4872     1734                     l3766:
  4873                           
  4874                           ;main.c: 23:     unsigned char control_flag = 0x01, reset_flag, menu_pos;
  4875     1734  120A  158A  2145  160A  118A  	fcall	_init_timer2
  4876     1739                     l3768:
  4877                           
  4878                           ;main.c: 25:     char event[3] = "ON";
  4879     1739  178B               	bsf	11,7	;volatile
  4880     173A                     l3770:
  4881                           
  4882                           ;main.c: 26:     char* gear[] = {"GR", "GN", "G1", "G2", "G3", "G4"};
  4883     173A  170B               	bsf	11,6	;volatile
  4884     173B                     l158:
  4885     173B  0008               	return
  4886     173C                     __end_of_init_config:
  4887                           
  4888                           	psect	text12
  4889     0945                     __ptext12:	
  4890 ;; *************** function _init_timer2 *****************
  4891 ;; Defined at:
  4892 ;;		line 4 in file "timer.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;		None
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;		None
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      void 
  4899 ;; Registers used:
  4900 ;;		None
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4906 ;;      Params:         0       0       0       0       0
  4907 ;;      Locals:         0       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0
  4909 ;;      Totals:         0       0       0       0       0
  4910 ;;Total ram usage:        0 bytes
  4911 ;; Hardware stack levels used: 1
  4912 ;; Hardware stack levels required when called: 1
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_init_config
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920     0945                     _init_timer2:	
  4921                           ;psect for function _init_timer2
  4922                           
  4923     0945                     l3618:	
  4924                           ;incstack = 0
  4925                           ; Regs used in _init_timer2: []
  4926                           
  4927                           
  4928                           ;timer.c: 7:     PR2 = 250;
  4929     0945  30FA               	movlw	250
  4930     0946  1683               	bsf	3,5	;RP0=1, select bank1
  4931     0947  1303               	bcf	3,6	;RP1=0, select bank1
  4932     0948  0092               	movwf	18	;volatile
  4933                           
  4934                           ;timer.c: 10:     TMR2IE = 1;
  4935     0949  148C               	bsf	12,1	;volatile
  4936                           
  4937                           ;timer.c: 13:     T2CKPS0 = 1;
  4938     094A  1283               	bcf	3,5	;RP0=0, select bank0
  4939     094B  1303               	bcf	3,6	;RP1=0, select bank0
  4940     094C  1412               	bsf	18,0	;volatile
  4941                           
  4942                           ;timer.c: 14:     T2CKPS1 = 1;
  4943     094D  1492               	bsf	18,1	;volatile
  4944                           
  4945                           ;timer.c: 17:     TMR2ON = 0;
  4946     094E  1112               	bcf	18,2	;volatile
  4947     094F                     l447:
  4948     094F  0008               	return
  4949     0950                     __end_of_init_timer2:
  4950                           
  4951                           	psect	text13
  4952     1798                     __ptext13:	
  4953 ;; *************** function _init_i2c *****************
  4954 ;; Defined at:
  4955 ;;		line 4 in file "i2c.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  baud            4    6[BANK0 ] unsigned long 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;		None
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0, pclath, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4969 ;;      Params:         0       4       0       0       0
  4970 ;;      Locals:         0       0       0       0       0
  4971 ;;      Temps:          0       4       0       0       0
  4972 ;;      Totals:         0       8       0       0       0
  4973 ;;Total ram usage:        8 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; Hardware stack levels required when called: 2
  4976 ;; This function calls:
  4977 ;;		___lldiv
  4978 ;; This function is called by:
  4979 ;;		_init_config
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983     1798                     _init_i2c:	
  4984                           ;psect for function _init_i2c
  4985                           
  4986     1798                     l3608:	
  4987                           ;incstack = 0
  4988                           ; Regs used in _init_i2c: [wreg+status,2+status,0+pclath+cstack]
  4989                           
  4990                           
  4991                           ;i2c.c: 4: void init_i2c(unsigned long baud);i2c.c: 5: {;i2c.c: 7:     SSPM3 = 1;
  4992     1798  1283               	bcf	3,5	;RP0=0, select bank0
  4993     1799  1303               	bcf	3,6	;RP1=0, select bank0
  4994     179A  1594               	bsf	20,3	;volatile
  4995     179B                     l3610:
  4996                           
  4997                           ;i2c.c: 10:     SSPADD = (unsigned char)(20000000 / (4 * baud)) - 1;
  4998     179B  0826               	movf	init_i2c@baud,w
  4999     179C  00AA               	movwf	??_init_i2c
  5000     179D  0827               	movf	init_i2c@baud+1,w
  5001     179E  00AB               	movwf	??_init_i2c+1
  5002     179F  0828               	movf	init_i2c@baud+2,w
  5003     17A0  00AC               	movwf	??_init_i2c+2
  5004     17A1  0829               	movf	init_i2c@baud+3,w
  5005     17A2  00AD               	movwf	??_init_i2c+3
  5006     17A3  3002               	movlw	2
  5007     17A4                     u3715:
  5008     17A4  1003               	clrc
  5009     17A5  0DAA               	rlf	??_init_i2c,f
  5010     17A6  0DAB               	rlf	??_init_i2c+1,f
  5011     17A7  0DAC               	rlf	??_init_i2c+2,f
  5012     17A8  0DAD               	rlf	??_init_i2c+3,f
  5013     17A9                     u3710:
  5014     17A9  3EFF               	addlw	-1
  5015     17AA  1D03               	skipz
  5016     17AB  2FA4               	goto	u3715
  5017     17AC  082D               	movf	??_init_i2c+3,w
  5018     17AD  00F5               	movwf	___lldiv@divisor+3
  5019     17AE  082C               	movf	??_init_i2c+2,w
  5020     17AF  00F4               	movwf	___lldiv@divisor+2
  5021     17B0  082B               	movf	??_init_i2c+1,w
  5022     17B1  00F3               	movwf	___lldiv@divisor+1
  5023     17B2  082A               	movf	??_init_i2c,w
  5024     17B3  00F2               	movwf	___lldiv@divisor
  5025     17B4  3001               	movlw	1
  5026     17B5  00F9               	movwf	___lldiv@dividend+3
  5027     17B6  3031               	movlw	49
  5028     17B7  00F8               	movwf	___lldiv@dividend+2
  5029     17B8  302D               	movlw	45
  5030     17B9  00F7               	movwf	___lldiv@dividend+1
  5031     17BA  3000               	movlw	0
  5032     17BB  00F6               	movwf	___lldiv@dividend
  5033     17BC  120A  158A  24A7  160A  118A  	fcall	___lldiv
  5034     17C1  0872               	movf	?___lldiv,w
  5035     17C2  3EFF               	addlw	255
  5036     17C3  1683               	bsf	3,5	;RP0=1, select bank1
  5037     17C4  1303               	bcf	3,6	;RP1=0, select bank1
  5038     17C5  0093               	movwf	19	;volatile
  5039     17C6                     l3612:
  5040                           
  5041                           ;i2c.c: 13:     SSPEN = 1;
  5042     17C6  1283               	bcf	3,5	;RP0=0, select bank0
  5043     17C7  1303               	bcf	3,6	;RP1=0, select bank0
  5044     17C8  1694               	bsf	20,5	;volatile
  5045     17C9                     l84:
  5046     17C9  0008               	return
  5047     17CA                     __end_of_init_i2c:
  5048                           
  5049                           	psect	text14
  5050     0CA7                     __ptext14:	
  5051 ;; *************** function ___lldiv *****************
  5052 ;; Defined at:
  5053 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__lldiv.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  divisor         4    2[COMMON] unsigned long 
  5056 ;;  dividend        4    6[COMMON] unsigned long 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  quotient        4    1[BANK0 ] unsigned long 
  5059 ;;  counter         1    5[BANK0 ] unsigned char 
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  4    2[COMMON] unsigned long 
  5062 ;; Registers used:
  5063 ;;		wreg, status,2, status,0
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5069 ;;      Params:         8       0       0       0       0
  5070 ;;      Locals:         0       5       0       0       0
  5071 ;;      Temps:          0       1       0       0       0
  5072 ;;      Totals:         8       6       0       0       0
  5073 ;;Total ram usage:       14 bytes
  5074 ;; Hardware stack levels used: 1
  5075 ;; Hardware stack levels required when called: 1
  5076 ;; This function calls:
  5077 ;;		Nothing
  5078 ;; This function is called by:
  5079 ;;		_init_i2c
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083     0CA7                     ___lldiv:	
  5084                           ;psect for function ___lldiv
  5085                           
  5086     0CA7                     l3562:	
  5087                           ;incstack = 0
  5088                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5089                           
  5090     0CA7  3000               	movlw	0
  5091     0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  5092     0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  5093     0CAA  00A4               	movwf	___lldiv@quotient+3
  5094     0CAB  3000               	movlw	0
  5095     0CAC  00A3               	movwf	___lldiv@quotient+2
  5096     0CAD  3000               	movlw	0
  5097     0CAE  00A2               	movwf	___lldiv@quotient+1
  5098     0CAF  3000               	movlw	0
  5099     0CB0  00A1               	movwf	___lldiv@quotient
  5100     0CB1  0875               	movf	___lldiv@divisor+3,w
  5101     0CB2  0474               	iorwf	___lldiv@divisor+2,w
  5102     0CB3  0473               	iorwf	___lldiv@divisor+1,w
  5103     0CB4  0472               	iorwf	___lldiv@divisor,w
  5104     0CB5  1903               	skipnz
  5105     0CB6  2CB8               	goto	u3631
  5106     0CB7  2CB9               	goto	u3630
  5107     0CB8                     u3631:
  5108     0CB8  2D04               	goto	l3582
  5109     0CB9                     u3630:
  5110     0CB9                     l3564:
  5111     0CB9  3001               	movlw	1
  5112     0CBA  00A5               	movwf	___lldiv@counter
  5113     0CBB  2CC7               	goto	l3568
  5114     0CBC                     l3566:
  5115     0CBC  3001               	movlw	1
  5116     0CBD  00A0               	movwf	??___lldiv
  5117     0CBE                     u3645:
  5118     0CBE  1003               	clrc
  5119     0CBF  0DF2               	rlf	___lldiv@divisor,f
  5120     0CC0  0DF3               	rlf	___lldiv@divisor+1,f
  5121     0CC1  0DF4               	rlf	___lldiv@divisor+2,f
  5122     0CC2  0DF5               	rlf	___lldiv@divisor+3,f
  5123     0CC3  0BA0               	decfsz	??___lldiv,f
  5124     0CC4  2CBE               	goto	u3645
  5125     0CC5  3001               	movlw	1
  5126     0CC6  07A5               	addwf	___lldiv@counter,f
  5127     0CC7                     l3568:
  5128     0CC7  1FF5               	btfss	___lldiv@divisor+3,7
  5129     0CC8  2CCA               	goto	u3651
  5130     0CC9  2CCB               	goto	u3650
  5131     0CCA                     u3651:
  5132     0CCA  2CBC               	goto	l3566
  5133     0CCB                     u3650:
  5134     0CCB                     l3570:
  5135     0CCB  3001               	movlw	1
  5136     0CCC  00A0               	movwf	??___lldiv
  5137     0CCD                     u3665:
  5138     0CCD  1003               	clrc
  5139     0CCE  0DA1               	rlf	___lldiv@quotient,f
  5140     0CCF  0DA2               	rlf	___lldiv@quotient+1,f
  5141     0CD0  0DA3               	rlf	___lldiv@quotient+2,f
  5142     0CD1  0DA4               	rlf	___lldiv@quotient+3,f
  5143     0CD2  0BA0               	decfsz	??___lldiv,f
  5144     0CD3  2CCD               	goto	u3665
  5145     0CD4                     l3572:
  5146     0CD4  0875               	movf	___lldiv@divisor+3,w
  5147     0CD5  0279               	subwf	___lldiv@dividend+3,w
  5148     0CD6  1D03               	skipz
  5149     0CD7  2CE2               	goto	u3675
  5150     0CD8  0874               	movf	___lldiv@divisor+2,w
  5151     0CD9  0278               	subwf	___lldiv@dividend+2,w
  5152     0CDA  1D03               	skipz
  5153     0CDB  2CE2               	goto	u3675
  5154     0CDC  0873               	movf	___lldiv@divisor+1,w
  5155     0CDD  0277               	subwf	___lldiv@dividend+1,w
  5156     0CDE  1D03               	skipz
  5157     0CDF  2CE2               	goto	u3675
  5158     0CE0  0872               	movf	___lldiv@divisor,w
  5159     0CE1  0276               	subwf	___lldiv@dividend,w
  5160     0CE2                     u3675:
  5161     0CE2  1C03               	skipc
  5162     0CE3  2CE5               	goto	u3671
  5163     0CE4  2CE6               	goto	u3670
  5164     0CE5                     u3671:
  5165     0CE5  2CF5               	goto	l3578
  5166     0CE6                     u3670:
  5167     0CE6                     l3574:
  5168     0CE6  0872               	movf	___lldiv@divisor,w
  5169     0CE7  02F6               	subwf	___lldiv@dividend,f
  5170     0CE8  0873               	movf	___lldiv@divisor+1,w
  5171     0CE9  1C03               	skipc
  5172     0CEA  0F73               	incfsz	___lldiv@divisor+1,w
  5173     0CEB  02F7               	subwf	___lldiv@dividend+1,f
  5174     0CEC  0874               	movf	___lldiv@divisor+2,w
  5175     0CED  1C03               	skipc
  5176     0CEE  0F74               	incfsz	___lldiv@divisor+2,w
  5177     0CEF  02F8               	subwf	___lldiv@dividend+2,f
  5178     0CF0  0875               	movf	___lldiv@divisor+3,w
  5179     0CF1  1C03               	skipc
  5180     0CF2  0F75               	incfsz	___lldiv@divisor+3,w
  5181     0CF3  02F9               	subwf	___lldiv@dividend+3,f
  5182     0CF4                     l3576:
  5183     0CF4  1421               	bsf	___lldiv@quotient,0
  5184     0CF5                     l3578:
  5185     0CF5  3001               	movlw	1
  5186     0CF6                     u3685:
  5187     0CF6  1003               	clrc
  5188     0CF7  0CF5               	rrf	___lldiv@divisor+3,f
  5189     0CF8  0CF4               	rrf	___lldiv@divisor+2,f
  5190     0CF9  0CF3               	rrf	___lldiv@divisor+1,f
  5191     0CFA  0CF2               	rrf	___lldiv@divisor,f
  5192     0CFB  3EFF               	addlw	-1
  5193     0CFC  1D03               	skipz
  5194     0CFD  2CF6               	goto	u3685
  5195     0CFE                     l3580:
  5196     0CFE  3001               	movlw	1
  5197     0CFF  02A5               	subwf	___lldiv@counter,f
  5198     0D00  1D03               	btfss	3,2
  5199     0D01  2D03               	goto	u3691
  5200     0D02  2D04               	goto	u3690
  5201     0D03                     u3691:
  5202     0D03  2CCB               	goto	l3570
  5203     0D04                     u3690:
  5204     0D04                     l3582:
  5205     0D04  0824               	movf	___lldiv@quotient+3,w
  5206     0D05  00F5               	movwf	?___lldiv+3
  5207     0D06  0823               	movf	___lldiv@quotient+2,w
  5208     0D07  00F4               	movwf	?___lldiv+2
  5209     0D08  0822               	movf	___lldiv@quotient+1,w
  5210     0D09  00F3               	movwf	?___lldiv+1
  5211     0D0A  0821               	movf	___lldiv@quotient,w
  5212     0D0B  00F2               	movwf	?___lldiv
  5213     0D0C                     l569:
  5214     0D0C  0008               	return
  5215     0D0D                     __end_of___lldiv:
  5216                           
  5217                           	psect	text15
  5218     1574                     __ptext15:	
  5219 ;; *************** function _init_ds1307 *****************
  5220 ;; Defined at:
  5221 ;;		line 5 in file "ds1307.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;		None
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  dummy           1    6[COMMON] unsigned char 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1    wreg      void 
  5228 ;; Registers used:
  5229 ;;		wreg, status,2, status,0, pclath, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5235 ;;      Params:         0       0       0       0       0
  5236 ;;      Locals:         1       0       0       0       0
  5237 ;;      Temps:          0       0       0       0       0
  5238 ;;      Totals:         1       0       0       0       0
  5239 ;;Total ram usage:        1 bytes
  5240 ;; Hardware stack levels used: 1
  5241 ;; Hardware stack levels required when called: 5
  5242 ;; This function calls:
  5243 ;;		_read_ds1307
  5244 ;;		_write_ds1307
  5245 ;; This function is called by:
  5246 ;;		_init_config
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250     1574                     _init_ds1307:	
  5251                           ;psect for function _init_ds1307
  5252                           
  5253     1574                     l3602:	
  5254                           ;incstack = 0
  5255                           ; Regs used in _init_ds1307: [wreg+status,2+status,0+pclath+cstack]
  5256                           
  5257                           
  5258                           ;ds1307.c: 7:     unsigned char dummy;;ds1307.c: 9:     dummy = read_ds1307(0x00);
  5259     1574  3000               	movlw	0
  5260     1575  160A  118A  26E6  160A  118A  	fcall	_read_ds1307
  5261     157A  00F6               	movwf	init_ds1307@dummy
  5262     157B                     l3604:
  5263                           
  5264                           ;ds1307.c: 10:     dummy = dummy & 0x7F;
  5265     157B  307F               	movlw	127
  5266     157C  05F6               	andwf	init_ds1307@dummy,f
  5267     157D                     l3606:
  5268                           
  5269                           ;ds1307.c: 11:     write_ds1307(0x00, dummy);
  5270     157D  0876               	movf	init_ds1307@dummy,w
  5271     157E  00F3               	movwf	write_ds1307@data
  5272     157F  3000               	movlw	0
  5273     1580  160A  118A  25EC  160A  118A  	fcall	_write_ds1307
  5274     1585                     l49:
  5275     1585  0008               	return
  5276     1586                     __end_of_init_ds1307:
  5277                           
  5278                           	psect	text16
  5279     15EC                     __ptext16:	
  5280 ;; *************** function _write_ds1307 *****************
  5281 ;; Defined at:
  5282 ;;		line 29 in file "ds1307.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  addr            1    wreg     unsigned char 
  5285 ;;  data            1    3[COMMON] unsigned char 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  addr            1    4[COMMON] unsigned char 
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      void 
  5290 ;; Registers used:
  5291 ;;		wreg, status,2, status,0, pclath, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5297 ;;      Params:         1       0       0       0       0
  5298 ;;      Locals:         1       0       0       0       0
  5299 ;;      Temps:          0       0       0       0       0
  5300 ;;      Totals:         2       0       0       0       0
  5301 ;;Total ram usage:        2 bytes
  5302 ;; Hardware stack levels used: 1
  5303 ;; Hardware stack levels required when called: 3
  5304 ;; This function calls:
  5305 ;;		_i2c_start
  5306 ;;		_i2c_stop
  5307 ;;		_i2c_write
  5308 ;; This function is called by:
  5309 ;;		_init_ds1307
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313     15EC                     _write_ds1307:	
  5314                           ;psect for function _write_ds1307
  5315                           
  5316                           
  5317                           ;incstack = 0
  5318                           ; Regs used in _write_ds1307: [wreg+status,2+status,0+pclath+cstack]
  5319                           ;write_ds1307@addr stored from wreg
  5320     15EC  00F4               	movwf	write_ds1307@addr
  5321     15ED                     l3520:
  5322                           
  5323                           ;ds1307.c: 29: void write_ds1307(unsigned char addr, unsigned char data);ds1307.c: 30: {
      +                          ;ds1307.c: 31:     i2c_start();
  5324     15ED  160A  118A  2523  160A  118A  	fcall	_i2c_start
  5325                           
  5326                           ;ds1307.c: 32:     i2c_write(0b11010000);
  5327     15F2  30D0               	movlw	208
  5328     15F3  160A  118A  2535  160A  118A  	fcall	_i2c_write
  5329                           
  5330                           ;ds1307.c: 33:     i2c_write(addr);
  5331     15F8  0874               	movf	write_ds1307@addr,w
  5332     15F9  160A  118A  2535  160A  118A  	fcall	_i2c_write
  5333                           
  5334                           ;ds1307.c: 34:     i2c_write(data);
  5335     15FE  0873               	movf	write_ds1307@data,w
  5336     15FF  160A  118A  2535  160A  118A  	fcall	_i2c_write
  5337                           
  5338                           ;ds1307.c: 35:     i2c_stop();
  5339     1604  160A  118A  252C  160A  118A  	fcall	_i2c_stop
  5340     1609                     l55:
  5341     1609  0008               	return
  5342     160A                     __end_of_write_ds1307:
  5343                           
  5344                           	psect	text17
  5345     150E                     __ptext17:	
  5346 ;; *************** function _init_digital_keypad *****************
  5347 ;; Defined at:
  5348 ;;		line 10 in file "digital_keypad.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;		None
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;		None
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5362 ;;      Params:         0       0       0       0       0
  5363 ;;      Locals:         0       0       0       0       0
  5364 ;;      Temps:          0       0       0       0       0
  5365 ;;      Totals:         0       0       0       0       0
  5366 ;;Total ram usage:        0 bytes
  5367 ;; Hardware stack levels used: 1
  5368 ;; Hardware stack levels required when called: 1
  5369 ;; This function calls:
  5370 ;;		Nothing
  5371 ;; This function is called by:
  5372 ;;		_init_config
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376     150E                     _init_digital_keypad:	
  5377                           ;psect for function _init_digital_keypad
  5378                           
  5379     150E                     l3614:	
  5380                           ;incstack = 0
  5381                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  5382                           
  5383                           
  5384                           ;digital_keypad.c: 13:     TRISB = TRISB | 0x3F;
  5385     150E  1683               	bsf	3,5	;RP0=1, select bank1
  5386     150F  1303               	bcf	3,6	;RP1=0, select bank1
  5387     1510  0806               	movf	6,w	;volatile
  5388     1511  383F               	iorlw	63
  5389     1512  0086               	movwf	6	;volatile
  5390     1513                     l234:
  5391     1513  0008               	return
  5392     1514                     __end_of_init_digital_keypad:
  5393                           
  5394                           	psect	text18
  5395     154B                     __ptext18:	
  5396 ;; *************** function _init_clcd *****************
  5397 ;; Defined at:
  5398 ;;		line 44 in file "clcd.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;		None
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;		None
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  1    wreg      void 
  5405 ;; Registers used:
  5406 ;;		wreg, status,2, status,0, pclath, cstack
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5412 ;;      Params:         0       0       0       0       0
  5413 ;;      Locals:         0       0       0       0       0
  5414 ;;      Temps:          0       0       0       0       0
  5415 ;;      Totals:         0       0       0       0       0
  5416 ;;Total ram usage:        0 bytes
  5417 ;; Hardware stack levels used: 1
  5418 ;; Hardware stack levels required when called: 3
  5419 ;; This function calls:
  5420 ;;		_init_display_controller
  5421 ;; This function is called by:
  5422 ;;		_init_config
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426     154B                     _init_clcd:	
  5427                           ;psect for function _init_clcd
  5428                           
  5429     154B                     l3586:	
  5430                           ;incstack = 0
  5431                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  5432                           
  5433                           
  5434                           ;clcd.c: 47:     TRISD = 0x00;
  5435     154B  1683               	bsf	3,5	;RP0=1, select bank1
  5436     154C  1303               	bcf	3,6	;RP1=0, select bank1
  5437     154D  0188               	clrf	8	;volatile
  5438     154E                     l3588:
  5439                           
  5440                           ;clcd.c: 50:     TRISE2 = 0;
  5441     154E  1109               	bcf	9,2	;volatile
  5442     154F                     l3590:
  5443                           
  5444                           ;clcd.c: 51:     TRISE1 = 0;
  5445     154F  1089               	bcf	9,1	;volatile
  5446     1550                     l3592:
  5447                           
  5448                           ;clcd.c: 53:     init_display_controller();
  5449     1550  120A  158A  23DF  160A  118A  	fcall	_init_display_controller
  5450     1555                     l23:
  5451     1555  0008               	return
  5452     1556                     __end_of_init_clcd:
  5453                           
  5454                           	psect	text19
  5455     0BDF                     __ptext19:	
  5456 ;; *************** function _init_display_controller *****************
  5457 ;; Defined at:
  5458 ;;		line 21 in file "clcd.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;		None
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;		None
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1    wreg      void 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0, pclath, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5472 ;;      Params:         0       0       0       0       0
  5473 ;;      Locals:         0       0       0       0       0
  5474 ;;      Temps:          2       0       0       0       0
  5475 ;;      Totals:         2       0       0       0       0
  5476 ;;Total ram usage:        2 bytes
  5477 ;; Hardware stack levels used: 1
  5478 ;; Hardware stack levels required when called: 2
  5479 ;; This function calls:
  5480 ;;		_clcd_write
  5481 ;; This function is called by:
  5482 ;;		_init_clcd
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486     0BDF                     _init_display_controller:	
  5487                           ;psect for function _init_display_controller
  5488                           
  5489     0BDF                     l3494:	
  5490                           ;incstack = 0
  5491                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  5492                           
  5493                           
  5494                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  5495     0BDF  30C3               	movlw	195
  5496     0BE0  00F7               	movwf	??_init_display_controller+1
  5497     0BE1  30CD               	movlw	205
  5498     0BE2  00F6               	movwf	??_init_display_controller
  5499     0BE3                     u5337:
  5500     0BE3  0BF6               	decfsz	??_init_display_controller,f
  5501     0BE4  2BE3               	goto	u5337
  5502     0BE5  0BF7               	decfsz	??_init_display_controller+1,f
  5503     0BE6  2BE3               	goto	u5337
  5504     0BE7                     l3496:
  5505                           
  5506                           ;clcd.c: 27:     clcd_write(0x33, 0);
  5507     0BE7  01F2               	clrf	clcd_write@mode
  5508     0BE8  3033               	movlw	51
  5509     0BE9  120A  158A  2150  120A  158A  	fcall	_clcd_write
  5510     0BEE                     l3498:
  5511                           
  5512                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  5513     0BEE  301B               	movlw	27
  5514     0BEF  00F7               	movwf	??_init_display_controller+1
  5515     0BF0  309E               	movlw	158
  5516     0BF1  00F6               	movwf	??_init_display_controller
  5517     0BF2                     u5347:
  5518     0BF2  0BF6               	decfsz	??_init_display_controller,f
  5519     0BF3  2BF2               	goto	u5347
  5520     0BF4  0BF7               	decfsz	??_init_display_controller+1,f
  5521     0BF5  2BF2               	goto	u5347
  5522     0BF6  0000               	nop
  5523                           
  5524                           ;clcd.c: 29:     clcd_write(0x33, 0);
  5525     0BF7  01F2               	clrf	clcd_write@mode
  5526     0BF8  3033               	movlw	51
  5527     0BF9  120A  158A  2150  120A  158A  	fcall	_clcd_write
  5528     0BFE                     l3500:
  5529                           
  5530                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5531     0BFE  30A6               	movlw	166
  5532     0BFF  00F6               	movwf	??_init_display_controller
  5533     0C00                     u5357:
  5534     0C00  0BF6               	decfsz	??_init_display_controller,f
  5535     0C01  2C00               	goto	u5357
  5536     0C02  0000               	nop
  5537     0C03                     l3502:
  5538                           
  5539                           ;clcd.c: 31:     clcd_write(0x33, 0);
  5540     0C03  01F2               	clrf	clcd_write@mode
  5541     0C04  3033               	movlw	51
  5542     0C05  120A  158A  2150  120A  158A  	fcall	_clcd_write
  5543     0C0A                     l3504:
  5544                           
  5545                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  5546     0C0A  2C0B               	nop2	;2 cycle nop
  5547     0C0B  2C0C               	nop2	;2 cycle nop
  5548     0C0C  0000               	nop
  5549     0C0D                     l3506:
  5550                           
  5551                           ;clcd.c: 34:     clcd_write(0x02, 0);
  5552     0C0D  01F2               	clrf	clcd_write@mode
  5553     0C0E  3002               	movlw	2
  5554     0C0F  120A  158A  2150  120A  158A  	fcall	_clcd_write
  5555     0C14                     l3508:
  5556                           
  5557                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5558     0C14  30A6               	movlw	166
  5559     0C15  00F6               	movwf	??_init_display_controller
  5560     0C16                     u5367:
  5561     0C16  0BF6               	decfsz	??_init_display_controller,f
  5562     0C17  2C16               	goto	u5367
  5563     0C18  0000               	nop
  5564                           
  5565                           ;clcd.c: 36:     clcd_write(0x28, 0);
  5566     0C19  01F2               	clrf	clcd_write@mode
  5567     0C1A  3028               	movlw	40
  5568     0C1B  120A  158A  2150  120A  158A  	fcall	_clcd_write
  5569     0C20                     l3510:
  5570                           
  5571                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5572     0C20  30A6               	movlw	166
  5573     0C21  00F6               	movwf	??_init_display_controller
  5574     0C22                     u5377:
  5575     0C22  0BF6               	decfsz	??_init_display_controller,f
  5576     0C23  2C22               	goto	u5377
  5577     0C24  0000               	nop
  5578     0C25                     l3512:
  5579                           
  5580                           ;clcd.c: 38:     clcd_write(0x01, 0);
  5581     0C25  01F2               	clrf	clcd_write@mode
  5582     0C26  3001               	movlw	1
  5583     0C27  120A  158A  2150  120A  158A  	fcall	_clcd_write
  5584                           
  5585                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  5586     0C2C  3004               	movlw	4
  5587     0C2D  00F7               	movwf	??_init_display_controller+1
  5588     0C2E  303D               	movlw	61
  5589     0C2F  00F6               	movwf	??_init_display_controller
  5590     0C30                     u5387:
  5591     0C30  0BF6               	decfsz	??_init_display_controller,f
  5592     0C31  2C30               	goto	u5387
  5593     0C32  0BF7               	decfsz	??_init_display_controller+1,f
  5594     0C33  2C30               	goto	u5387
  5595     0C34  2C35               	nop2
  5596     0C35                     l3514:
  5597                           
  5598                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  5599     0C35  01F2               	clrf	clcd_write@mode
  5600     0C36  300C               	movlw	12
  5601     0C37  120A  158A  2150  120A  158A  	fcall	_clcd_write
  5602     0C3C                     l3516:
  5603                           
  5604                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5605     0C3C  30A6               	movlw	166
  5606     0C3D  00F6               	movwf	??_init_display_controller
  5607     0C3E                     u5397:
  5608     0C3E  0BF6               	decfsz	??_init_display_controller,f
  5609     0C3F  2C3E               	goto	u5397
  5610     0C40  0000               	nop
  5611     0C41                     l20:
  5612     0C41  0008               	return
  5613     0C42                     __end_of_init_display_controller:
  5614                           
  5615                           	psect	text20
  5616     1514                     __ptext20:	
  5617 ;; *************** function _init_adc *****************
  5618 ;; Defined at:
  5619 ;;		line 3 in file "adc.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;		None
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      void 
  5626 ;; Registers used:
  5627 ;;		None
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5633 ;;      Params:         0       0       0       0       0
  5634 ;;      Locals:         0       0       0       0       0
  5635 ;;      Temps:          0       0       0       0       0
  5636 ;;      Totals:         0       0       0       0       0
  5637 ;;Total ram usage:        0 bytes
  5638 ;; Hardware stack levels used: 1
  5639 ;; Hardware stack levels required when called: 1
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_init_config
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647     1514                     _init_adc:	
  5648                           ;psect for function _init_adc
  5649                           
  5650     1514                     l3616:	
  5651                           ;incstack = 0
  5652                           ; Regs used in _init_adc: []
  5653                           
  5654                           
  5655                           ;adc.c: 6:     ADFM = 1;
  5656     1514  1683               	bsf	3,5	;RP0=1, select bank1
  5657     1515  1303               	bcf	3,6	;RP1=0, select bank1
  5658     1516  179F               	bsf	31,7	;volatile
  5659                           
  5660                           ;adc.c: 9:     ADON = 1;
  5661     1517  1283               	bcf	3,5	;RP0=0, select bank0
  5662     1518  1303               	bcf	3,6	;RP1=0, select bank0
  5663     1519  141F               	bsf	31,0	;volatile
  5664     151A                     l221:
  5665     151A  0008               	return
  5666     151B                     __end_of_init_adc:
  5667                           
  5668                           	psect	text21
  5669     0A15                     __ptext21:	
  5670 ;; *************** function _display_dashboard *****************
  5671 ;; Defined at:
  5672 ;;		line 46 in file "car_block_box_def.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  event           1    2[BANK0 ] PTR unsigned char 
  5675 ;;		 -> main@event(3), 
  5676 ;;  speed           1    3[BANK0 ] unsigned char 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;		None
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      void 
  5681 ;; Registers used:
  5682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5688 ;;      Params:         0       2       0       0       0
  5689 ;;      Locals:         0       0       0       0       0
  5690 ;;      Temps:          0       2       0       0       0
  5691 ;;      Totals:         0       4       0       0       0
  5692 ;;Total ram usage:        4 bytes
  5693 ;; Hardware stack levels used: 1
  5694 ;; Hardware stack levels required when called: 7
  5695 ;; This function calls:
  5696 ;;		___awdiv
  5697 ;;		___awmod
  5698 ;;		_clcd_print
  5699 ;;		_clcd_putch
  5700 ;;		_display_time
  5701 ;; This function is called by:
  5702 ;;		_main
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706     0A15                     _display_dashboard:	
  5707                           ;psect for function _display_dashboard
  5708                           
  5709     0A15                     l3854:	
  5710                           ;incstack = 0
  5711                           ; Regs used in _display_dashboard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5712                           
  5713                           
  5714                           ;car_block_box_def.c: 46: void display_dashboard(char event[], unsigned char speed);car_
      +                          block_box_def.c: 47: {;car_block_box_def.c: 48:     clcd_print("TIME     E  SP", (0x80 +
      +                           2));
  5715     0A15  3075               	movlw	low (STR_15| (0+32768))
  5716     0A16  00F6               	movwf	clcd_print@str
  5717     0A17  3088               	movlw	high (STR_15| (0+32768))
  5718     0A18  00F7               	movwf	clcd_print@str+1
  5719     0A19  3082               	movlw	130
  5720     0A1A  00F8               	movwf	clcd_print@addr
  5721     0A1B  160A  118A  2769  120A  158A  	fcall	_clcd_print
  5722     0A20                     l3856:
  5723                           
  5724                           ;car_block_box_def.c: 51:     display_time();
  5725     0A20  120A  158A  231A  120A  158A  	fcall	_display_time
  5726     0A25                     l3858:
  5727                           
  5728                           ;car_block_box_def.c: 53:     clcd_print(event,(0xC0 + 11));
  5729     0A25  1283               	bcf	3,5	;RP0=0, select bank0
  5730     0A26  1303               	bcf	3,6	;RP1=0, select bank0
  5731     0A27  0822               	movf	display_dashboard@event,w
  5732     0A28  00F6               	movwf	clcd_print@str
  5733     0A29  3001               	movlw	1
  5734     0A2A  00F7               	movwf	clcd_print@str+1
  5735     0A2B  30CB               	movlw	203
  5736     0A2C  00F8               	movwf	clcd_print@addr
  5737     0A2D  160A  118A  2769  120A  158A  	fcall	_clcd_print
  5738                           
  5739                           ;car_block_box_def.c: 55:     clcd_putch((speed / 10) + '0', (0xC0 + 14));
  5740     0A32  30CE               	movlw	206
  5741     0A33  1283               	bcf	3,5	;RP0=0, select bank0
  5742     0A34  1303               	bcf	3,6	;RP1=0, select bank0
  5743     0A35  00A0               	movwf	clcd_putch@addr
  5744     0A36  300A               	movlw	10
  5745     0A37  00F2               	movwf	___awdiv@divisor
  5746     0A38  3000               	movlw	0
  5747     0A39  00F3               	movwf	___awdiv@divisor+1
  5748     0A3A  0823               	movf	display_dashboard@speed,w
  5749     0A3B  00A4               	movwf	??_display_dashboard
  5750     0A3C  01A5               	clrf	??_display_dashboard+1
  5751     0A3D  0824               	movf	??_display_dashboard,w
  5752     0A3E  00F4               	movwf	___awdiv@dividend
  5753     0A3F  0825               	movf	??_display_dashboard+1,w
  5754     0A40  00F5               	movwf	___awdiv@dividend+1
  5755     0A41  120A  158A  237C  120A  158A  	fcall	___awdiv
  5756     0A46  0872               	movf	?___awdiv,w
  5757     0A47  3E30               	addlw	48
  5758     0A48  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  5759                           
  5760                           ;car_block_box_def.c: 56:     clcd_putch((speed % 10) + '0', (0xC0 + 15));
  5761     0A4D  30CF               	movlw	207
  5762     0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  5763     0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  5764     0A50  00A0               	movwf	clcd_putch@addr
  5765     0A51  300A               	movlw	10
  5766     0A52  00F2               	movwf	___awmod@divisor
  5767     0A53  3000               	movlw	0
  5768     0A54  00F3               	movwf	___awmod@divisor+1
  5769     0A55  0823               	movf	display_dashboard@speed,w
  5770     0A56  00A4               	movwf	??_display_dashboard
  5771     0A57  01A5               	clrf	??_display_dashboard+1
  5772     0A58  0824               	movf	??_display_dashboard,w
  5773     0A59  00F4               	movwf	___awmod@dividend
  5774     0A5A  0825               	movf	??_display_dashboard+1,w
  5775     0A5B  00F5               	movwf	___awmod@dividend+1
  5776     0A5C  120A  158A  2269  120A  158A  	fcall	___awmod
  5777     0A61  0872               	movf	?___awmod,w
  5778     0A62  3E30               	addlw	48
  5779     0A63  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  5780     0A68                     l295:
  5781     0A68  0008               	return
  5782     0A69                     __end_of_display_dashboard:
  5783                           
  5784                           	psect	text22
  5785     0B1A                     __ptext22:	
  5786 ;; *************** function _display_time *****************
  5787 ;; Defined at:
  5788 ;;		line 27 in file "car_block_box_def.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;		None
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      void 
  5795 ;; Registers used:
  5796 ;;		wreg, status,2, status,0, pclath, cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5802 ;;      Params:         0       0       0       0       0
  5803 ;;      Locals:         0       0       0       0       0
  5804 ;;      Temps:          0       0       0       0       0
  5805 ;;      Totals:         0       0       0       0       0
  5806 ;;Total ram usage:        0 bytes
  5807 ;; Hardware stack levels used: 1
  5808 ;; Hardware stack levels required when called: 6
  5809 ;; This function calls:
  5810 ;;		_clcd_putch
  5811 ;;		_get_time
  5812 ;; This function is called by:
  5813 ;;		_display_dashboard
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817     0B1A                     _display_time:	
  5818                           ;psect for function _display_time
  5819                           
  5820     0B1A                     l3624:	
  5821                           ;incstack = 0
  5822                           ; Regs used in _display_time: [wreg+status,2+status,0+pclath+cstack]
  5823                           
  5824                           
  5825                           ;car_block_box_def.c: 29:     get_time();
  5826     0B1A  120A  118A  27AE  120A  158A  	fcall	_get_time
  5827                           
  5828                           ;car_block_box_def.c: 31:     clcd_putch(time[0], (0xC0 + 1));
  5829     0B1F  30C1               	movlw	193
  5830     0B20  1283               	bcf	3,5	;RP0=0, select bank0
  5831     0B21  1303               	bcf	3,6	;RP1=0, select bank0
  5832     0B22  00A0               	movwf	clcd_putch@addr
  5833     0B23  1683               	bsf	3,5	;RP0=1, select bank1
  5834     0B24  1303               	bcf	3,6	;RP1=0, select bank1
  5835     0B25  083B               	movf	_time^(0+128),w
  5836     0B26  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  5837                           
  5838                           ;car_block_box_def.c: 32:     clcd_putch(time[1], (0xC0 + 2));
  5839     0B2B  30C2               	movlw	194
  5840     0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  5841     0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  5842     0B2E  00A0               	movwf	clcd_putch@addr
  5843     0B2F  1683               	bsf	3,5	;RP0=1, select bank1
  5844     0B30  1303               	bcf	3,6	;RP1=0, select bank1
  5845     0B31  083C               	movf	(_time^(0+128)+1),w
  5846     0B32  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  5847                           
  5848                           ;car_block_box_def.c: 34:     clcd_putch(':', (0xC0 + 3));
  5849     0B37  30C3               	movlw	195
  5850     0B38  1283               	bcf	3,5	;RP0=0, select bank0
  5851     0B39  1303               	bcf	3,6	;RP1=0, select bank0
  5852     0B3A  00A0               	movwf	clcd_putch@addr
  5853     0B3B  303A               	movlw	58
  5854     0B3C  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  5855                           
  5856                           ;car_block_box_def.c: 36:     clcd_putch(time[2], (0xC0 + 4));
  5857     0B41  30C4               	movlw	196
  5858     0B42  1283               	bcf	3,5	;RP0=0, select bank0
  5859     0B43  1303               	bcf	3,6	;RP1=0, select bank0
  5860     0B44  00A0               	movwf	clcd_putch@addr
  5861     0B45  1683               	bsf	3,5	;RP0=1, select bank1
  5862     0B46  1303               	bcf	3,6	;RP1=0, select bank1
  5863     0B47  083D               	movf	(_time^(0+128)+2),w
  5864     0B48  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  5865                           
  5866                           ;car_block_box_def.c: 37:     clcd_putch(time[3], (0xC0 + 5));
  5867     0B4D  30C5               	movlw	197
  5868     0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  5869     0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  5870     0B50  00A0               	movwf	clcd_putch@addr
  5871     0B51  1683               	bsf	3,5	;RP0=1, select bank1
  5872     0B52  1303               	bcf	3,6	;RP1=0, select bank1
  5873     0B53  083E               	movf	(_time^(0+128)+3),w
  5874     0B54  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  5875                           
  5876                           ;car_block_box_def.c: 39:     clcd_putch(':', (0xC0 + 6));
  5877     0B59  30C6               	movlw	198
  5878     0B5A  1283               	bcf	3,5	;RP0=0, select bank0
  5879     0B5B  1303               	bcf	3,6	;RP1=0, select bank0
  5880     0B5C  00A0               	movwf	clcd_putch@addr
  5881     0B5D  303A               	movlw	58
  5882     0B5E  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  5883                           
  5884                           ;car_block_box_def.c: 41:     clcd_putch(time[4], (0xC0 + 7));
  5885     0B63  30C7               	movlw	199
  5886     0B64  1283               	bcf	3,5	;RP0=0, select bank0
  5887     0B65  1303               	bcf	3,6	;RP1=0, select bank0
  5888     0B66  00A0               	movwf	clcd_putch@addr
  5889     0B67  1683               	bsf	3,5	;RP0=1, select bank1
  5890     0B68  1303               	bcf	3,6	;RP1=0, select bank1
  5891     0B69  083F               	movf	(_time^(0+128)+4),w
  5892     0B6A  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  5893                           
  5894                           ;car_block_box_def.c: 42:     clcd_putch(time[5], (0xC0 + 8));
  5895     0B6F  30C8               	movlw	200
  5896     0B70  1283               	bcf	3,5	;RP0=0, select bank0
  5897     0B71  1303               	bcf	3,6	;RP1=0, select bank0
  5898     0B72  00A0               	movwf	clcd_putch@addr
  5899     0B73  1683               	bsf	3,5	;RP0=1, select bank1
  5900     0B74  1303               	bcf	3,6	;RP1=0, select bank1
  5901     0B75  0840               	movf	(_time^(0+128)+5),w
  5902     0B76  160A  118A  25BE  120A  158A  	fcall	_clcd_putch
  5903     0B7B                     l292:
  5904     0B7B  0008               	return
  5905     0B7C                     __end_of_display_time:
  5906                           
  5907                           	psect	text23
  5908     07AE                     __ptext23:	
  5909 ;; *************** function _get_time *****************
  5910 ;; Defined at:
  5911 ;;		line 8 in file "car_block_box_def.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;		None
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  1    wreg      void 
  5918 ;; Registers used:
  5919 ;;		wreg, status,2, status,0, pclath, cstack
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5925 ;;      Params:         0       0       0       0       0
  5926 ;;      Locals:         0       0       0       0       0
  5927 ;;      Temps:          1       0       0       0       0
  5928 ;;      Totals:         1       0       0       0       0
  5929 ;;Total ram usage:        1 bytes
  5930 ;; Hardware stack levels used: 1
  5931 ;; Hardware stack levels required when called: 5
  5932 ;; This function calls:
  5933 ;;		_read_ds1307
  5934 ;; This function is called by:
  5935 ;;		_display_time
  5936 ;;		_log_car_event
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940     07AE                     _get_time:	
  5941                           ;psect for function _get_time
  5942                           
  5943     07AE                     l3532:	
  5944                           ;incstack = 0
  5945                           ; Regs used in _get_time: [wreg+status,2+status,0+pclath+cstack]
  5946                           
  5947                           
  5948                           ;car_block_box_def.c: 10:     clock_reg[0] = read_ds1307(0x02);
  5949     07AE  3002               	movlw	2
  5950     07AF  160A  118A  26E6  120A  118A  	fcall	_read_ds1307
  5951     07B4  1683               	bsf	3,5	;RP0=1, select bank1
  5952     07B5  1303               	bcf	3,6	;RP1=0, select bank1
  5953     07B6  00A0               	movwf	_clock_reg^(0+128)
  5954                           
  5955                           ;car_block_box_def.c: 11:     clock_reg[1] = read_ds1307(0x01);
  5956     07B7  3001               	movlw	1
  5957     07B8  160A  118A  26E6  120A  118A  	fcall	_read_ds1307
  5958     07BD  1683               	bsf	3,5	;RP0=1, select bank1
  5959     07BE  1303               	bcf	3,6	;RP1=0, select bank1
  5960     07BF  00A1               	movwf	(_clock_reg^(0+128)+1)
  5961                           
  5962                           ;car_block_box_def.c: 12:     clock_reg[2] = read_ds1307(0x00);
  5963     07C0  3000               	movlw	0
  5964     07C1  160A  118A  26E6  120A  118A  	fcall	_read_ds1307
  5965     07C6  1683               	bsf	3,5	;RP0=1, select bank1
  5966     07C7  1303               	bcf	3,6	;RP1=0, select bank1
  5967     07C8  00A2               	movwf	(_clock_reg^(0+128)+2)
  5968     07C9                     l3534:
  5969                           
  5970                           ;car_block_box_def.c: 15:     time[0] = ((clock_reg[0] >> 4) & 0x03) + '0';
  5971     07C9  0820               	movf	_clock_reg^(0+128),w
  5972     07CA  00F6               	movwf	??_get_time
  5973     07CB  3004               	movlw	4
  5974     07CC                     u3585:
  5975     07CC  1003               	clrc
  5976     07CD  0CF6               	rrf	??_get_time,f
  5977     07CE  3EFF               	addlw	-1
  5978     07CF  1D03               	skipz
  5979     07D0  2FCC               	goto	u3585
  5980     07D1  0876               	movf	??_get_time,w
  5981     07D2  3903               	andlw	3
  5982     07D3  3E30               	addlw	48
  5983     07D4  00BB               	movwf	_time^(0+128)
  5984     07D5                     l3536:
  5985                           
  5986                           ;car_block_box_def.c: 16:     time[1] = (clock_reg[0] & 0x0F) + '0';
  5987     07D5  0820               	movf	_clock_reg^(0+128),w
  5988     07D6  390F               	andlw	15
  5989     07D7  3E30               	addlw	48
  5990     07D8  00BC               	movwf	(_time^(0+128)+1)
  5991     07D9                     l3538:
  5992                           
  5993                           ;car_block_box_def.c: 19:     time[2] = ((clock_reg[1] >> 4) & 0x07) + '0';
  5994     07D9  0821               	movf	(_clock_reg^(0+128)+1),w
  5995     07DA  00F6               	movwf	??_get_time
  5996     07DB  3004               	movlw	4
  5997     07DC                     u3595:
  5998     07DC  1003               	clrc
  5999     07DD  0CF6               	rrf	??_get_time,f
  6000     07DE  3EFF               	addlw	-1
  6001     07DF  1D03               	skipz
  6002     07E0  2FDC               	goto	u3595
  6003     07E1  0876               	movf	??_get_time,w
  6004     07E2  3907               	andlw	7
  6005     07E3  3E30               	addlw	48
  6006     07E4  00BD               	movwf	(_time^(0+128)+2)
  6007     07E5                     l3540:
  6008                           
  6009                           ;car_block_box_def.c: 20:     time[3] = (clock_reg[1] & 0x0F) + '0';
  6010     07E5  0821               	movf	(_clock_reg^(0+128)+1),w
  6011     07E6  390F               	andlw	15
  6012     07E7  3E30               	addlw	48
  6013     07E8  00BE               	movwf	(_time^(0+128)+3)
  6014     07E9                     l3542:
  6015                           
  6016                           ;car_block_box_def.c: 23:     time[4] = ((clock_reg[2] >> 4) & 0x07) + '0';
  6017     07E9  0822               	movf	(_clock_reg^(0+128)+2),w
  6018     07EA  00F6               	movwf	??_get_time
  6019     07EB  3004               	movlw	4
  6020     07EC                     u3605:
  6021     07EC  1003               	clrc
  6022     07ED  0CF6               	rrf	??_get_time,f
  6023     07EE  3EFF               	addlw	-1
  6024     07EF  1D03               	skipz
  6025     07F0  2FEC               	goto	u3605
  6026     07F1  0876               	movf	??_get_time,w
  6027     07F2  3907               	andlw	7
  6028     07F3  3E30               	addlw	48
  6029     07F4  00BF               	movwf	(_time^(0+128)+4)
  6030     07F5                     l3544:
  6031                           
  6032                           ;car_block_box_def.c: 24:     time[5] = (clock_reg[2] & 0x0F) + '0';
  6033     07F5  0822               	movf	(_clock_reg^(0+128)+2),w
  6034     07F6  390F               	andlw	15
  6035     07F7  3E30               	addlw	48
  6036     07F8  00C0               	movwf	(_time^(0+128)+5)
  6037     07F9                     l3546:
  6038                           
  6039                           ;car_block_box_def.c: 25:     time[6] = '\0';
  6040     07F9  01C1               	clrf	(_time^(0+128)+6)
  6041     07FA                     l289:
  6042     07FA  0008               	return
  6043     07FB                     __end_of_get_time:
  6044                           
  6045                           	psect	text24
  6046     16E6                     __ptext24:	
  6047 ;; *************** function _read_ds1307 *****************
  6048 ;; Defined at:
  6049 ;;		line 14 in file "ds1307.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  addr            1    wreg     unsigned char 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  addr            1    4[COMMON] unsigned char 
  6054 ;;  data            1    5[COMMON] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      unsigned char 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0, pclath, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6064 ;;      Params:         0       0       0       0       0
  6065 ;;      Locals:         2       0       0       0       0
  6066 ;;      Temps:          0       0       0       0       0
  6067 ;;      Totals:         2       0       0       0       0
  6068 ;;Total ram usage:        2 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 4
  6071 ;; This function calls:
  6072 ;;		_i2c_read
  6073 ;;		_i2c_rep_start
  6074 ;;		_i2c_start
  6075 ;;		_i2c_stop
  6076 ;;		_i2c_write
  6077 ;; This function is called by:
  6078 ;;		_init_ds1307
  6079 ;;		_get_time
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083     16E6                     _read_ds1307:	
  6084                           ;psect for function _read_ds1307
  6085                           
  6086                           
  6087                           ;incstack = 0
  6088                           ; Regs used in _read_ds1307: [wreg+status,2+status,0+pclath+cstack]
  6089                           ;read_ds1307@addr stored from wreg
  6090     16E6  00F4               	movwf	read_ds1307@addr
  6091     16E7                     l3484:
  6092                           
  6093                           ;ds1307.c: 14: unsigned char read_ds1307(unsigned char addr);ds1307.c: 15: {;ds1307.c: 1
      +                          6:     unsigned char data;;ds1307.c: 18:     i2c_start();
  6094     16E7  160A  118A  2523  160A  118A  	fcall	_i2c_start
  6095                           
  6096                           ;ds1307.c: 19:     i2c_write(0b11010000);
  6097     16EC  30D0               	movlw	208
  6098     16ED  160A  118A  2535  160A  118A  	fcall	_i2c_write
  6099                           
  6100                           ;ds1307.c: 20:     i2c_write(addr);
  6101     16F2  0874               	movf	read_ds1307@addr,w
  6102     16F3  160A  118A  2535  160A  118A  	fcall	_i2c_write
  6103                           
  6104                           ;ds1307.c: 21:     i2c_rep_start();
  6105     16F8  160A  118A  2540  160A  118A  	fcall	_i2c_rep_start
  6106                           
  6107                           ;ds1307.c: 22:     i2c_write(0b11010001);
  6108     16FD  30D1               	movlw	209
  6109     16FE  160A  118A  2535  160A  118A  	fcall	_i2c_write
  6110                           
  6111                           ;ds1307.c: 23:     data = i2c_read(0);
  6112     1703  3000               	movlw	0
  6113     1704  160A  118A  260A  160A  118A  	fcall	_i2c_read
  6114     1709  00F5               	movwf	read_ds1307@data
  6115                           
  6116                           ;ds1307.c: 24:     i2c_stop();
  6117     170A  160A  118A  252C  160A  118A  	fcall	_i2c_stop
  6118     170F                     l3486:
  6119                           
  6120                           ;ds1307.c: 26:     return data;
  6121     170F  0875               	movf	read_ds1307@data,w
  6122     1710                     l52:
  6123     1710  0008               	return
  6124     1711                     __end_of_read_ds1307:
  6125                           
  6126                           	psect	text25
  6127     1540                     __ptext25:	
  6128 ;; *************** function _i2c_rep_start *****************
  6129 ;; Defined at:
  6130 ;;		line 28 in file "i2c.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;		None
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;		None
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1    wreg      void 
  6137 ;; Registers used:
  6138 ;;		wreg, status,2, status,0, pclath, cstack
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6144 ;;      Params:         0       0       0       0       0
  6145 ;;      Locals:         0       0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0
  6147 ;;      Totals:         0       0       0       0       0
  6148 ;;Total ram usage:        0 bytes
  6149 ;; Hardware stack levels used: 1
  6150 ;; Hardware stack levels required when called: 3
  6151 ;; This function calls:
  6152 ;;		_i2c_start
  6153 ;;		_i2c_stop
  6154 ;; This function is called by:
  6155 ;;		_read_ds1307
  6156 ;;		_read_at24c04
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160     1540                     _i2c_rep_start:	
  6161                           ;psect for function _i2c_rep_start
  6162                           
  6163     1540                     l3448:	
  6164                           ;incstack = 0
  6165                           ; Regs used in _i2c_rep_start: [wreg+status,2+status,0+pclath+cstack]
  6166                           
  6167                           
  6168                           ;i2c.c: 30:     i2c_stop();
  6169     1540  160A  118A  252C  160A  118A  	fcall	_i2c_stop
  6170                           
  6171                           ;i2c.c: 31:     i2c_start();
  6172     1545  160A  118A  2523  160A  118A  	fcall	_i2c_start
  6173     154A                     l96:
  6174     154A  0008               	return
  6175     154B                     __end_of_i2c_rep_start:
  6176                           
  6177                           	psect	text26
  6178     160A                     __ptext26:	
  6179 ;; *************** function _i2c_read *****************
  6180 ;; Defined at:
  6181 ;;		line 41 in file "i2c.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  ack             1    wreg     unsigned char 
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;  ack             1    2[COMMON] unsigned char 
  6186 ;;  data            1    3[COMMON] unsigned char 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1    wreg      unsigned char 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0, pclath, cstack
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6196 ;;      Params:         0       0       0       0       0
  6197 ;;      Locals:         2       0       0       0       0
  6198 ;;      Temps:          0       0       0       0       0
  6199 ;;      Totals:         2       0       0       0       0
  6200 ;;Total ram usage:        2 bytes
  6201 ;; Hardware stack levels used: 1
  6202 ;; Hardware stack levels required when called: 2
  6203 ;; This function calls:
  6204 ;;		_i2c_wait_for_idle
  6205 ;; This function is called by:
  6206 ;;		_read_ds1307
  6207 ;;		_read_at24c04
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211     160A                     _i2c_read:	
  6212                           ;psect for function _i2c_read
  6213                           
  6214                           
  6215                           ;incstack = 0
  6216                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  6217                           ;i2c_read@ack stored from wreg
  6218     160A  00F2               	movwf	i2c_read@ack
  6219     160B                     l3450:
  6220                           
  6221                           ;i2c.c: 41: unsigned char i2c_read(unsigned char ack);i2c.c: 42: {;i2c.c: 43:     unsign
      +                          ed char data;;i2c.c: 45:     i2c_wait_for_idle();
  6222     160B  160A  118A  2556  160A  118A  	fcall	_i2c_wait_for_idle
  6223     1610                     l3452:
  6224                           
  6225                           ;i2c.c: 46:     RCEN = 1;
  6226     1610  1683               	bsf	3,5	;RP0=1, select bank1
  6227     1611  1303               	bcf	3,6	;RP1=0, select bank1
  6228     1612  1591               	bsf	17,3	;volatile
  6229                           
  6230                           ;i2c.c: 48:     i2c_wait_for_idle();
  6231     1613  160A  118A  2556  160A  118A  	fcall	_i2c_wait_for_idle
  6232     1618                     l3454:
  6233                           
  6234                           ;i2c.c: 49:     data = SSPBUF;
  6235     1618  1283               	bcf	3,5	;RP0=0, select bank0
  6236     1619  1303               	bcf	3,6	;RP1=0, select bank0
  6237     161A  0813               	movf	19,w	;volatile
  6238     161B  00F3               	movwf	i2c_read@data
  6239     161C                     l3456:
  6240                           
  6241                           ;i2c.c: 51:     if (ack == 1)
  6242     161C  0372               	decf	i2c_read@ack,w
  6243     161D  1D03               	btfss	3,2
  6244     161E  2E20               	goto	u3531
  6245     161F  2E21               	goto	u3530
  6246     1620                     u3531:
  6247     1620  2E25               	goto	l102
  6248     1621                     u3530:
  6249     1621                     l3458:
  6250                           
  6251                           ;i2c.c: 52:     {;i2c.c: 53:         ACKDT = 1;
  6252     1621  1683               	bsf	3,5	;RP0=1, select bank1
  6253     1622  1303               	bcf	3,6	;RP1=0, select bank1
  6254     1623  1691               	bsf	17,5	;volatile
  6255                           
  6256                           ;i2c.c: 54:     }
  6257     1624  2E29               	goto	l3460
  6258     1625                     l102:	
  6259                           ;i2c.c: 55:     else
  6260                           
  6261                           
  6262                           ;i2c.c: 56:     {;i2c.c: 57:         ACKDT = 0;
  6263     1625  1683               	bsf	3,5	;RP0=1, select bank1
  6264     1626  1303               	bcf	3,6	;RP1=0, select bank1
  6265     1627  1291               	bcf	17,5	;volatile
  6266                           
  6267                           ;i2c.c: 58:         ACKEN = 1;
  6268     1628  1611               	bsf	17,4	;volatile
  6269     1629                     l3460:
  6270                           
  6271                           ;i2c.c: 63:     return data;
  6272     1629  0873               	movf	i2c_read@data,w
  6273     162A                     l104:
  6274     162A  0008               	return
  6275     162B                     __end_of_i2c_read:
  6276                           
  6277                           	psect	text27
  6278     0A69                     __ptext27:	
  6279 ;; *************** function ___awmod *****************
  6280 ;; Defined at:
  6281 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;  divisor         2    2[COMMON] int 
  6284 ;;  dividend        2    4[COMMON] int 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  sign            1    7[COMMON] unsigned char 
  6287 ;;  counter         1    6[COMMON] unsigned char 
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  2    2[COMMON] int 
  6290 ;; Registers used:
  6291 ;;		wreg, status,2, status,0
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6297 ;;      Params:         4       0       0       0       0
  6298 ;;      Locals:         2       0       0       0       0
  6299 ;;      Temps:          0       0       0       0       0
  6300 ;;      Totals:         6       0       0       0       0
  6301 ;;Total ram usage:        6 bytes
  6302 ;; Hardware stack levels used: 1
  6303 ;; Hardware stack levels required when called: 1
  6304 ;; This function calls:
  6305 ;;		Nothing
  6306 ;; This function is called by:
  6307 ;;		_display_dashboard
  6308 ;;		_log_car_event
  6309 ;;		_login
  6310 ;;		_view_log
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314     0A69                     ___awmod:	
  6315                           ;psect for function ___awmod
  6316                           
  6317     0A69                     l3724:	
  6318                           ;incstack = 0
  6319                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6320                           
  6321     0A69  01F7               	clrf	___awmod@sign
  6322     0A6A                     l3726:
  6323     0A6A  1FF5               	btfss	___awmod@dividend+1,7
  6324     0A6B  2A6D               	goto	u3911
  6325     0A6C  2A6E               	goto	u3910
  6326     0A6D                     u3911:
  6327     0A6D  2A75               	goto	l3732
  6328     0A6E                     u3910:
  6329     0A6E                     l3728:
  6330     0A6E  09F4               	comf	___awmod@dividend,f
  6331     0A6F  09F5               	comf	___awmod@dividend+1,f
  6332     0A70  0AF4               	incf	___awmod@dividend,f
  6333     0A71  1903               	skipnz
  6334     0A72  0AF5               	incf	___awmod@dividend+1,f
  6335     0A73                     l3730:
  6336     0A73  3001               	movlw	1
  6337     0A74  00F7               	movwf	___awmod@sign
  6338     0A75                     l3732:
  6339     0A75  1FF3               	btfss	___awmod@divisor+1,7
  6340     0A76  2A78               	goto	u3921
  6341     0A77  2A79               	goto	u3920
  6342     0A78                     u3921:
  6343     0A78  2A7E               	goto	l3736
  6344     0A79                     u3920:
  6345     0A79                     l3734:
  6346     0A79  09F2               	comf	___awmod@divisor,f
  6347     0A7A  09F3               	comf	___awmod@divisor+1,f
  6348     0A7B  0AF2               	incf	___awmod@divisor,f
  6349     0A7C  1903               	skipnz
  6350     0A7D  0AF3               	incf	___awmod@divisor+1,f
  6351     0A7E                     l3736:
  6352     0A7E  0872               	movf	___awmod@divisor,w
  6353     0A7F  0473               	iorwf	___awmod@divisor+1,w
  6354     0A80  1903               	btfsc	3,2
  6355     0A81  2A83               	goto	u3931
  6356     0A82  2A84               	goto	u3930
  6357     0A83                     u3931:
  6358     0A83  2AB1               	goto	l3754
  6359     0A84                     u3930:
  6360     0A84                     l3738:
  6361     0A84  3001               	movlw	1
  6362     0A85  00F6               	movwf	___awmod@counter
  6363     0A86  2A90               	goto	l3744
  6364     0A87                     l3740:
  6365     0A87  3001               	movlw	1
  6366     0A88                     u3945:
  6367     0A88  1003               	clrc
  6368     0A89  0DF2               	rlf	___awmod@divisor,f
  6369     0A8A  0DF3               	rlf	___awmod@divisor+1,f
  6370     0A8B  3EFF               	addlw	-1
  6371     0A8C  1D03               	skipz
  6372     0A8D  2A88               	goto	u3945
  6373     0A8E                     l3742:
  6374     0A8E  3001               	movlw	1
  6375     0A8F  07F6               	addwf	___awmod@counter,f
  6376     0A90                     l3744:
  6377     0A90  1FF3               	btfss	___awmod@divisor+1,7
  6378     0A91  2A93               	goto	u3951
  6379     0A92  2A94               	goto	u3950
  6380     0A93                     u3951:
  6381     0A93  2A87               	goto	l3740
  6382     0A94                     u3950:
  6383     0A94                     l3746:
  6384     0A94  0873               	movf	___awmod@divisor+1,w
  6385     0A95  0275               	subwf	___awmod@dividend+1,w
  6386     0A96  1D03               	skipz
  6387     0A97  2A9A               	goto	u3965
  6388     0A98  0872               	movf	___awmod@divisor,w
  6389     0A99  0274               	subwf	___awmod@dividend,w
  6390     0A9A                     u3965:
  6391     0A9A  1C03               	skipc
  6392     0A9B  2A9D               	goto	u3961
  6393     0A9C  2A9E               	goto	u3960
  6394     0A9D                     u3961:
  6395     0A9D  2AA4               	goto	l3750
  6396     0A9E                     u3960:
  6397     0A9E                     l3748:
  6398     0A9E  0872               	movf	___awmod@divisor,w
  6399     0A9F  02F4               	subwf	___awmod@dividend,f
  6400     0AA0  0873               	movf	___awmod@divisor+1,w
  6401     0AA1  1C03               	skipc
  6402     0AA2  03F5               	decf	___awmod@dividend+1,f
  6403     0AA3  02F5               	subwf	___awmod@dividend+1,f
  6404     0AA4                     l3750:
  6405     0AA4  3001               	movlw	1
  6406     0AA5                     u3975:
  6407     0AA5  1003               	clrc
  6408     0AA6  0CF3               	rrf	___awmod@divisor+1,f
  6409     0AA7  0CF2               	rrf	___awmod@divisor,f
  6410     0AA8  3EFF               	addlw	-1
  6411     0AA9  1D03               	skipz
  6412     0AAA  2AA5               	goto	u3975
  6413     0AAB                     l3752:
  6414     0AAB  3001               	movlw	1
  6415     0AAC  02F6               	subwf	___awmod@counter,f
  6416     0AAD  1D03               	btfss	3,2
  6417     0AAE  2AB0               	goto	u3981
  6418     0AAF  2AB1               	goto	u3980
  6419     0AB0                     u3981:
  6420     0AB0  2A94               	goto	l3746
  6421     0AB1                     u3980:
  6422     0AB1                     l3754:
  6423     0AB1  0877               	movf	___awmod@sign,w
  6424     0AB2  1903               	btfsc	3,2
  6425     0AB3  2AB5               	goto	u3991
  6426     0AB4  2AB6               	goto	u3990
  6427     0AB5                     u3991:
  6428     0AB5  2ABB               	goto	l3758
  6429     0AB6                     u3990:
  6430     0AB6                     l3756:
  6431     0AB6  09F4               	comf	___awmod@dividend,f
  6432     0AB7  09F5               	comf	___awmod@dividend+1,f
  6433     0AB8  0AF4               	incf	___awmod@dividend,f
  6434     0AB9  1903               	skipnz
  6435     0ABA  0AF5               	incf	___awmod@dividend+1,f
  6436     0ABB                     l3758:
  6437     0ABB  0875               	movf	___awmod@dividend+1,w
  6438     0ABC  00F3               	movwf	?___awmod+1
  6439     0ABD  0874               	movf	___awmod@dividend,w
  6440     0ABE  00F2               	movwf	?___awmod
  6441     0ABF                     l699:
  6442     0ABF  0008               	return
  6443     0AC0                     __end_of___awmod:
  6444                           
  6445                           	psect	text28
  6446     0B7C                     __ptext28:	
  6447 ;; *************** function ___awdiv *****************
  6448 ;; Defined at:
  6449 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  divisor         2    2[COMMON] int 
  6452 ;;  dividend        2    4[COMMON] int 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  quotient        2    8[COMMON] int 
  6455 ;;  sign            1    7[COMMON] unsigned char 
  6456 ;;  counter         1    6[COMMON] unsigned char 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  2    2[COMMON] int 
  6459 ;; Registers used:
  6460 ;;		wreg, status,2, status,0
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6466 ;;      Params:         4       0       0       0       0
  6467 ;;      Locals:         4       0       0       0       0
  6468 ;;      Temps:          0       0       0       0       0
  6469 ;;      Totals:         8       0       0       0       0
  6470 ;;Total ram usage:        8 bytes
  6471 ;; Hardware stack levels used: 1
  6472 ;; Hardware stack levels required when called: 1
  6473 ;; This function calls:
  6474 ;;		Nothing
  6475 ;; This function is called by:
  6476 ;;		_display_dashboard
  6477 ;;		_log_car_event
  6478 ;;		_login
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482     0B7C                     ___awdiv:	
  6483                           ;psect for function ___awdiv
  6484                           
  6485     0B7C                     l3680:	
  6486                           ;incstack = 0
  6487                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6488                           
  6489     0B7C  01F7               	clrf	___awdiv@sign
  6490     0B7D                     l3682:
  6491     0B7D  1FF3               	btfss	___awdiv@divisor+1,7
  6492     0B7E  2B80               	goto	u3811
  6493     0B7F  2B81               	goto	u3810
  6494     0B80                     u3811:
  6495     0B80  2B88               	goto	l3688
  6496     0B81                     u3810:
  6497     0B81                     l3684:
  6498     0B81  09F2               	comf	___awdiv@divisor,f
  6499     0B82  09F3               	comf	___awdiv@divisor+1,f
  6500     0B83  0AF2               	incf	___awdiv@divisor,f
  6501     0B84  1903               	skipnz
  6502     0B85  0AF3               	incf	___awdiv@divisor+1,f
  6503     0B86                     l3686:
  6504     0B86  3001               	movlw	1
  6505     0B87  00F7               	movwf	___awdiv@sign
  6506     0B88                     l3688:
  6507     0B88  1FF5               	btfss	___awdiv@dividend+1,7
  6508     0B89  2B8B               	goto	u3821
  6509     0B8A  2B8C               	goto	u3820
  6510     0B8B                     u3821:
  6511     0B8B  2B93               	goto	l3694
  6512     0B8C                     u3820:
  6513     0B8C                     l3690:
  6514     0B8C  09F4               	comf	___awdiv@dividend,f
  6515     0B8D  09F5               	comf	___awdiv@dividend+1,f
  6516     0B8E  0AF4               	incf	___awdiv@dividend,f
  6517     0B8F  1903               	skipnz
  6518     0B90  0AF5               	incf	___awdiv@dividend+1,f
  6519     0B91                     l3692:
  6520     0B91  3001               	movlw	1
  6521     0B92  06F7               	xorwf	___awdiv@sign,f
  6522     0B93                     l3694:
  6523     0B93  01F8               	clrf	___awdiv@quotient
  6524     0B94  01F9               	clrf	___awdiv@quotient+1
  6525     0B95                     l3696:
  6526     0B95  0872               	movf	___awdiv@divisor,w
  6527     0B96  0473               	iorwf	___awdiv@divisor+1,w
  6528     0B97  1903               	btfsc	3,2
  6529     0B98  2B9A               	goto	u3831
  6530     0B99  2B9B               	goto	u3830
  6531     0B9A                     u3831:
  6532     0B9A  2BD0               	goto	l3716
  6533     0B9B                     u3830:
  6534     0B9B                     l3698:
  6535     0B9B  3001               	movlw	1
  6536     0B9C  00F6               	movwf	___awdiv@counter
  6537     0B9D  2BA7               	goto	l3704
  6538     0B9E                     l3700:
  6539     0B9E  3001               	movlw	1
  6540     0B9F                     u3845:
  6541     0B9F  1003               	clrc
  6542     0BA0  0DF2               	rlf	___awdiv@divisor,f
  6543     0BA1  0DF3               	rlf	___awdiv@divisor+1,f
  6544     0BA2  3EFF               	addlw	-1
  6545     0BA3  1D03               	skipz
  6546     0BA4  2B9F               	goto	u3845
  6547     0BA5                     l3702:
  6548     0BA5  3001               	movlw	1
  6549     0BA6  07F6               	addwf	___awdiv@counter,f
  6550     0BA7                     l3704:
  6551     0BA7  1FF3               	btfss	___awdiv@divisor+1,7
  6552     0BA8  2BAA               	goto	u3851
  6553     0BA9  2BAB               	goto	u3850
  6554     0BAA                     u3851:
  6555     0BAA  2B9E               	goto	l3700
  6556     0BAB                     u3850:
  6557     0BAB                     l3706:
  6558     0BAB  3001               	movlw	1
  6559     0BAC                     u3865:
  6560     0BAC  1003               	clrc
  6561     0BAD  0DF8               	rlf	___awdiv@quotient,f
  6562     0BAE  0DF9               	rlf	___awdiv@quotient+1,f
  6563     0BAF  3EFF               	addlw	-1
  6564     0BB0  1D03               	skipz
  6565     0BB1  2BAC               	goto	u3865
  6566     0BB2  0873               	movf	___awdiv@divisor+1,w
  6567     0BB3  0275               	subwf	___awdiv@dividend+1,w
  6568     0BB4  1D03               	skipz
  6569     0BB5  2BB8               	goto	u3875
  6570     0BB6  0872               	movf	___awdiv@divisor,w
  6571     0BB7  0274               	subwf	___awdiv@dividend,w
  6572     0BB8                     u3875:
  6573     0BB8  1C03               	skipc
  6574     0BB9  2BBB               	goto	u3871
  6575     0BBA  2BBC               	goto	u3870
  6576     0BBB                     u3871:
  6577     0BBB  2BC3               	goto	l3712
  6578     0BBC                     u3870:
  6579     0BBC                     l3708:
  6580     0BBC  0872               	movf	___awdiv@divisor,w
  6581     0BBD  02F4               	subwf	___awdiv@dividend,f
  6582     0BBE  0873               	movf	___awdiv@divisor+1,w
  6583     0BBF  1C03               	skipc
  6584     0BC0  03F5               	decf	___awdiv@dividend+1,f
  6585     0BC1  02F5               	subwf	___awdiv@dividend+1,f
  6586     0BC2                     l3710:
  6587     0BC2  1478               	bsf	___awdiv@quotient,0
  6588     0BC3                     l3712:
  6589     0BC3  3001               	movlw	1
  6590     0BC4                     u3885:
  6591     0BC4  1003               	clrc
  6592     0BC5  0CF3               	rrf	___awdiv@divisor+1,f
  6593     0BC6  0CF2               	rrf	___awdiv@divisor,f
  6594     0BC7  3EFF               	addlw	-1
  6595     0BC8  1D03               	skipz
  6596     0BC9  2BC4               	goto	u3885
  6597     0BCA                     l3714:
  6598     0BCA  3001               	movlw	1
  6599     0BCB  02F6               	subwf	___awdiv@counter,f
  6600     0BCC  1D03               	btfss	3,2
  6601     0BCD  2BCF               	goto	u3891
  6602     0BCE  2BD0               	goto	u3890
  6603     0BCF                     u3891:
  6604     0BCF  2BAB               	goto	l3706
  6605     0BD0                     u3890:
  6606     0BD0                     l3716:
  6607     0BD0  0877               	movf	___awdiv@sign,w
  6608     0BD1  1903               	btfsc	3,2
  6609     0BD2  2BD4               	goto	u3901
  6610     0BD3  2BD5               	goto	u3900
  6611     0BD4                     u3901:
  6612     0BD4  2BDA               	goto	l3720
  6613     0BD5                     u3900:
  6614     0BD5                     l3718:
  6615     0BD5  09F8               	comf	___awdiv@quotient,f
  6616     0BD6  09F9               	comf	___awdiv@quotient+1,f
  6617     0BD7  0AF8               	incf	___awdiv@quotient,f
  6618     0BD8  1903               	skipnz
  6619     0BD9  0AF9               	incf	___awdiv@quotient+1,f
  6620     0BDA                     l3720:
  6621     0BDA  0879               	movf	___awdiv@quotient+1,w
  6622     0BDB  00F3               	movwf	?___awdiv+1
  6623     0BDC  0878               	movf	___awdiv@quotient,w
  6624     0BDD  00F2               	movwf	?___awdiv
  6625     0BDE                     l686:
  6626     0BDE  0008               	return
  6627     0BDF                     __end_of___awdiv:
  6628                           
  6629                           	psect	text29
  6630     173C                     __ptext29:	
  6631 ;; *************** function _clear_log *****************
  6632 ;; Defined at:
  6633 ;;		line 267 in file "car_block_box_def.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6647 ;;      Params:         0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0
  6649 ;;      Temps:          0       3       0       0       0
  6650 ;;      Totals:         0       3       0       0       0
  6651 ;;Total ram usage:        3 bytes
  6652 ;; Hardware stack levels used: 1
  6653 ;; Hardware stack levels required when called: 3
  6654 ;; This function calls:
  6655 ;;		_clcd_print
  6656 ;;		_clear_clcd_screen
  6657 ;; This function is called by:
  6658 ;;		_main
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662     173C                     _clear_log:	
  6663                           ;psect for function _clear_log
  6664                           
  6665     173C                     l4082:	
  6666                           ;incstack = 0
  6667                           ; Regs used in _clear_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6668                           
  6669                           
  6670                           ;car_block_box_def.c: 269:     log_count = 0;
  6671     173C  1283               	bcf	3,5	;RP0=0, select bank0
  6672     173D  1303               	bcf	3,6	;RP1=0, select bank0
  6673     173E  01D7               	clrf	_log_count
  6674     173F                     l4084:
  6675                           
  6676                           ;car_block_box_def.c: 270:     clear_clcd_screen();
  6677     173F  160A  118A  2563  160A  118A  	fcall	_clear_clcd_screen
  6678     1744                     l4086:
  6679                           
  6680                           ;car_block_box_def.c: 271:     clcd_print("Logged data", (0x80 + 2));
  6681     1744  30D9               	movlw	low (STR_24| (0+32768))
  6682     1745  00F6               	movwf	clcd_print@str
  6683     1746  3088               	movlw	high (STR_24| (0+32768))
  6684     1747  00F7               	movwf	clcd_print@str+1
  6685     1748  3082               	movlw	130
  6686     1749  00F8               	movwf	clcd_print@addr
  6687     174A  160A  118A  2769  160A  118A  	fcall	_clcd_print
  6688     174F                     l4088:
  6689                           
  6690                           ;car_block_box_def.c: 272:     clcd_print("cleared..!", (0xC0 + 2));
  6691     174F  30E5               	movlw	low (STR_25| (0+32768))
  6692     1750  00F6               	movwf	clcd_print@str
  6693     1751  3088               	movlw	high (STR_25| (0+32768))
  6694     1752  00F7               	movwf	clcd_print@str+1
  6695     1753  30C2               	movlw	194
  6696     1754  00F8               	movwf	clcd_print@addr
  6697     1755  160A  118A  2769  160A  118A  	fcall	_clcd_print
  6698     175A                     l4090:
  6699                           
  6700                           ;car_block_box_def.c: 273:     _delay((unsigned long)((2500)*(20000000/4000.0)));
  6701     175A  3040               	movlw	64
  6702     175B  1283               	bcf	3,5	;RP0=0, select bank0
  6703     175C  1303               	bcf	3,6	;RP1=0, select bank0
  6704     175D  00A2               	movwf	??_clear_log+2
  6705     175E  306A               	movlw	106
  6706     175F  00A1               	movwf	??_clear_log+1
  6707     1760  3097               	movlw	151
  6708     1761  00A0               	movwf	??_clear_log
  6709     1762                     u5407:
  6710     1762  0BA0               	decfsz	??_clear_log,f
  6711     1763  2F62               	goto	u5407
  6712     1764  0BA1               	decfsz	??_clear_log+1,f
  6713     1765  2F62               	goto	u5407
  6714     1766  0BA2               	decfsz	??_clear_log+2,f
  6715     1767  2F62               	goto	u5407
  6716     1768                     l356:
  6717     1768  0008               	return
  6718     1769                     __end_of_clear_log:
  6719                           
  6720                           	psect	text30
  6721     1563                     __ptext30:	
  6722 ;; *************** function _clear_clcd_screen *****************
  6723 ;; Defined at:
  6724 ;;		line 399 in file "car_block_box_def.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;		None
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;		None
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  1    wreg      void 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0, pclath, cstack
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6738 ;;      Params:         0       0       0       0       0
  6739 ;;      Locals:         0       0       0       0       0
  6740 ;;      Temps:          2       0       0       0       0
  6741 ;;      Totals:         2       0       0       0       0
  6742 ;;Total ram usage:        2 bytes
  6743 ;; Hardware stack levels used: 1
  6744 ;; Hardware stack levels required when called: 2
  6745 ;; This function calls:
  6746 ;;		_clcd_write
  6747 ;; This function is called by:
  6748 ;;		_main
  6749 ;;		_login
  6750 ;;		_menu_screen
  6751 ;;		_clear_log
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755     1563                     _clear_clcd_screen:	
  6756                           ;psect for function _clear_clcd_screen
  6757                           
  6758     1563                     l3620:	
  6759                           ;incstack = 0
  6760                           ; Regs used in _clear_clcd_screen: [wreg+status,2+status,0+pclath+cstack]
  6761                           
  6762                           
  6763                           ;car_block_box_def.c: 401:     clcd_write(0x01, 0);
  6764     1563  01F2               	clrf	clcd_write@mode
  6765     1564  3001               	movlw	1
  6766     1565  120A  158A  2150  160A  118A  	fcall	_clcd_write
  6767     156A                     l3622:
  6768                           
  6769                           ;car_block_box_def.c: 402:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  6770     156A  3004               	movlw	4
  6771     156B  00F7               	movwf	??_clear_clcd_screen+1
  6772     156C  303D               	movlw	61
  6773     156D  00F6               	movwf	??_clear_clcd_screen
  6774     156E                     u5417:
  6775     156E  0BF6               	decfsz	??_clear_clcd_screen,f
  6776     156F  2D6E               	goto	u5417
  6777     1570  0BF7               	decfsz	??_clear_clcd_screen+1,f
  6778     1571  2D6E               	goto	u5417
  6779     1572  2D73               	nop2
  6780     1573                     l392:
  6781     1573  0008               	return
  6782     1574                     __end_of_clear_clcd_screen:
  6783                           
  6784                           	psect	text31
  6785     0637                     __ptext31:	
  6786 ;; *************** function _change_password *****************
  6787 ;; Defined at:
  6788 ;;		line 276 in file "car_block_box_def.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;  key             2    2[BANK0 ] unsigned int 
  6791 ;;  reset_flag      1    4[BANK0 ] unsigned char 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;		None
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1    wreg      unsigned char 
  6796 ;; Registers used:
  6797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6803 ;;      Params:         0       3       0       0       0
  6804 ;;      Locals:         0       0       0       0       0
  6805 ;;      Temps:          0       3       0       0       0
  6806 ;;      Totals:         0       6       0       0       0
  6807 ;;Total ram usage:        6 bytes
  6808 ;; Hardware stack levels used: 1
  6809 ;; Hardware stack levels required when called: 5
  6810 ;; This function calls:
  6811 ;;		_clcd_print
  6812 ;;		_clcd_putch
  6813 ;;		_clcd_write
  6814 ;;		_strncmp
  6815 ;;		_strncpy
  6816 ;;		_write_str_at24c04
  6817 ;; This function is called by:
  6818 ;;		_main
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822     0637                     _change_password:	
  6823                           ;psect for function _change_password
  6824                           
  6825     0637                     l4092:	
  6826                           ;incstack = 0
  6827                           ; Regs used in _change_password: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6828                           
  6829                           
  6830                           ;car_block_box_def.c: 276: unsigned char change_password(unsigned key, unsigned char res
      +                          et_flag);car_block_box_def.c: 277: {;car_block_box_def.c: 278:     static unsigned char 
      +                          pwd_pos = 0, pwd_changed = 0;;car_block_box_def.c: 279:     static unsigned char toggle_
      +                          cursor = 0, blink_delay = 0;;car_block_box_def.c: 280:     static char new_pwd[9];;car_b
      +                          lock_box_def.c: 282:     if (blink_delay++ == 5)
  6831     0637  3001               	movlw	1
  6832     0638  1683               	bsf	3,5	;RP0=1, select bank1
  6833     0639  1303               	bcf	3,6	;RP1=0, select bank1
  6834     063A  07A5               	addwf	change_password@blink_delay^(0+128),f
  6835     063B  3006               	movlw	6
  6836     063C  0625               	xorwf	change_password@blink_delay^(0+128),w
  6837     063D  1D03               	btfss	3,2
  6838     063E  2E40               	goto	u4411
  6839     063F  2E41               	goto	u4410
  6840     0640                     u4411:
  6841     0640  2E4C               	goto	l4098
  6842     0641                     u4410:
  6843     0641                     l4094:
  6844                           
  6845                           ;car_block_box_def.c: 283:     {;car_block_box_def.c: 284:         blink_delay = 0;
  6846     0641  01A5               	clrf	change_password@blink_delay^(0+128)
  6847     0642                     l4096:
  6848                           
  6849                           ;car_block_box_def.c: 285:         toggle_cursor = !toggle_cursor;
  6850     0642  1283               	bcf	3,5	;RP0=0, select bank0
  6851     0643  1303               	bcf	3,6	;RP1=0, select bank0
  6852     0644  0852               	movf	change_password@toggle_cursor,w
  6853     0645  1903               	btfsc	3,2
  6854     0646  2E48               	goto	u4421
  6855     0647  2E4A               	goto	u4420
  6856     0648                     u4421:
  6857     0648  3001               	movlw	1
  6858     0649  2E4B               	goto	u4430
  6859     064A                     u4420:
  6860     064A  3000               	movlw	0
  6861     064B                     u4430:
  6862     064B  00D2               	movwf	change_password@toggle_cursor
  6863     064C                     l4098:
  6864                           
  6865                           ;car_block_box_def.c: 291:     if (reset_flag == 0x11)
  6866     064C  3011               	movlw	17
  6867     064D  1283               	bcf	3,5	;RP0=0, select bank0
  6868     064E  0624               	xorwf	change_password@reset_flag,w
  6869     064F  1D03               	btfss	3,2
  6870     0650  2E52               	goto	u4441
  6871     0651  2E53               	goto	u4440
  6872     0652                     u4441:
  6873     0652  2E6A               	goto	l4108
  6874     0653                     u4440:
  6875     0653                     l4100:
  6876                           
  6877                           ;car_block_box_def.c: 292:     {;car_block_box_def.c: 293:         strncpy(new_pwd, "   
      +                           ", 4);
  6878     0653  30B2               	movlw	(low (change_password@new_pwd| 0))& (0+255)
  6879     0654  00F2               	movwf	strncpy@d
  6880     0655  300D               	movlw	low ((STR_29+13)| (0+32768))
  6881     0656  00F3               	movwf	strncpy@s
  6882     0657  3088               	movlw	high ((STR_29+13)| (0+32768))
  6883     0658  00F4               	movwf	strncpy@s+1
  6884     0659  3004               	movlw	4
  6885     065A  00F5               	movwf	strncpy@n
  6886     065B  3000               	movlw	0
  6887     065C  00F6               	movwf	strncpy@n+1
  6888     065D  120A  158A  2186  120A  118A  	fcall	_strncpy
  6889     0662                     l4102:
  6890                           
  6891                           ;car_block_box_def.c: 294:         pwd_pos = 0;
  6892     0662  01FA               	clrf	change_password@pwd_pos
  6893     0663                     l4104:
  6894                           
  6895                           ;car_block_box_def.c: 295:         pwd_changed = 0;
  6896     0663  1683               	bsf	3,5	;RP0=1, select bank1
  6897     0664  1303               	bcf	3,6	;RP1=0, select bank1
  6898     0665  01A6               	clrf	change_password@pwd_changed^(0+128)
  6899     0666                     l4106:
  6900                           
  6901                           ;car_block_box_def.c: 296:         return_time = 5;
  6902     0666  3005               	movlw	5
  6903     0667  1283               	bcf	3,5	;RP0=0, select bank0
  6904     0668  1303               	bcf	3,6	;RP1=0, select bank0
  6905     0669  00D9               	movwf	_return_time
  6906     066A                     l4108:
  6907                           
  6908                           ;car_block_box_def.c: 301:     if (!return_time)
  6909     066A  0859               	movf	_return_time,w
  6910     066B  1D03               	btfss	3,2
  6911     066C  2E6E               	goto	u4451
  6912     066D  2E6F               	goto	u4450
  6913     066E                     u4451:
  6914     066E  2E71               	goto	l4114
  6915     066F                     u4450:
  6916     066F                     l4110:
  6917                           
  6918                           ;car_block_box_def.c: 302:         return 0x33;
  6919     066F  3033               	movlw	51
  6920     0670  2FAD               	goto	l372
  6921     0671                     l4114:
  6922                           
  6923                           ;car_block_box_def.c: 306:     if (pwd_changed)
  6924     0671  1683               	bsf	3,5	;RP0=1, select bank1
  6925     0672  1303               	bcf	3,6	;RP1=0, select bank1
  6926     0673  0826               	movf	change_password@pwd_changed^(0+128),w
  6927     0674  1903               	btfsc	3,2
  6928     0675  2E77               	goto	u4461
  6929     0676  2E78               	goto	u4460
  6930     0677                     u4461:
  6931     0677  2E7A               	goto	l4120
  6932     0678                     u4460:
  6933     0678                     l4116:
  6934                           
  6935                           ;car_block_box_def.c: 307:         return 0x66;
  6936     0678  3066               	movlw	102
  6937     0679  2FAD               	goto	l372
  6938     067A                     l4120:
  6939                           
  6940                           ;car_block_box_def.c: 311:     if (pwd_pos < 4)
  6941     067A  3004               	movlw	4
  6942     067B  027A               	subwf	change_password@pwd_pos,w
  6943     067C  1803               	skipnc
  6944     067D  2E7F               	goto	u4471
  6945     067E  2E80               	goto	u4470
  6946     067F                     u4471:
  6947     067F  2EA6               	goto	l4130
  6948     0680                     u4470:
  6949     0680                     l4122:
  6950                           
  6951                           ;car_block_box_def.c: 312:     {;car_block_box_def.c: 313:         clcd_print("Enter new
      +                           pwd:  ", (0x80 + 0));
  6952     0680  3012               	movlw	low (STR_27| (0+32768))
  6953     0681  00F6               	movwf	clcd_print@str
  6954     0682  3088               	movlw	high (STR_27| (0+32768))
  6955     0683  00F7               	movwf	clcd_print@str+1
  6956     0684  3080               	movlw	128
  6957     0685  00F8               	movwf	clcd_print@addr
  6958     0686  160A  118A  2769  120A  118A  	fcall	_clcd_print
  6959     068B                     l4124:
  6960                           
  6961                           ;car_block_box_def.c: 316:         if (toggle_cursor == 0)
  6962     068B  1283               	bcf	3,5	;RP0=0, select bank0
  6963     068C  1303               	bcf	3,6	;RP1=0, select bank0
  6964     068D  0852               	movf	change_password@toggle_cursor,w
  6965     068E  1D03               	btfss	3,2
  6966     068F  2E91               	goto	u4481
  6967     0690  2E92               	goto	u4480
  6968     0691                     u4481:
  6969     0691  2E9C               	goto	l4128
  6970     0692                     u4480:
  6971     0692                     l4126:
  6972                           
  6973                           ;car_block_box_def.c: 317:         {;car_block_box_def.c: 318:             clcd_putch((u
      +                          nsigned char) 0xFF, (0xC0 + pwd_pos));
  6974     0692  087A               	movf	change_password@pwd_pos,w
  6975     0693  3EC0               	addlw	192
  6976     0694  00A0               	movwf	clcd_putch@addr
  6977     0695  30FF               	movlw	255
  6978     0696  160A  118A  25BE  120A  118A  	fcall	_clcd_putch
  6979                           
  6980                           ;car_block_box_def.c: 319:         }
  6981     069B  2F26               	goto	l4168
  6982     069C                     l4128:
  6983                           
  6984                           ;car_block_box_def.c: 321:         {;car_block_box_def.c: 322:             clcd_putch(' 
      +                          ', (0xC0 + pwd_pos));
  6985     069C  087A               	movf	change_password@pwd_pos,w
  6986     069D  3EC0               	addlw	192
  6987     069E  00A0               	movwf	clcd_putch@addr
  6988     069F  3020               	movlw	32
  6989     06A0  160A  118A  25BE  120A  118A  	fcall	_clcd_putch
  6990     06A5  2F26               	goto	l4168
  6991     06A6                     l4130:
  6992     06A6  3004               	movlw	4
  6993     06A7  027A               	subwf	change_password@pwd_pos,w
  6994     06A8  1C03               	skipc
  6995     06A9  2EAB               	goto	u4491
  6996     06AA  2EAC               	goto	u4490
  6997     06AB                     u4491:
  6998     06AB  2F26               	goto	l4168
  6999     06AC                     u4490:
  7000     06AC                     l4132:
  7001     06AC  3008               	movlw	8
  7002     06AD  027A               	subwf	change_password@pwd_pos,w
  7003     06AE  1803               	skipnc
  7004     06AF  2EB1               	goto	u4501
  7005     06B0  2EB2               	goto	u4500
  7006     06B1                     u4501:
  7007     06B1  2F26               	goto	l4168
  7008     06B2                     u4500:
  7009     06B2                     l4134:
  7010                           
  7011                           ;car_block_box_def.c: 326:     {;car_block_box_def.c: 327:         clcd_print("Re-enter 
      +                          new pwd", (0x80 + 0));
  7012     06B2  3034               	movlw	low (STR_28| (0+32768))
  7013     06B3  00F6               	movwf	clcd_print@str
  7014     06B4  3088               	movlw	high (STR_28| (0+32768))
  7015     06B5  00F7               	movwf	clcd_print@str+1
  7016     06B6  3080               	movlw	128
  7017     06B7  00F8               	movwf	clcd_print@addr
  7018     06B8  160A  118A  2769  120A  118A  	fcall	_clcd_print
  7019     06BD                     l4136:
  7020                           
  7021                           ;car_block_box_def.c: 330:         if (toggle_cursor == 0)
  7022     06BD  1283               	bcf	3,5	;RP0=0, select bank0
  7023     06BE  1303               	bcf	3,6	;RP1=0, select bank0
  7024     06BF  0852               	movf	change_password@toggle_cursor,w
  7025     06C0  1D03               	btfss	3,2
  7026     06C1  2EC3               	goto	u4511
  7027     06C2  2EC4               	goto	u4510
  7028     06C3                     u4511:
  7029     06C3  2ECE               	goto	l4140
  7030     06C4                     u4510:
  7031     06C4                     l4138:
  7032                           
  7033                           ;car_block_box_def.c: 331:         {;car_block_box_def.c: 332:             clcd_putch((u
      +                          nsigned char) 0xFF, (0xC0 + pwd_pos));
  7034     06C4  087A               	movf	change_password@pwd_pos,w
  7035     06C5  3EC0               	addlw	192
  7036     06C6  00A0               	movwf	clcd_putch@addr
  7037     06C7  30FF               	movlw	255
  7038     06C8  160A  118A  25BE  120A  118A  	fcall	_clcd_putch
  7039                           
  7040                           ;car_block_box_def.c: 333:         }
  7041     06CD  2F26               	goto	l4168
  7042     06CE                     l4140:
  7043                           
  7044                           ;car_block_box_def.c: 335:         {;car_block_box_def.c: 336:             clcd_putch(' 
      +                          ', (0xC0 + pwd_pos));
  7045     06CE  087A               	movf	change_password@pwd_pos,w
  7046     06CF  3EC0               	addlw	192
  7047     06D0  00A0               	movwf	clcd_putch@addr
  7048     06D1  3020               	movlw	32
  7049     06D2  160A  118A  25BE  120A  118A  	fcall	_clcd_putch
  7050     06D7  2F26               	goto	l4168
  7051     06D8                     l4142:
  7052                           
  7053                           ;car_block_box_def.c: 345:             new_pwd[pwd_pos] = '0';
  7054     06D8  087A               	movf	change_password@pwd_pos,w
  7055     06D9  3EB2               	addlw	(low (change_password@new_pwd| 0))& (0+255)
  7056     06DA  0084               	movwf	4
  7057     06DB  3030               	movlw	48
  7058     06DC  1383               	bcf	3,7	;select IRP bank1
  7059     06DD  0080               	movwf	0
  7060     06DE                     l4144:
  7061                           
  7062                           ;car_block_box_def.c: 346:             clcd_putch('*', (0xC0 + pwd_pos));
  7063     06DE  087A               	movf	change_password@pwd_pos,w
  7064     06DF  3EC0               	addlw	192
  7065     06E0  00A0               	movwf	clcd_putch@addr
  7066     06E1  302A               	movlw	42
  7067     06E2  160A  118A  25BE  120A  118A  	fcall	_clcd_putch
  7068     06E7                     l4146:
  7069                           
  7070                           ;car_block_box_def.c: 347:             pwd_pos++;
  7071     06E7  3001               	movlw	1
  7072     06E8  07FA               	addwf	change_password@pwd_pos,f
  7073     06E9                     l4148:
  7074                           
  7075                           ;car_block_box_def.c: 348:             return_time = 5;
  7076     06E9  3005               	movlw	5
  7077     06EA  1283               	bcf	3,5	;RP0=0, select bank0
  7078     06EB  1303               	bcf	3,6	;RP1=0, select bank0
  7079     06EC  00D9               	movwf	_return_time
  7080     06ED                     l4150:
  7081                           
  7082                           ;car_block_box_def.c: 349:             if (pwd_pos == 4)
  7083     06ED  3004               	movlw	4
  7084     06EE  067A               	xorwf	change_password@pwd_pos,w
  7085     06EF  1D03               	btfss	3,2
  7086     06F0  2EF2               	goto	u4521
  7087     06F1  2EF3               	goto	u4520
  7088     06F2                     u4521:
  7089     06F2  2F35               	goto	l4170
  7090     06F3                     u4520:
  7091     06F3                     l4152:
  7092                           
  7093                           ;car_block_box_def.c: 350:                 clcd_print("                 ", (0xC0 + 0));
  7094     06F3  3000               	movlw	low (STR_29| (0+32768))
  7095     06F4  00F6               	movwf	clcd_print@str
  7096     06F5  3088               	movlw	high (STR_29| (0+32768))
  7097     06F6  00F7               	movwf	clcd_print@str+1
  7098     06F7  30C0               	movlw	192
  7099     06F8  00F8               	movwf	clcd_print@addr
  7100     06F9  160A  118A  2769  120A  118A  	fcall	_clcd_print
  7101     06FE  2F35               	goto	l4170
  7102     06FF                     l4154:
  7103                           
  7104                           ;car_block_box_def.c: 354:             new_pwd[pwd_pos] = '1';
  7105     06FF  087A               	movf	change_password@pwd_pos,w
  7106     0700  3EB2               	addlw	(low (change_password@new_pwd| 0))& (0+255)
  7107     0701  0084               	movwf	4
  7108     0702  3031               	movlw	49
  7109     0703  1383               	bcf	3,7	;select IRP bank1
  7110     0704  0080               	movwf	0
  7111     0705                     l4156:
  7112                           
  7113                           ;car_block_box_def.c: 355:             clcd_putch('*', (0xC0 + pwd_pos));
  7114     0705  087A               	movf	change_password@pwd_pos,w
  7115     0706  3EC0               	addlw	192
  7116     0707  00A0               	movwf	clcd_putch@addr
  7117     0708  302A               	movlw	42
  7118     0709  160A  118A  25BE  120A  118A  	fcall	_clcd_putch
  7119     070E                     l4158:
  7120                           
  7121                           ;car_block_box_def.c: 356:             pwd_pos++;
  7122     070E  3001               	movlw	1
  7123     070F  07FA               	addwf	change_password@pwd_pos,f
  7124     0710                     l4160:
  7125                           
  7126                           ;car_block_box_def.c: 357:             return_time = 5;
  7127     0710  3005               	movlw	5
  7128     0711  1283               	bcf	3,5	;RP0=0, select bank0
  7129     0712  1303               	bcf	3,6	;RP1=0, select bank0
  7130     0713  00D9               	movwf	_return_time
  7131     0714                     l4162:
  7132                           
  7133                           ;car_block_box_def.c: 358:             if (pwd_pos == 4)
  7134     0714  3004               	movlw	4
  7135     0715  067A               	xorwf	change_password@pwd_pos,w
  7136     0716  1D03               	btfss	3,2
  7137     0717  2F19               	goto	u4531
  7138     0718  2F1A               	goto	u4530
  7139     0719                     u4531:
  7140     0719  2F35               	goto	l4170
  7141     071A                     u4530:
  7142     071A                     l4164:
  7143                           
  7144                           ;car_block_box_def.c: 359:                 clcd_print("                 ", (0xC0 + 0));
  7145     071A  3000               	movlw	low (STR_29| (0+32768))
  7146     071B  00F6               	movwf	clcd_print@str
  7147     071C  3088               	movlw	high (STR_29| (0+32768))
  7148     071D  00F7               	movwf	clcd_print@str+1
  7149     071E  30C0               	movlw	192
  7150     071F  00F8               	movwf	clcd_print@addr
  7151     0720  160A  118A  2769  120A  118A  	fcall	_clcd_print
  7152     0725  2F35               	goto	l4170
  7153     0726                     l4168:
  7154                           
  7155                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7156                           ; Switch size 1, requested type "simple"
  7157                           ; Number of cases is 1, Range of values is 0 to 0
  7158                           ; switch strategies available:
  7159                           ; Name         Instructions Cycles
  7160                           ; simple_byte            4     3 (average)
  7161                           ; direct_byte           11     8 (fixed)
  7162                           ; jumptable            260     6 (fixed)
  7163                           ;	Chosen strategy is simple_byte
  7164     0726  1283               	bcf	3,5	;RP0=0, select bank0
  7165     0727  1303               	bcf	3,6	;RP1=0, select bank0
  7166     0728  0823               	movf	change_password@key+1,w
  7167     0729  3A00               	xorlw	0	; case 0
  7168     072A  1903               	skipnz
  7169     072B  2F2D               	goto	l4624
  7170     072C  2F35               	goto	l4170
  7171     072D                     l4624:
  7172                           
  7173                           ; Switch size 1, requested type "simple"
  7174                           ; Number of cases is 2, Range of values is 47 to 55
  7175                           ; switch strategies available:
  7176                           ; Name         Instructions Cycles
  7177                           ; simple_byte            7     4 (average)
  7178                           ; direct_byte           38    11 (fixed)
  7179                           ; jumptable            263     9 (fixed)
  7180                           ;	Chosen strategy is simple_byte
  7181     072D  0822               	movf	change_password@key,w
  7182     072E  3A2F               	xorlw	47	; case 47
  7183     072F  1903               	skipnz
  7184     0730  2ED8               	goto	l4142
  7185     0731  3A18               	xorlw	24	; case 55
  7186     0732  1903               	skipnz
  7187     0733  2EFF               	goto	l4154
  7188     0734  2F35               	goto	l4170
  7189     0735                     l4170:
  7190                           
  7191                           ;car_block_box_def.c: 365:     if (pwd_pos == 8)
  7192     0735  3008               	movlw	8
  7193     0736  067A               	xorwf	change_password@pwd_pos,w
  7194     0737  1D03               	btfss	3,2
  7195     0738  2F3A               	goto	u4541
  7196     0739  2F3B               	goto	u4540
  7197     073A                     u4541:
  7198     073A  2E78               	goto	l4116
  7199     073B                     u4540:
  7200     073B                     l4172:
  7201                           
  7202                           ;car_block_box_def.c: 366:     {;car_block_box_def.c: 367:         if (strncmp(new_pwd, 
      +                          &new_pwd[4], 4) == 0)
  7203     073B  30B2               	movlw	(low (change_password@new_pwd| 0))& (0+255)
  7204     073C  00F2               	movwf	strncmp@l
  7205     073D  30B6               	movlw	(low ((change_password@new_pwd| 0+4)))& (0+255)
  7206     073E  00F3               	movwf	strncmp@r
  7207     073F  3004               	movlw	4
  7208     0740  00F4               	movwf	strncmp@n
  7209     0741  3000               	movlw	0
  7210     0742  00F5               	movwf	strncmp@n+1
  7211     0743  120A  158A  21CA  120A  118A  	fcall	_strncmp
  7212     0748  0872               	movf	?_strncmp,w
  7213     0749  0473               	iorwf	?_strncmp+1,w
  7214     074A  1D03               	btfss	3,2
  7215     074B  2F4D               	goto	u4551
  7216     074C  2F4E               	goto	u4550
  7217     074D                     u4551:
  7218     074D  2F8F               	goto	l4196
  7219     074E                     u4550:
  7220     074E                     l4174:
  7221                           
  7222                           ;car_block_box_def.c: 368:         {;car_block_box_def.c: 370:             new_pwd[8] = 
      +                          0;
  7223     074E  1683               	bsf	3,5	;RP0=1, select bank1
  7224     074F  1303               	bcf	3,6	;RP1=0, select bank1
  7225     0750  01BA               	clrf	(change_password@new_pwd^(0+128)+8)
  7226     0751                     l4176:
  7227                           
  7228                           ;car_block_box_def.c: 371:             write_str_at24c04(0x00, &new_pwd[4]);
  7229     0751  30B6               	movlw	(low ((change_password@new_pwd| 0+4)))& (0+255)
  7230     0752  00F7               	movwf	write_str_at24c04@data
  7231     0753  3000               	movlw	0
  7232     0754  00F8               	movwf	write_str_at24c04@data+1
  7233     0755  3000               	movlw	0
  7234     0756  160A  118A  26BB  120A  118A  	fcall	_write_str_at24c04
  7235     075B                     l4178:
  7236                           
  7237                           ;car_block_box_def.c: 372:             pwd_pos++;
  7238     075B  3001               	movlw	1
  7239     075C  07FA               	addwf	change_password@pwd_pos,f
  7240     075D                     l4180:
  7241                           
  7242                           ;car_block_box_def.c: 373:             clcd_write(0x01, 0);
  7243     075D  01F2               	clrf	clcd_write@mode
  7244     075E  3001               	movlw	1
  7245     075F  120A  158A  2150  120A  118A  	fcall	_clcd_write
  7246     0764                     l4182:
  7247                           
  7248                           ;car_block_box_def.c: 374:             clcd_print("Password changed", (0x80 + 0));
  7249     0764  3023               	movlw	low (STR_31| (0+32768))
  7250     0765  00F6               	movwf	clcd_print@str
  7251     0766  3088               	movlw	high (STR_31| (0+32768))
  7252     0767  00F7               	movwf	clcd_print@str+1
  7253     0768  3080               	movlw	128
  7254     0769  00F8               	movwf	clcd_print@addr
  7255     076A  160A  118A  2769  120A  118A  	fcall	_clcd_print
  7256     076F                     l4184:
  7257                           
  7258                           ;car_block_box_def.c: 375:             clcd_print("successfully ", (0xC0 + 2));
  7259     076F  30B1               	movlw	low (STR_32| (0+32768))
  7260     0770  00F6               	movwf	clcd_print@str
  7261     0771  3088               	movlw	high (STR_32| (0+32768))
  7262     0772  00F7               	movwf	clcd_print@str+1
  7263     0773  30C2               	movlw	194
  7264     0774  00F8               	movwf	clcd_print@addr
  7265     0775  160A  118A  2769  120A  118A  	fcall	_clcd_print
  7266     077A                     l4186:
  7267                           
  7268                           ;car_block_box_def.c: 376:             pwd_changed = 1;
  7269     077A  3001               	movlw	1
  7270     077B  1683               	bsf	3,5	;RP0=1, select bank1
  7271     077C  1303               	bcf	3,6	;RP1=0, select bank1
  7272     077D  00A6               	movwf	change_password@pwd_changed^(0+128)
  7273     077E                     l4188:
  7274                           
  7275                           ;car_block_box_def.c: 377:             _delay((unsigned long)((1000)*(20000000/4000.0)))
      +                          ;
  7276     077E  301A               	movlw	26
  7277     077F  1283               	bcf	3,5	;RP0=0, select bank0
  7278     0780  1303               	bcf	3,6	;RP1=0, select bank0
  7279     0781  00A7               	movwf	??_change_password+2
  7280     0782  305E               	movlw	94
  7281     0783  00A6               	movwf	??_change_password+1
  7282     0784  306D               	movlw	109
  7283     0785  00A5               	movwf	??_change_password
  7284     0786                     u5427:
  7285     0786  0BA5               	decfsz	??_change_password,f
  7286     0787  2F86               	goto	u5427
  7287     0788  0BA6               	decfsz	??_change_password+1,f
  7288     0789  2F86               	goto	u5427
  7289     078A  0BA7               	decfsz	??_change_password+2,f
  7290     078B  2F86               	goto	u5427
  7291     078C  2F8D               	nop2
  7292     078D                     l4190:
  7293                           
  7294                           ;car_block_box_def.c: 378:             return 0x77;
  7295     078D  3077               	movlw	119
  7296     078E  2FAD               	goto	l372
  7297     078F                     l4196:
  7298                           
  7299                           ;car_block_box_def.c: 381:         {;car_block_box_def.c: 383:             clcd_write(0x
      +                          01, 0);
  7300     078F  01F2               	clrf	clcd_write@mode
  7301     0790  3001               	movlw	1
  7302     0791  120A  158A  2150  120A  118A  	fcall	_clcd_write
  7303     0796                     l4198:
  7304                           
  7305                           ;car_block_box_def.c: 384:             clcd_print("Password  change", (0x80 + 0));
  7306     0796  3045               	movlw	low (STR_33| (0+32768))
  7307     0797  00F6               	movwf	clcd_print@str
  7308     0798  3088               	movlw	high (STR_33| (0+32768))
  7309     0799  00F7               	movwf	clcd_print@str+1
  7310     079A  3080               	movlw	128
  7311     079B  00F8               	movwf	clcd_print@addr
  7312     079C  160A  118A  2769  120A  118A  	fcall	_clcd_print
  7313     07A1                     l4200:
  7314                           
  7315                           ;car_block_box_def.c: 385:             clcd_print("failed", (0xC0 + 5));
  7316     07A1  301F               	movlw	low (STR_34| (0+32768))
  7317     07A2  00F6               	movwf	clcd_print@str
  7318     07A3  3089               	movlw	high (STR_34| (0+32768))
  7319     07A4  00F7               	movwf	clcd_print@str+1
  7320     07A5  30C5               	movlw	197
  7321     07A6  00F8               	movwf	clcd_print@addr
  7322     07A7  160A  118A  2769  120A  118A  	fcall	_clcd_print
  7323     07AC  2F7A               	goto	l4186
  7324     07AD                     l372:
  7325     07AD  0008               	return
  7326     07AE                     __end_of_change_password:
  7327                           
  7328                           	psect	text32
  7329     16BB                     __ptext32:	
  7330 ;; *************** function _write_str_at24c04 *****************
  7331 ;; Defined at:
  7332 ;;		line 37 in file "at24c04.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  addr            1    wreg     unsigned char 
  7335 ;;  data            2    7[COMMON] PTR unsigned char 
  7336 ;;		 -> change_password@new_pwd(9), log(11), STR_7(5), 
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;  addr            1    9[COMMON] unsigned char 
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  1    wreg      void 
  7341 ;; Registers used:
  7342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7348 ;;      Params:         2       0       0       0       0
  7349 ;;      Locals:         1       0       0       0       0
  7350 ;;      Temps:          0       0       0       0       0
  7351 ;;      Totals:         3       0       0       0       0
  7352 ;;Total ram usage:        3 bytes
  7353 ;; Hardware stack levels used: 1
  7354 ;; Hardware stack levels required when called: 4
  7355 ;; This function calls:
  7356 ;;		_write_at24c04
  7357 ;; This function is called by:
  7358 ;;		_main
  7359 ;;		_record_log
  7360 ;;		_change_password
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364     16BB                     _write_str_at24c04:	
  7365                           ;psect for function _write_str_at24c04
  7366                           
  7367                           
  7368                           ;incstack = 0
  7369                           ; Regs used in _write_str_at24c04: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7370                           ;write_str_at24c04@addr stored from wreg
  7371     16BB  00F9               	movwf	write_str_at24c04@addr
  7372     16BC                     l3522:
  7373                           
  7374                           ;at24c04.c: 37: void write_str_at24c04(unsigned char addr, char *data);at24c04.c: 38: {;
      +                          at24c04.c: 39:     while(*data != '\0')
  7375     16BC  2ED5               	goto	l3530
  7376     16BD                     l3524:
  7377                           
  7378                           ;at24c04.c: 40:     {;at24c04.c: 41:         write_at24c04(addr, *data);
  7379     16BD  0878               	movf	write_str_at24c04@data+1,w
  7380     16BE  00FF               	movwf	btemp+1
  7381     16BF  0877               	movf	write_str_at24c04@data,w
  7382     16C0  0084               	movwf	4
  7383     16C1  160A  118A  2000  160A  118A  	fcall	stringtab
  7384     16C6  00F3               	movwf	write_at24c04@data
  7385     16C7  0879               	movf	write_str_at24c04@addr,w
  7386     16C8  160A  118A  2694  160A  118A  	fcall	_write_at24c04
  7387     16CD                     l3526:
  7388                           
  7389                           ;at24c04.c: 42:         data++;
  7390     16CD  3001               	movlw	1
  7391     16CE  07F7               	addwf	write_str_at24c04@data,f
  7392     16CF  1803               	skipnc
  7393     16D0  0AF8               	incf	write_str_at24c04@data+1,f
  7394     16D1  3000               	movlw	0
  7395     16D2  07F8               	addwf	write_str_at24c04@data+1,f
  7396     16D3                     l3528:
  7397                           
  7398                           ;at24c04.c: 43:         addr++;
  7399     16D3  3001               	movlw	1
  7400     16D4  07F9               	addwf	write_str_at24c04@addr,f
  7401     16D5                     l3530:
  7402                           
  7403                           ;at24c04.c: 39:     while(*data != '\0')
  7404     16D5  0878               	movf	write_str_at24c04@data+1,w
  7405     16D6  1283               	bcf	3,5	;RP0=0, select bank0
  7406     16D7  1303               	bcf	3,6	;RP1=0, select bank0
  7407     16D8  00FF               	movwf	btemp+1
  7408     16D9  0877               	movf	write_str_at24c04@data,w
  7409     16DA  0084               	movwf	4
  7410     16DB  160A  118A  2000  160A  118A  	fcall	stringtab
  7411     16E0  3A00               	xorlw	0
  7412     16E1  1D03               	skipz
  7413     16E2  2EE4               	goto	u3571
  7414     16E3  2EE5               	goto	u3570
  7415     16E4                     u3571:
  7416     16E4  2EBD               	goto	l3524
  7417     16E5                     u3570:
  7418     16E5                     l416:
  7419     16E5  0008               	return
  7420     16E6                     __end_of_write_str_at24c04:
  7421                           
  7422                           	psect	text33
  7423     1694                     __ptext33:	
  7424 ;; *************** function _write_at24c04 *****************
  7425 ;; Defined at:
  7426 ;;		line 27 in file "at24c04.c"
  7427 ;; Parameters:    Size  Location     Type
  7428 ;;  addr            1    wreg     unsigned char 
  7429 ;;  data            1    3[COMMON] unsigned char 
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;  addr            1    6[COMMON] unsigned char 
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  1    wreg      void 
  7434 ;; Registers used:
  7435 ;;		wreg, status,2, status,0, pclath, cstack
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7441 ;;      Params:         1       0       0       0       0
  7442 ;;      Locals:         1       0       0       0       0
  7443 ;;      Temps:          2       0       0       0       0
  7444 ;;      Totals:         4       0       0       0       0
  7445 ;;Total ram usage:        4 bytes
  7446 ;; Hardware stack levels used: 1
  7447 ;; Hardware stack levels required when called: 3
  7448 ;; This function calls:
  7449 ;;		_i2c_start
  7450 ;;		_i2c_stop
  7451 ;;		_i2c_write
  7452 ;; This function is called by:
  7453 ;;		_write_str_at24c04
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457     1694                     _write_at24c04:	
  7458                           ;psect for function _write_at24c04
  7459                           
  7460                           
  7461                           ;incstack = 0
  7462                           ; Regs used in _write_at24c04: [wreg+status,2+status,0+pclath+cstack]
  7463                           ;write_at24c04@addr stored from wreg
  7464     1694  00F6               	movwf	write_at24c04@addr
  7465     1695                     l3490:
  7466                           
  7467                           ;at24c04.c: 27: void write_at24c04(unsigned char addr, unsigned char data);at24c04.c: 28
      +                          : {;at24c04.c: 29:     i2c_start();
  7468     1695  160A  118A  2523  160A  118A  	fcall	_i2c_start
  7469                           
  7470                           ;at24c04.c: 30:     i2c_write(0b10100000);
  7471     169A  30A0               	movlw	160
  7472     169B  160A  118A  2535  160A  118A  	fcall	_i2c_write
  7473                           
  7474                           ;at24c04.c: 31:     i2c_write(addr);
  7475     16A0  0876               	movf	write_at24c04@addr,w
  7476     16A1  160A  118A  2535  160A  118A  	fcall	_i2c_write
  7477                           
  7478                           ;at24c04.c: 32:     i2c_write(data);
  7479     16A6  0873               	movf	write_at24c04@data,w
  7480     16A7  160A  118A  2535  160A  118A  	fcall	_i2c_write
  7481                           
  7482                           ;at24c04.c: 33:     i2c_stop();
  7483     16AC  160A  118A  252C  160A  118A  	fcall	_i2c_stop
  7484     16B1                     l3492:
  7485                           
  7486                           ;at24c04.c: 35:     _delay((unsigned long)((3)*(20000000/4000.0)));
  7487     16B1  3014               	movlw	20
  7488     16B2  00F5               	movwf	??_write_at24c04+1
  7489     16B3  3079               	movlw	121
  7490     16B4  00F4               	movwf	??_write_at24c04
  7491     16B5                     u5437:
  7492     16B5  0BF4               	decfsz	??_write_at24c04,f
  7493     16B6  2EB5               	goto	u5437
  7494     16B7  0BF5               	decfsz	??_write_at24c04+1,f
  7495     16B8  2EB5               	goto	u5437
  7496     16B9  2EBA               	nop2
  7497     16BA                     l410:
  7498     16BA  0008               	return
  7499     16BB                     __end_of_write_at24c04:
  7500                           
  7501                           	psect	text34
  7502     1535                     __ptext34:	
  7503 ;; *************** function _i2c_write *****************
  7504 ;; Defined at:
  7505 ;;		line 66 in file "i2c.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;  data            1    wreg     unsigned char 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  data            1    2[COMMON] unsigned char 
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  2   40[None  ] int 
  7512 ;; Registers used:
  7513 ;;		wreg, status,2, status,0, pclath, cstack
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7519 ;;      Params:         0       0       0       0       0
  7520 ;;      Locals:         1       0       0       0       0
  7521 ;;      Temps:          0       0       0       0       0
  7522 ;;      Totals:         1       0       0       0       0
  7523 ;;Total ram usage:        1 bytes
  7524 ;; Hardware stack levels used: 1
  7525 ;; Hardware stack levels required when called: 2
  7526 ;; This function calls:
  7527 ;;		_i2c_wait_for_idle
  7528 ;; This function is called by:
  7529 ;;		_read_ds1307
  7530 ;;		_write_ds1307
  7531 ;;		_read_at24c04
  7532 ;;		_write_at24c04
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536     1535                     _i2c_write:	
  7537                           ;psect for function _i2c_write
  7538                           
  7539                           
  7540                           ;incstack = 0
  7541                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  7542                           ;i2c_write@data stored from wreg
  7543     1535  00F2               	movwf	i2c_write@data
  7544     1536                     l3440:
  7545                           
  7546                           ;i2c.c: 66: int i2c_write(unsigned char data);i2c.c: 67: {;i2c.c: 68:     i2c_wait_for_i
      +                          dle();
  7547     1536  160A  118A  2556  160A  118A  	fcall	_i2c_wait_for_idle
  7548     153B                     l3442:
  7549                           
  7550                           ;i2c.c: 69:     SSPBUF = data;
  7551     153B  0872               	movf	i2c_write@data,w
  7552     153C  1283               	bcf	3,5	;RP0=0, select bank0
  7553     153D  1303               	bcf	3,6	;RP1=0, select bank0
  7554     153E  0093               	movwf	19	;volatile
  7555     153F                     l3444:
  7556     153F                     l107:	
  7557                           ;i2c.c: 71:     return !ACKSTAT;;	Return value of _i2c_write is never used
  7558                           
  7559     153F  0008               	return
  7560     1540                     __end_of_i2c_write:
  7561                           
  7562                           	psect	text35
  7563     152C                     __ptext35:	
  7564 ;; *************** function _i2c_stop *****************
  7565 ;; Defined at:
  7566 ;;		line 35 in file "i2c.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;		None
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;		None
  7571 ;; Return value:  Size  Location     Type
  7572 ;;                  1    wreg      void 
  7573 ;; Registers used:
  7574 ;;		wreg, status,2, status,0, pclath, cstack
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7580 ;;      Params:         0       0       0       0       0
  7581 ;;      Locals:         0       0       0       0       0
  7582 ;;      Temps:          0       0       0       0       0
  7583 ;;      Totals:         0       0       0       0       0
  7584 ;;Total ram usage:        0 bytes
  7585 ;; Hardware stack levels used: 1
  7586 ;; Hardware stack levels required when called: 2
  7587 ;; This function calls:
  7588 ;;		_i2c_wait_for_idle
  7589 ;; This function is called by:
  7590 ;;		_read_ds1307
  7591 ;;		_write_ds1307
  7592 ;;		_i2c_rep_start
  7593 ;;		_write_at24c04
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597     152C                     _i2c_stop:	
  7598                           ;psect for function _i2c_stop
  7599                           
  7600     152C                     l3436:	
  7601                           ;incstack = 0
  7602                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  7603                           
  7604                           
  7605                           ;i2c.c: 37:     i2c_wait_for_idle();
  7606     152C  160A  118A  2556  160A  118A  	fcall	_i2c_wait_for_idle
  7607     1531                     l3438:
  7608                           
  7609                           ;i2c.c: 38:     PEN = 1;
  7610     1531  1683               	bsf	3,5	;RP0=1, select bank1
  7611     1532  1303               	bcf	3,6	;RP1=0, select bank1
  7612     1533  1511               	bsf	17,2	;volatile
  7613     1534                     l99:
  7614     1534  0008               	return
  7615     1535                     __end_of_i2c_stop:
  7616                           
  7617                           	psect	text36
  7618     1523                     __ptext36:	
  7619 ;; *************** function _i2c_start *****************
  7620 ;; Defined at:
  7621 ;;		line 22 in file "i2c.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;		None
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;		None
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      void 
  7628 ;; Registers used:
  7629 ;;		wreg, status,2, status,0, pclath, cstack
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7635 ;;      Params:         0       0       0       0       0
  7636 ;;      Locals:         0       0       0       0       0
  7637 ;;      Temps:          0       0       0       0       0
  7638 ;;      Totals:         0       0       0       0       0
  7639 ;;Total ram usage:        0 bytes
  7640 ;; Hardware stack levels used: 1
  7641 ;; Hardware stack levels required when called: 2
  7642 ;; This function calls:
  7643 ;;		_i2c_wait_for_idle
  7644 ;; This function is called by:
  7645 ;;		_read_ds1307
  7646 ;;		_write_ds1307
  7647 ;;		_i2c_rep_start
  7648 ;;		_read_at24c04
  7649 ;;		_write_at24c04
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653     1523                     _i2c_start:	
  7654                           ;psect for function _i2c_start
  7655                           
  7656     1523                     l3432:	
  7657                           ;incstack = 0
  7658                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  7659                           
  7660                           
  7661                           ;i2c.c: 24:     i2c_wait_for_idle();
  7662     1523  160A  118A  2556  160A  118A  	fcall	_i2c_wait_for_idle
  7663     1528                     l3434:
  7664                           
  7665                           ;i2c.c: 25:     SEN = 1;
  7666     1528  1683               	bsf	3,5	;RP0=1, select bank1
  7667     1529  1303               	bcf	3,6	;RP1=0, select bank1
  7668     152A  1411               	bsf	17,0	;volatile
  7669     152B                     l93:
  7670     152B  0008               	return
  7671     152C                     __end_of_i2c_start:
  7672                           
  7673                           	psect	text37
  7674     1556                     __ptext37:	
  7675 ;; *************** function _i2c_wait_for_idle *****************
  7676 ;; Defined at:
  7677 ;;		line 16 in file "i2c.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;		None
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  1    wreg      void 
  7684 ;; Registers used:
  7685 ;;		wreg, status,2
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7691 ;;      Params:         0       0       0       0       0
  7692 ;;      Locals:         0       0       0       0       0
  7693 ;;      Temps:          0       0       0       0       0
  7694 ;;      Totals:         0       0       0       0       0
  7695 ;;Total ram usage:        0 bytes
  7696 ;; Hardware stack levels used: 1
  7697 ;; Hardware stack levels required when called: 1
  7698 ;; This function calls:
  7699 ;;		Nothing
  7700 ;; This function is called by:
  7701 ;;		_i2c_start
  7702 ;;		_i2c_stop
  7703 ;;		_i2c_read
  7704 ;;		_i2c_write
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708     1556                     _i2c_wait_for_idle:	
  7709                           ;psect for function _i2c_wait_for_idle
  7710                           
  7711     1556                     l3428:	
  7712                           ;incstack = 0
  7713                           ; Regs used in _i2c_wait_for_idle: [wreg+status,2]
  7714                           
  7715     1556                     l87:	
  7716                           ;i2c.c: 19:     while (R_nW || (SSPCON2 & 0x1F));
  7717                           
  7718     1556  1683               	bsf	3,5	;RP0=1, select bank1
  7719     1557  1303               	bcf	3,6	;RP1=0, select bank1
  7720     1558  1914               	btfsc	20,2	;volatile
  7721     1559  2D5B               	goto	u3511
  7722     155A  2D5C               	goto	u3510
  7723     155B                     u3511:
  7724     155B  2D56               	goto	l87
  7725     155C                     u3510:
  7726     155C                     l3430:
  7727     155C  0811               	movf	17,w	;volatile
  7728     155D  391F               	andlw	31
  7729     155E  1D03               	btfss	3,2
  7730     155F  2D61               	goto	u3521
  7731     1560  2D62               	goto	u3520
  7732     1561                     u3521:
  7733     1561  2D56               	goto	l87
  7734     1562                     u3520:
  7735     1562                     l90:
  7736     1562  0008               	return
  7737     1563                     __end_of_i2c_wait_for_idle:
  7738                           
  7739                           	psect	text38
  7740     0986                     __ptext38:	
  7741 ;; *************** function _strncpy *****************
  7742 ;; Defined at:
  7743 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncpy.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;  d               1    2[COMMON] PTR unsigned char 
  7746 ;;		 -> change_password@new_pwd(9), log(11), 
  7747 ;;  s               2    3[COMMON] PTR const unsigned char 
  7748 ;;		 -> STR_26(5), time(7), main@event(3), 
  7749 ;;  n               2    5[COMMON] unsigned int 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  cp              1    9[COMMON] PTR unsigned char 
  7752 ;;		 -> change_password@new_pwd(9), log(11), 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    2[COMMON] PTR unsigned char 
  7755 ;; Registers used:
  7756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7762 ;;      Params:         5       0       0       0       0
  7763 ;;      Locals:         1       0       0       0       0
  7764 ;;      Temps:          2       0       0       0       0
  7765 ;;      Totals:         8       0       0       0       0
  7766 ;;Total ram usage:        8 bytes
  7767 ;; Hardware stack levels used: 2
  7768 ;; Hardware stack levels required when called: 1
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_log_car_event
  7773 ;;		_change_password
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777     0986                     _strncpy:	
  7778                           ;psect for function _strncpy
  7779                           
  7780     0986                     l3636:	
  7781                           ;incstack = 0
  7782                           ; Regs used in _strncpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7783                           
  7784     0986  0872               	movf	strncpy@d,w
  7785     0987  00F9               	movwf	strncpy@cp
  7786     0988  29AE               	goto	l3644
  7787     0989                     l3638:
  7788     0989  3001               	movlw	1
  7789     098A  02F5               	subwf	strncpy@n,f
  7790     098B  3000               	movlw	0
  7791     098C  1C03               	skipc
  7792     098D  03F6               	decf	strncpy@n+1,f
  7793     098E  02F6               	subwf	strncpy@n+1,f
  7794     098F                     l3640:
  7795     098F  0874               	movf	strncpy@s+1,w
  7796     0990  00F8               	movwf	??_strncpy+1
  7797     0991  0873               	movf	strncpy@s,w
  7798     0992  00F7               	movwf	??_strncpy
  7799     0993  0AF3               	incf	strncpy@s,f
  7800     0994  1903               	skipnz
  7801     0995  0AF4               	incf	strncpy@s+1,f
  7802     0996  0878               	movf	??_strncpy+1,w
  7803     0997  1283               	bcf	3,5	;RP0=0, select bank0
  7804     0998  1303               	bcf	3,6	;RP1=0, select bank0
  7805     0999  00FF               	movwf	btemp+1
  7806     099A  0877               	movf	??_strncpy,w
  7807     099B  0084               	movwf	4
  7808     099C  160A  118A  2000  120A  158A  	fcall	stringtab
  7809     09A1  00FF               	movwf	btemp+1
  7810     09A2  0879               	movf	strncpy@cp,w
  7811     09A3  0AF9               	incf	strncpy@cp,f
  7812     09A4  0084               	movwf	4
  7813     09A5  087F               	movf	btemp+1,w
  7814     09A6  1383               	bcf	3,7	;select IRP bank0
  7815     09A7  0080               	movwf	0
  7816     09A8  0800               	movf	0,w
  7817     09A9  1D03               	btfss	3,2
  7818     09AA  29AC               	goto	u3731
  7819     09AB  29AD               	goto	u3730
  7820     09AC                     u3731:
  7821     09AC  29AE               	goto	l3644
  7822     09AD                     u3730:
  7823     09AD  29BB               	goto	l3650
  7824     09AE                     l3644:
  7825     09AE  0875               	movf	strncpy@n,w
  7826     09AF  0476               	iorwf	strncpy@n+1,w
  7827     09B0  1D03               	btfss	3,2
  7828     09B1  29B3               	goto	u3741
  7829     09B2  29B4               	goto	u3740
  7830     09B3                     u3741:
  7831     09B3  2989               	goto	l3638
  7832     09B4                     u3740:
  7833     09B4  29BB               	goto	l3650
  7834     09B5                     l3646:
  7835     09B5  0879               	movf	strncpy@cp,w
  7836     09B6  0084               	movwf	4
  7837     09B7  1383               	bcf	3,7	;select IRP bank0
  7838     09B8  0180               	clrf	0
  7839     09B9                     l3648:
  7840     09B9  3001               	movlw	1
  7841     09BA  07F9               	addwf	strncpy@cp,f
  7842     09BB                     l3650:
  7843     09BB  3001               	movlw	1
  7844     09BC  02F5               	subwf	strncpy@n,f
  7845     09BD  3000               	movlw	0
  7846     09BE  1C03               	skipc
  7847     09BF  03F6               	decf	strncpy@n+1,f
  7848     09C0  02F6               	subwf	strncpy@n+1,f
  7849     09C1  0A75               	incf	strncpy@n,w
  7850     09C2  1D03               	skipz
  7851     09C3  29C8               	goto	u3751
  7852     09C4  0A76               	incf	strncpy@n+1,w
  7853     09C5  1D03               	btfss	3,2
  7854     09C6  29C8               	goto	u3751
  7855     09C7  29C9               	goto	u3750
  7856     09C8                     u3751:
  7857     09C8  29B5               	goto	l3646
  7858     09C9                     u3750:
  7859     09C9                     l1014:
  7860     09C9  0008               	return
  7861     09CA                     __end_of_strncpy:
  7862                           
  7863                           	psect	text39
  7864     09CA                     __ptext39:	
  7865 ;; *************** function _strncmp *****************
  7866 ;; Defined at:
  7867 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncmp.c"
  7868 ;; Parameters:    Size  Location     Type
  7869 ;;  l               1    2[COMMON] PTR const unsigned char 
  7870 ;;		 -> change_password@new_pwd(9), login@stored_pwd(4), 
  7871 ;;  r               1    3[COMMON] PTR const unsigned char 
  7872 ;;		 -> change_password@new_pwd(9), login@user_password(4), 
  7873 ;;  n               2    4[COMMON] unsigned int 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;		None
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  2    2[COMMON] int 
  7878 ;; Registers used:
  7879 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7885 ;;      Params:         4       0       0       0       0
  7886 ;;      Locals:         0       0       0       0       0
  7887 ;;      Temps:          2       0       0       0       0
  7888 ;;      Totals:         6       0       0       0       0
  7889 ;;Total ram usage:        6 bytes
  7890 ;; Hardware stack levels used: 1
  7891 ;; Hardware stack levels required when called: 1
  7892 ;; This function calls:
  7893 ;;		Nothing
  7894 ;; This function is called by:
  7895 ;;		_login
  7896 ;;		_change_password
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900     09CA                     _strncmp:	
  7901                           ;psect for function _strncmp
  7902                           
  7903     09CA                     l3658:	
  7904                           ;incstack = 0
  7905                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0]
  7906                           
  7907     09CA  3001               	movlw	1
  7908     09CB  02F4               	subwf	strncmp@n,f
  7909     09CC  3000               	movlw	0
  7910     09CD  1C03               	skipc
  7911     09CE  03F5               	decf	strncmp@n+1,f
  7912     09CF  02F5               	subwf	strncmp@n+1,f
  7913     09D0  0A74               	incf	strncmp@n,w
  7914     09D1  1D03               	skipz
  7915     09D2  29D7               	goto	u3761
  7916     09D3  0A75               	incf	strncmp@n+1,w
  7917     09D4  1D03               	btfss	3,2
  7918     09D5  29D7               	goto	u3761
  7919     09D6  29D8               	goto	u3760
  7920     09D7                     u3761:
  7921     09D7  29E5               	goto	l3668
  7922     09D8                     u3760:
  7923     09D8                     l3660:
  7924     09D8  01F2               	clrf	?_strncmp
  7925     09D9  01F3               	clrf	?_strncmp+1
  7926     09DA  2A14               	goto	l999
  7927     09DB                     l3664:
  7928     09DB  3001               	movlw	1
  7929     09DC  07F2               	addwf	strncmp@l,f
  7930     09DD  3001               	movlw	1
  7931     09DE  07F3               	addwf	strncmp@r,f
  7932     09DF                     l3666:
  7933     09DF  3001               	movlw	1
  7934     09E0  02F4               	subwf	strncmp@n,f
  7935     09E1  3000               	movlw	0
  7936     09E2  1C03               	skipc
  7937     09E3  03F5               	decf	strncmp@n+1,f
  7938     09E4  02F5               	subwf	strncmp@n+1,f
  7939     09E5                     l3668:
  7940     09E5  0872               	movf	strncmp@l,w
  7941     09E6  0084               	movwf	4
  7942     09E7  1383               	bcf	3,7	;select IRP bank0
  7943     09E8  0800               	movf	0,w
  7944     09E9  1903               	btfsc	3,2
  7945     09EA  29EC               	goto	u3771
  7946     09EB  29ED               	goto	u3770
  7947     09EC                     u3771:
  7948     09EC  2A06               	goto	l3676
  7949     09ED                     u3770:
  7950     09ED                     l3670:
  7951     09ED  0873               	movf	strncmp@r,w
  7952     09EE  0084               	movwf	4
  7953     09EF  0800               	movf	0,w
  7954     09F0  1903               	btfsc	3,2
  7955     09F1  29F3               	goto	u3781
  7956     09F2  29F4               	goto	u3780
  7957     09F3                     u3781:
  7958     09F3  2A06               	goto	l3676
  7959     09F4                     u3780:
  7960     09F4                     l3672:
  7961     09F4  0874               	movf	strncmp@n,w
  7962     09F5  0475               	iorwf	strncmp@n+1,w
  7963     09F6  1903               	btfsc	3,2
  7964     09F7  29F9               	goto	u3791
  7965     09F8  29FA               	goto	u3790
  7966     09F9                     u3791:
  7967     09F9  2A06               	goto	l3676
  7968     09FA                     u3790:
  7969     09FA                     l3674:
  7970     09FA  0873               	movf	strncmp@r,w
  7971     09FB  0084               	movwf	4
  7972     09FC  0800               	movf	0,w
  7973     09FD  00F6               	movwf	??_strncmp
  7974     09FE  0872               	movf	strncmp@l,w
  7975     09FF  0084               	movwf	4
  7976     0A00  0800               	movf	0,w
  7977     0A01  0676               	xorwf	??_strncmp,w
  7978     0A02  1903               	skipnz
  7979     0A03  2A05               	goto	u3801
  7980     0A04  2A06               	goto	u3800
  7981     0A05                     u3801:
  7982     0A05  29DB               	goto	l3664
  7983     0A06                     u3800:
  7984     0A06                     l3676:
  7985     0A06  0873               	movf	strncmp@r,w
  7986     0A07  0084               	movwf	4
  7987     0A08  0800               	movf	0,w
  7988     0A09  00F6               	movwf	??_strncmp
  7989     0A0A  0872               	movf	strncmp@l,w
  7990     0A0B  0084               	movwf	4
  7991     0A0C  0800               	movf	0,w
  7992     0A0D  00F7               	movwf	??_strncmp+1
  7993     0A0E  0876               	movf	??_strncmp,w
  7994     0A0F  0277               	subwf	??_strncmp+1,w
  7995     0A10  00F2               	movwf	?_strncmp
  7996     0A11  01F3               	clrf	?_strncmp+1
  7997     0A12  1C03               	skipc
  7998     0A13  03F3               	decf	?_strncmp+1,f
  7999     0A14                     l999:
  8000     0A14  0008               	return
  8001     0A15                     __end_of_strncmp:
  8002                           
  8003                           	psect	text40
  8004     15BE                     __ptext40:	
  8005 ;; *************** function _clcd_putch *****************
  8006 ;; Defined at:
  8007 ;;		line 56 in file "clcd.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  data            1    wreg     const unsigned char 
  8010 ;;  addr            1    0[BANK0 ] unsigned char 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;  data            1    1[BANK0 ] const unsigned char 
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  1    wreg      void 
  8015 ;; Registers used:
  8016 ;;		wreg, status,2, status,0, pclath, cstack
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8022 ;;      Params:         0       1       0       0       0
  8023 ;;      Locals:         0       1       0       0       0
  8024 ;;      Temps:          0       0       0       0       0
  8025 ;;      Totals:         0       2       0       0       0
  8026 ;;Total ram usage:        2 bytes
  8027 ;; Hardware stack levels used: 1
  8028 ;; Hardware stack levels required when called: 2
  8029 ;; This function calls:
  8030 ;;		_clcd_write
  8031 ;; This function is called by:
  8032 ;;		_display_time
  8033 ;;		_display_dashboard
  8034 ;;		_login
  8035 ;;		_menu_screen
  8036 ;;		_view_log
  8037 ;;		_change_password
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041     15BE                     _clcd_putch:	
  8042                           ;psect for function _clcd_putch
  8043                           
  8044                           
  8045                           ;incstack = 0
  8046                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  8047                           ;clcd_putch@data stored from wreg
  8048     15BE  1283               	bcf	3,5	;RP0=0, select bank0
  8049     15BF  1303               	bcf	3,6	;RP1=0, select bank0
  8050     15C0  00A1               	movwf	clcd_putch@data
  8051     15C1                     l3518:
  8052                           
  8053                           ;clcd.c: 56: void clcd_putch(const char data, unsigned char addr);clcd.c: 57: {;clcd.c: 
      +                          58:     clcd_write(addr, 0);
  8054     15C1  01F2               	clrf	clcd_write@mode
  8055     15C2  0820               	movf	clcd_putch@addr,w
  8056     15C3  120A  158A  2150  160A  118A  	fcall	_clcd_write
  8057                           
  8058                           ;clcd.c: 59:     clcd_write(data, 1);
  8059     15C8  01F2               	clrf	clcd_write@mode
  8060     15C9  0AF2               	incf	clcd_write@mode,f
  8061     15CA  1283               	bcf	3,5	;RP0=0, select bank0
  8062     15CB  1303               	bcf	3,6	;RP1=0, select bank0
  8063     15CC  0821               	movf	clcd_putch@data,w
  8064     15CD  120A  158A  2150  160A  118A  	fcall	_clcd_write
  8065     15D2                     l26:
  8066     15D2  0008               	return
  8067     15D3                     __end_of_clcd_putch:
  8068                           
  8069                           	psect	text41
  8070     1769                     __ptext41:	
  8071 ;; *************** function _clcd_print *****************
  8072 ;; Defined at:
  8073 ;;		line 62 in file "clcd.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;  str             2    6[COMMON] PTR unsigned char 
  8076 ;;		 -> STR_34(7), STR_33(17), STR_32(14), STR_31(17), 
  8077 ;;		 -> STR_30(18), STR_29(18), STR_28(17), STR_27(17), 
  8078 ;;		 -> STR_25(11), STR_24(12), STR_23(10), STR_22(15), 
  8079 ;;		 -> STR_21(13), STR_20(15), STR_19(5), STR_18(9), 
  8080 ;;		 -> STR_17(16), STR_16(15), STR_15(15), STR_14(15), 
  8081 ;;		 -> STR_13(9), STR_12(13), STR_11(10), STR_10(9), 
  8082 ;;		 -> STR_9(15), main@event(3), 
  8083 ;;  addr            1    8[COMMON] unsigned char 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;		None
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  1    wreg      void 
  8088 ;; Registers used:
  8089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8095 ;;      Params:         3       0       0       0       0
  8096 ;;      Locals:         0       0       0       0       0
  8097 ;;      Temps:          0       0       0       0       0
  8098 ;;      Totals:         3       0       0       0       0
  8099 ;;Total ram usage:        3 bytes
  8100 ;; Hardware stack levels used: 1
  8101 ;; Hardware stack levels required when called: 2
  8102 ;; This function calls:
  8103 ;;		_clcd_write
  8104 ;; This function is called by:
  8105 ;;		_main
  8106 ;;		_display_dashboard
  8107 ;;		_login
  8108 ;;		_menu_screen
  8109 ;;		_view_log
  8110 ;;		_clear_log
  8111 ;;		_change_password
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115     1769                     _clcd_print:	
  8116                           ;psect for function _clcd_print
  8117                           
  8118     1769                     l3594:	
  8119                           ;incstack = 0
  8120                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8121                           
  8122                           
  8123                           ;clcd.c: 62: void clcd_print(char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 64:   
      +                            clcd_write(addr, 0);
  8124     1769  01F2               	clrf	clcd_write@mode
  8125     176A  0878               	movf	clcd_print@addr,w
  8126     176B  120A  158A  2150  160A  118A  	fcall	_clcd_write
  8127                           
  8128                           ;clcd.c: 66:     while (*str != '\0')
  8129     1770  2F87               	goto	l3600
  8130     1771                     l3596:
  8131                           
  8132                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
  8133     1771  01F2               	clrf	clcd_write@mode
  8134     1772  0AF2               	incf	clcd_write@mode,f
  8135     1773  0877               	movf	clcd_print@str+1,w
  8136     1774  00FF               	movwf	btemp+1
  8137     1775  0876               	movf	clcd_print@str,w
  8138     1776  0084               	movwf	4
  8139     1777  160A  118A  2000  160A  118A  	fcall	stringtab
  8140     177C  120A  158A  2150  160A  118A  	fcall	_clcd_write
  8141     1781                     l3598:
  8142                           
  8143                           ;clcd.c: 69:         str++;
  8144     1781  3001               	movlw	1
  8145     1782  07F6               	addwf	clcd_print@str,f
  8146     1783  1803               	skipnc
  8147     1784  0AF7               	incf	clcd_print@str+1,f
  8148     1785  3000               	movlw	0
  8149     1786  07F7               	addwf	clcd_print@str+1,f
  8150     1787                     l3600:
  8151                           
  8152                           ;clcd.c: 66:     while (*str != '\0')
  8153     1787  0877               	movf	clcd_print@str+1,w
  8154     1788  1283               	bcf	3,5	;RP0=0, select bank0
  8155     1789  1303               	bcf	3,6	;RP1=0, select bank0
  8156     178A  00FF               	movwf	btemp+1
  8157     178B  0876               	movf	clcd_print@str,w
  8158     178C  0084               	movwf	4
  8159     178D  160A  118A  2000  160A  118A  	fcall	stringtab
  8160     1792  3A00               	xorlw	0
  8161     1793  1D03               	skipz
  8162     1794  2F96               	goto	u3701
  8163     1795  2F97               	goto	u3700
  8164     1796                     u3701:
  8165     1796  2F71               	goto	l3596
  8166     1797                     u3700:
  8167     1797                     l32:
  8168     1797  0008               	return
  8169     1798                     __end_of_clcd_print:
  8170                           
  8171                           	psect	text42
  8172     0950                     __ptext42:	
  8173 ;; *************** function _clcd_write *****************
  8174 ;; Defined at:
  8175 ;;		line 4 in file "clcd.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  byte            1    wreg     unsigned char 
  8178 ;;  mode            1    2[COMMON] unsigned char 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;  byte            1    5[COMMON] unsigned char 
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  1    wreg      void 
  8183 ;; Registers used:
  8184 ;;		wreg, status,2, status,0
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8190 ;;      Params:         1       0       0       0       0
  8191 ;;      Locals:         1       0       0       0       0
  8192 ;;      Temps:          2       0       0       0       0
  8193 ;;      Totals:         4       0       0       0       0
  8194 ;;Total ram usage:        4 bytes
  8195 ;; Hardware stack levels used: 1
  8196 ;; Hardware stack levels required when called: 1
  8197 ;; This function calls:
  8198 ;;		Nothing
  8199 ;; This function is called by:
  8200 ;;		_init_display_controller
  8201 ;;		_clcd_putch
  8202 ;;		_clcd_print
  8203 ;;		_main
  8204 ;;		_login
  8205 ;;		_change_password
  8206 ;;		_clear_clcd_screen
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210     0950                     _clcd_write:	
  8211                           ;psect for function _clcd_write
  8212                           
  8213                           
  8214                           ;incstack = 0
  8215                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  8216                           ;clcd_write@byte stored from wreg
  8217     0950  00F5               	movwf	clcd_write@byte
  8218     0951                     l3464:
  8219                           
  8220                           ;clcd.c: 4: void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;clcd.c:
      +                           6:     RE2 =(__bit) mode;
  8221     0951  1872               	btfsc	clcd_write@mode,0
  8222     0952  2954               	goto	u3541
  8223     0953  2958               	goto	u3540
  8224     0954                     u3541:
  8225     0954  1283               	bcf	3,5	;RP0=0, select bank0
  8226     0955  1303               	bcf	3,6	;RP1=0, select bank0
  8227     0956  1509               	bsf	9,2	;volatile
  8228     0957  295B               	goto	u3554
  8229     0958                     u3540:
  8230     0958  1283               	bcf	3,5	;RP0=0, select bank0
  8231     0959  1303               	bcf	3,6	;RP1=0, select bank0
  8232     095A  1109               	bcf	9,2	;volatile
  8233     095B                     u3554:
  8234     095B                     l3466:
  8235                           
  8236                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  8237     095B  0875               	movf	clcd_write@byte,w
  8238     095C  39F0               	andlw	240
  8239     095D  0088               	movwf	8	;volatile
  8240     095E                     l3468:
  8241                           
  8242                           ;clcd.c: 9:     RE1 = 1;
  8243     095E  1489               	bsf	9,1	;volatile
  8244     095F                     l3470:
  8245                           
  8246                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  8247     095F  30A6               	movlw	166
  8248     0960  00F3               	movwf	??_clcd_write
  8249     0961                     u5447:
  8250     0961  0BF3               	decfsz	??_clcd_write,f
  8251     0962  2961               	goto	u5447
  8252     0963  0000               	nop
  8253     0964                     l3472:
  8254                           
  8255                           ;clcd.c: 11:     RE1 = 0;
  8256     0964  1283               	bcf	3,5	;RP0=0, select bank0
  8257     0965  1303               	bcf	3,6	;RP1=0, select bank0
  8258     0966  1089               	bcf	9,1	;volatile
  8259     0967                     l3474:
  8260                           
  8261                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << (unsigned char) 4;
  8262     0967  0875               	movf	clcd_write@byte,w
  8263     0968  390F               	andlw	15
  8264     0969  00F3               	movwf	??_clcd_write
  8265     096A  3003               	movlw	3
  8266     096B                     u3565:
  8267     096B  1003               	clrc
  8268     096C  0DF3               	rlf	??_clcd_write,f
  8269     096D  3EFF               	addlw	-1
  8270     096E  1D03               	skipz
  8271     096F  296B               	goto	u3565
  8272     0970  1003               	clrc
  8273     0971  0D73               	rlf	??_clcd_write,w
  8274     0972  0088               	movwf	8	;volatile
  8275     0973                     l3476:
  8276                           
  8277                           ;clcd.c: 14:     RE1 = 1;
  8278     0973  1489               	bsf	9,1	;volatile
  8279     0974                     l3478:
  8280                           
  8281                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  8282     0974  30A6               	movlw	166
  8283     0975  00F3               	movwf	??_clcd_write
  8284     0976                     u5457:
  8285     0976  0BF3               	decfsz	??_clcd_write,f
  8286     0977  2976               	goto	u5457
  8287     0978  0000               	nop
  8288     0979                     l3480:
  8289                           
  8290                           ;clcd.c: 16:     RE1 = 0;
  8291     0979  1283               	bcf	3,5	;RP0=0, select bank0
  8292     097A  1303               	bcf	3,6	;RP1=0, select bank0
  8293     097B  1089               	bcf	9,1	;volatile
  8294     097C                     l3482:
  8295                           
  8296                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  8297     097C  301B               	movlw	27
  8298     097D  00F4               	movwf	??_clcd_write+1
  8299     097E  309E               	movlw	158
  8300     097F  00F3               	movwf	??_clcd_write
  8301     0980                     u5467:
  8302     0980  0BF3               	decfsz	??_clcd_write,f
  8303     0981  2980               	goto	u5467
  8304     0982  0BF4               	decfsz	??_clcd_write+1,f
  8305     0983  2980               	goto	u5467
  8306     0984  0000               	nop
  8307     0985                     l17:
  8308     0985  0008               	return
  8309     0986                     __end_of_clcd_write:
  8310                           
  8311                           	psect	text43
  8312     0D83                     __ptext43:	
  8313 ;; *************** function ___xxtofl *****************
  8314 ;; Defined at:
  8315 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  sign            1    wreg     unsigned char 
  8318 ;;  val             4    6[COMMON] long 
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;  sign            1    4[BANK0 ] unsigned char 
  8321 ;;  arg             4    6[BANK0 ] unsigned long 
  8322 ;;  exp             1    5[BANK0 ] unsigned char 
  8323 ;; Return value:  Size  Location     Type
  8324 ;;                  4    6[COMMON] unsigned char 
  8325 ;; Registers used:
  8326 ;;		wreg, status,2, status,0
  8327 ;; Tracked objects:
  8328 ;;		On entry : 0/0
  8329 ;;		On exit  : 0/0
  8330 ;;		Unchanged: 0/0
  8331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8332 ;;      Params:         4       0       0       0       0
  8333 ;;      Locals:         0       6       0       0       0
  8334 ;;      Temps:          0       4       0       0       0
  8335 ;;      Totals:         4      10       0       0       0
  8336 ;;Total ram usage:       14 bytes
  8337 ;; Hardware stack levels used: 1
  8338 ;; Hardware stack levels required when called: 1
  8339 ;; This function calls:
  8340 ;;		Nothing
  8341 ;; This function is called by:
  8342 ;;		_main
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346     0D83                     ___xxtofl:	
  8347                           ;psect for function ___xxtofl
  8348                           
  8349                           
  8350                           ;incstack = 0
  8351                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8352                           ;___xxtofl@sign stored from wreg
  8353     0D83  1283               	bcf	3,5	;RP0=0, select bank0
  8354     0D84  1303               	bcf	3,6	;RP1=0, select bank0
  8355     0D85  00A4               	movwf	___xxtofl@sign
  8356     0D86                     l4400:
  8357     0D86  0824               	movf	___xxtofl@sign,w
  8358     0D87  1903               	btfsc	3,2
  8359     0D88  2D8A               	goto	u4951
  8360     0D89  2D8B               	goto	u4950
  8361     0D8A                     u4951:
  8362     0D8A  2D9F               	goto	l4406
  8363     0D8B                     u4950:
  8364     0D8B                     l4402:
  8365     0D8B  1FF9               	btfss	___xxtofl@val+3,7
  8366     0D8C  2D8E               	goto	u4961
  8367     0D8D  2D8F               	goto	u4960
  8368     0D8E                     u4961:
  8369     0D8E  2D9F               	goto	l4406
  8370     0D8F                     u4960:
  8371     0D8F                     l4404:
  8372     0D8F  0976               	comf	___xxtofl@val,w
  8373     0D90  00A6               	movwf	___xxtofl@arg
  8374     0D91  0977               	comf	___xxtofl@val+1,w
  8375     0D92  00A7               	movwf	___xxtofl@arg+1
  8376     0D93  0978               	comf	___xxtofl@val+2,w
  8377     0D94  00A8               	movwf	___xxtofl@arg+2
  8378     0D95  0979               	comf	___xxtofl@val+3,w
  8379     0D96  00A9               	movwf	___xxtofl@arg+3
  8380     0D97  0AA6               	incf	___xxtofl@arg,f
  8381     0D98  1903               	skipnz
  8382     0D99  0AA7               	incf	___xxtofl@arg+1,f
  8383     0D9A  1903               	skipnz
  8384     0D9B  0AA8               	incf	___xxtofl@arg+2,f
  8385     0D9C  1903               	skipnz
  8386     0D9D  0AA9               	incf	___xxtofl@arg+3,f
  8387     0D9E  2DA7               	goto	l974
  8388     0D9F                     l4406:
  8389     0D9F  0879               	movf	___xxtofl@val+3,w
  8390     0DA0  00A9               	movwf	___xxtofl@arg+3
  8391     0DA1  0878               	movf	___xxtofl@val+2,w
  8392     0DA2  00A8               	movwf	___xxtofl@arg+2
  8393     0DA3  0877               	movf	___xxtofl@val+1,w
  8394     0DA4  00A7               	movwf	___xxtofl@arg+1
  8395     0DA5  0876               	movf	___xxtofl@val,w
  8396     0DA6  00A6               	movwf	___xxtofl@arg
  8397     0DA7                     l974:
  8398     0DA7  0879               	movf	___xxtofl@val+3,w
  8399     0DA8  0478               	iorwf	___xxtofl@val+2,w
  8400     0DA9  0477               	iorwf	___xxtofl@val+1,w
  8401     0DAA  0476               	iorwf	___xxtofl@val,w
  8402     0DAB  1D03               	skipz
  8403     0DAC  2DAE               	goto	u4971
  8404     0DAD  2DAF               	goto	u4970
  8405     0DAE                     u4971:
  8406     0DAE  2DB8               	goto	l975
  8407     0DAF                     u4970:
  8408     0DAF                     l4408:
  8409     0DAF  3000               	movlw	0
  8410     0DB0  00F9               	movwf	?___xxtofl+3
  8411     0DB1  3000               	movlw	0
  8412     0DB2  00F8               	movwf	?___xxtofl+2
  8413     0DB3  3000               	movlw	0
  8414     0DB4  00F7               	movwf	?___xxtofl+1
  8415     0DB5  3000               	movlw	0
  8416     0DB6  00F6               	movwf	?___xxtofl
  8417     0DB7  2E38               	goto	l976
  8418     0DB8                     l975:
  8419     0DB8  3096               	movlw	150
  8420     0DB9  00A5               	movwf	___xxtofl@exp
  8421     0DBA  2DC6               	goto	l4414
  8422     0DBB                     l4412:
  8423     0DBB  3001               	movlw	1
  8424     0DBC  07A5               	addwf	___xxtofl@exp,f
  8425     0DBD  3001               	movlw	1
  8426     0DBE                     u4985:
  8427     0DBE  1003               	clrc
  8428     0DBF  0CA9               	rrf	___xxtofl@arg+3,f
  8429     0DC0  0CA8               	rrf	___xxtofl@arg+2,f
  8430     0DC1  0CA7               	rrf	___xxtofl@arg+1,f
  8431     0DC2  0CA6               	rrf	___xxtofl@arg,f
  8432     0DC3  3EFF               	addlw	-1
  8433     0DC4  1D03               	skipz
  8434     0DC5  2DBE               	goto	u4985
  8435     0DC6                     l4414:
  8436     0DC6  30FE               	movlw	254
  8437     0DC7  0529               	andwf	___xxtofl@arg+3,w
  8438     0DC8  1D03               	btfss	3,2
  8439     0DC9  2DCB               	goto	u4991
  8440     0DCA  2DCC               	goto	u4990
  8441     0DCB                     u4991:
  8442     0DCB  2DBB               	goto	l4412
  8443     0DCC                     u4990:
  8444     0DCC  2DE6               	goto	l980
  8445     0DCD                     l4416:
  8446     0DCD  3001               	movlw	1
  8447     0DCE  07A5               	addwf	___xxtofl@exp,f
  8448     0DCF                     l4418:
  8449     0DCF  3001               	movlw	1
  8450     0DD0  07A6               	addwf	___xxtofl@arg,f
  8451     0DD1  3000               	movlw	0
  8452     0DD2  1803               	skipnc
  8453     0DD3  3001               	movlw	1
  8454     0DD4  07A7               	addwf	___xxtofl@arg+1,f
  8455     0DD5  3000               	movlw	0
  8456     0DD6  1803               	skipnc
  8457     0DD7  3001               	movlw	1
  8458     0DD8  07A8               	addwf	___xxtofl@arg+2,f
  8459     0DD9  3000               	movlw	0
  8460     0DDA  1803               	skipnc
  8461     0DDB  3001               	movlw	1
  8462     0DDC  07A9               	addwf	___xxtofl@arg+3,f
  8463     0DDD                     l4420:
  8464     0DDD  3001               	movlw	1
  8465     0DDE                     u5005:
  8466     0DDE  1003               	clrc
  8467     0DDF  0CA9               	rrf	___xxtofl@arg+3,f
  8468     0DE0  0CA8               	rrf	___xxtofl@arg+2,f
  8469     0DE1  0CA7               	rrf	___xxtofl@arg+1,f
  8470     0DE2  0CA6               	rrf	___xxtofl@arg,f
  8471     0DE3  3EFF               	addlw	-1
  8472     0DE4  1D03               	skipz
  8473     0DE5  2DDE               	goto	u5005
  8474     0DE6                     l980:
  8475     0DE6  30FF               	movlw	255
  8476     0DE7  0529               	andwf	___xxtofl@arg+3,w
  8477     0DE8  1D03               	btfss	3,2
  8478     0DE9  2DEB               	goto	u5011
  8479     0DEA  2DEC               	goto	u5010
  8480     0DEB                     u5011:
  8481     0DEB  2DCD               	goto	l4416
  8482     0DEC                     u5010:
  8483     0DEC  2DF8               	goto	l4424
  8484     0DED                     l4422:
  8485     0DED  3001               	movlw	1
  8486     0DEE  02A5               	subwf	___xxtofl@exp,f
  8487     0DEF  3001               	movlw	1
  8488     0DF0  00A0               	movwf	??___xxtofl
  8489     0DF1                     u5025:
  8490     0DF1  1003               	clrc
  8491     0DF2  0DA6               	rlf	___xxtofl@arg,f
  8492     0DF3  0DA7               	rlf	___xxtofl@arg+1,f
  8493     0DF4  0DA8               	rlf	___xxtofl@arg+2,f
  8494     0DF5  0DA9               	rlf	___xxtofl@arg+3,f
  8495     0DF6  0BA0               	decfsz	??___xxtofl,f
  8496     0DF7  2DF1               	goto	u5025
  8497     0DF8                     l4424:
  8498     0DF8  1BA8               	btfsc	___xxtofl@arg+2,7
  8499     0DF9  2DFB               	goto	u5031
  8500     0DFA  2DFC               	goto	u5030
  8501     0DFB                     u5031:
  8502     0DFB  2E02               	goto	l987
  8503     0DFC                     u5030:
  8504     0DFC                     l4426:
  8505     0DFC  3002               	movlw	2
  8506     0DFD  0225               	subwf	___xxtofl@exp,w
  8507     0DFE  1803               	skipnc
  8508     0DFF  2E01               	goto	u5041
  8509     0E00  2E02               	goto	u5040
  8510     0E01                     u5041:
  8511     0E01  2DED               	goto	l4422
  8512     0E02                     u5040:
  8513     0E02                     l987:
  8514     0E02  1825               	btfsc	___xxtofl@exp,0
  8515     0E03  2E05               	goto	u5051
  8516     0E04  2E06               	goto	u5050
  8517     0E05                     u5051:
  8518     0E05  2E0E               	goto	l988
  8519     0E06                     u5050:
  8520     0E06                     l4428:
  8521     0E06  30FF               	movlw	255
  8522     0E07  05A6               	andwf	___xxtofl@arg,f
  8523     0E08  30FF               	movlw	255
  8524     0E09  05A7               	andwf	___xxtofl@arg+1,f
  8525     0E0A  307F               	movlw	127
  8526     0E0B  05A8               	andwf	___xxtofl@arg+2,f
  8527     0E0C  30FF               	movlw	255
  8528     0E0D  05A9               	andwf	___xxtofl@arg+3,f
  8529     0E0E                     l988:
  8530     0E0E  1003               	clrc
  8531     0E0F  0CA5               	rrf	___xxtofl@exp,f
  8532     0E10                     l4430:
  8533     0E10  0825               	movf	___xxtofl@exp,w
  8534     0E11  00A0               	movwf	??___xxtofl
  8535     0E12  01A1               	clrf	??___xxtofl+1
  8536     0E13  01A2               	clrf	??___xxtofl+2
  8537     0E14  01A3               	clrf	??___xxtofl+3
  8538     0E15  3018               	movlw	24
  8539     0E16                     u5065:
  8540     0E16  1003               	clrc
  8541     0E17  0DA0               	rlf	??___xxtofl,f
  8542     0E18  0DA1               	rlf	??___xxtofl+1,f
  8543     0E19  0DA2               	rlf	??___xxtofl+2,f
  8544     0E1A  0DA3               	rlf	??___xxtofl+3,f
  8545     0E1B                     u5060:
  8546     0E1B  3EFF               	addlw	-1
  8547     0E1C  1D03               	skipz
  8548     0E1D  2E16               	goto	u5065
  8549     0E1E  0820               	movf	??___xxtofl,w
  8550     0E1F  04A6               	iorwf	___xxtofl@arg,f
  8551     0E20  0821               	movf	??___xxtofl+1,w
  8552     0E21  04A7               	iorwf	___xxtofl@arg+1,f
  8553     0E22  0822               	movf	??___xxtofl+2,w
  8554     0E23  04A8               	iorwf	___xxtofl@arg+2,f
  8555     0E24  0823               	movf	??___xxtofl+3,w
  8556     0E25  04A9               	iorwf	___xxtofl@arg+3,f
  8557     0E26                     l4432:
  8558     0E26  0824               	movf	___xxtofl@sign,w
  8559     0E27  1903               	btfsc	3,2
  8560     0E28  2E2A               	goto	u5071
  8561     0E29  2E2B               	goto	u5070
  8562     0E2A                     u5071:
  8563     0E2A  2E30               	goto	l4438
  8564     0E2B                     u5070:
  8565     0E2B                     l4434:
  8566     0E2B  1FF9               	btfss	___xxtofl@val+3,7
  8567     0E2C  2E2E               	goto	u5081
  8568     0E2D  2E2F               	goto	u5080
  8569     0E2E                     u5081:
  8570     0E2E  2E30               	goto	l4438
  8571     0E2F                     u5080:
  8572     0E2F                     l4436:
  8573     0E2F  17A9               	bsf	___xxtofl@arg+3,7
  8574     0E30                     l4438:
  8575     0E30  0829               	movf	___xxtofl@arg+3,w
  8576     0E31  00F9               	movwf	?___xxtofl+3
  8577     0E32  0828               	movf	___xxtofl@arg+2,w
  8578     0E33  00F8               	movwf	?___xxtofl+2
  8579     0E34  0827               	movf	___xxtofl@arg+1,w
  8580     0E35  00F7               	movwf	?___xxtofl+1
  8581     0E36  0826               	movf	___xxtofl@arg,w
  8582     0E37  00F6               	movwf	?___xxtofl
  8583     0E38                     l976:
  8584     0E38  0008               	return
  8585     0E39                     __end_of___xxtofl:
  8586                           
  8587                           	psect	text44
  8588     0D0D                     __ptext44:	
  8589 ;; *************** function ___fltol *****************
  8590 ;; Defined at:
  8591 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;  f1              4   36[BANK0 ] unsigned char 
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;  exp1            1   45[BANK0 ] unsigned char 
  8596 ;;  sign1           1   44[BANK0 ] unsigned char 
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  4   36[BANK0 ] long 
  8599 ;; Registers used:
  8600 ;;		wreg, status,2, status,0
  8601 ;; Tracked objects:
  8602 ;;		On entry : 0/0
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8606 ;;      Params:         0       4       0       0       0
  8607 ;;      Locals:         0       2       0       0       0
  8608 ;;      Temps:          0       4       0       0       0
  8609 ;;      Totals:         0      10       0       0       0
  8610 ;;Total ram usage:       10 bytes
  8611 ;; Hardware stack levels used: 1
  8612 ;; Hardware stack levels required when called: 1
  8613 ;; This function calls:
  8614 ;;		Nothing
  8615 ;; This function is called by:
  8616 ;;		_main
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620     0D0D                     ___fltol:	
  8621                           ;psect for function ___fltol
  8622                           
  8623     0D0D                     l4220:	
  8624                           ;incstack = 0
  8625                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8626                           
  8627     0D0D  1003               	clrc
  8628     0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  8629     0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  8630     0D10  0D46               	rlf	___fltol@f1+2,w
  8631     0D11  0D47               	rlf	___fltol@f1+3,w
  8632     0D12  00CD               	movwf	___fltol@exp1
  8633     0D13  084D               	movf	___fltol@exp1,w
  8634     0D14  1D03               	btfss	3,2
  8635     0D15  2D17               	goto	u4561
  8636     0D16  2D18               	goto	u4560
  8637     0D17                     u4561:
  8638     0D17  2D21               	goto	l4226
  8639     0D18                     u4560:
  8640     0D18                     l4222:
  8641     0D18  3000               	movlw	0
  8642     0D19  00C7               	movwf	?___fltol+3
  8643     0D1A  3000               	movlw	0
  8644     0D1B  00C6               	movwf	?___fltol+2
  8645     0D1C  3000               	movlw	0
  8646     0D1D  00C5               	movwf	?___fltol+1
  8647     0D1E  3000               	movlw	0
  8648     0D1F  00C4               	movwf	?___fltol
  8649     0D20  2D82               	goto	l727
  8650     0D21                     l4226:
  8651     0D21  0844               	movf	___fltol@f1,w
  8652     0D22  00C8               	movwf	??___fltol
  8653     0D23  0845               	movf	___fltol@f1+1,w
  8654     0D24  00C9               	movwf	??___fltol+1
  8655     0D25  0846               	movf	___fltol@f1+2,w
  8656     0D26  00CA               	movwf	??___fltol+2
  8657     0D27  0847               	movf	___fltol@f1+3,w
  8658     0D28  00CB               	movwf	??___fltol+3
  8659     0D29  301F               	movlw	31
  8660     0D2A                     u4575:
  8661     0D2A  1003               	clrc
  8662     0D2B  0CCB               	rrf	??___fltol+3,f
  8663     0D2C  0CCA               	rrf	??___fltol+2,f
  8664     0D2D  0CC9               	rrf	??___fltol+1,f
  8665     0D2E  0CC8               	rrf	??___fltol,f
  8666     0D2F                     u4570:
  8667     0D2F  3EFF               	addlw	-1
  8668     0D30  1D03               	skipz
  8669     0D31  2D2A               	goto	u4575
  8670     0D32  0848               	movf	??___fltol,w
  8671     0D33  00CC               	movwf	___fltol@sign1
  8672     0D34                     l4228:
  8673     0D34  17C6               	bsf	___fltol@f1+2,7
  8674     0D35                     l4230:
  8675     0D35  30FF               	movlw	255
  8676     0D36  05C4               	andwf	___fltol@f1,f
  8677     0D37  30FF               	movlw	255
  8678     0D38  05C5               	andwf	___fltol@f1+1,f
  8679     0D39  30FF               	movlw	255
  8680     0D3A  05C6               	andwf	___fltol@f1+2,f
  8681     0D3B  3000               	movlw	0
  8682     0D3C  05C7               	andwf	___fltol@f1+3,f
  8683     0D3D                     l4232:
  8684     0D3D  3096               	movlw	150
  8685     0D3E  02CD               	subwf	___fltol@exp1,f
  8686     0D3F                     l4234:
  8687     0D3F  1FCD               	btfss	___fltol@exp1,7
  8688     0D40  2D42               	goto	u4581
  8689     0D41  2D43               	goto	u4580
  8690     0D42                     u4581:
  8691     0D42  2D5B               	goto	l4244
  8692     0D43                     u4580:
  8693     0D43                     l4236:
  8694     0D43  084D               	movf	___fltol@exp1,w
  8695     0D44  3A80               	xorlw	128
  8696     0D45  3E97               	addlw	151
  8697     0D46  1803               	skipnc
  8698     0D47  2D49               	goto	u4591
  8699     0D48  2D4A               	goto	u4590
  8700     0D49                     u4591:
  8701     0D49  2D4B               	goto	l4242
  8702     0D4A                     u4590:
  8703     0D4A  2D18               	goto	l4222
  8704     0D4B                     l4242:
  8705     0D4B  3001               	movlw	1
  8706     0D4C                     u4605:
  8707     0D4C  1003               	clrc
  8708     0D4D  0CC7               	rrf	___fltol@f1+3,f
  8709     0D4E  0CC6               	rrf	___fltol@f1+2,f
  8710     0D4F  0CC5               	rrf	___fltol@f1+1,f
  8711     0D50  0CC4               	rrf	___fltol@f1,f
  8712     0D51  3EFF               	addlw	-1
  8713     0D52  1D03               	skipz
  8714     0D53  2D4C               	goto	u4605
  8715     0D54  3001               	movlw	1
  8716     0D55  07CD               	addwf	___fltol@exp1,f
  8717     0D56  1D03               	btfss	3,2
  8718     0D57  2D59               	goto	u4611
  8719     0D58  2D5A               	goto	u4610
  8720     0D59                     u4611:
  8721     0D59  2D4B               	goto	l4242
  8722     0D5A                     u4610:
  8723     0D5A  2D72               	goto	l4252
  8724     0D5B                     l4244:
  8725     0D5B  3020               	movlw	32
  8726     0D5C  024D               	subwf	___fltol@exp1,w
  8727     0D5D  1C03               	skipc
  8728     0D5E  2D60               	goto	u4621
  8729     0D5F  2D61               	goto	u4620
  8730     0D60                     u4621:
  8731     0D60  2D6D               	goto	l734
  8732     0D61                     u4620:
  8733     0D61  2D18               	goto	l4222
  8734     0D62                     l4250:
  8735     0D62  3001               	movlw	1
  8736     0D63  00C8               	movwf	??___fltol
  8737     0D64                     u4635:
  8738     0D64  1003               	clrc
  8739     0D65  0DC4               	rlf	___fltol@f1,f
  8740     0D66  0DC5               	rlf	___fltol@f1+1,f
  8741     0D67  0DC6               	rlf	___fltol@f1+2,f
  8742     0D68  0DC7               	rlf	___fltol@f1+3,f
  8743     0D69  0BC8               	decfsz	??___fltol,f
  8744     0D6A  2D64               	goto	u4635
  8745     0D6B  3001               	movlw	1
  8746     0D6C  02CD               	subwf	___fltol@exp1,f
  8747     0D6D                     l734:
  8748     0D6D  084D               	movf	___fltol@exp1,w
  8749     0D6E  1D03               	btfss	3,2
  8750     0D6F  2D71               	goto	u4641
  8751     0D70  2D72               	goto	u4640
  8752     0D71                     u4641:
  8753     0D71  2D62               	goto	l4250
  8754     0D72                     u4640:
  8755     0D72                     l4252:
  8756     0D72  084C               	movf	___fltol@sign1,w
  8757     0D73  1903               	btfsc	3,2
  8758     0D74  2D76               	goto	u4651
  8759     0D75  2D77               	goto	u4650
  8760     0D76                     u4651:
  8761     0D76  2D82               	goto	l737
  8762     0D77                     u4650:
  8763     0D77                     l4254:
  8764     0D77  09C4               	comf	___fltol@f1,f
  8765     0D78  09C5               	comf	___fltol@f1+1,f
  8766     0D79  09C6               	comf	___fltol@f1+2,f
  8767     0D7A  09C7               	comf	___fltol@f1+3,f
  8768     0D7B  0AC4               	incf	___fltol@f1,f
  8769     0D7C  1903               	skipnz
  8770     0D7D  0AC5               	incf	___fltol@f1+1,f
  8771     0D7E  1903               	skipnz
  8772     0D7F  0AC6               	incf	___fltol@f1+2,f
  8773     0D80  1903               	skipnz
  8774     0D81  0AC7               	incf	___fltol@f1+3,f
  8775     0D82                     l737:
  8776     0D82                     l727:
  8777     0D82  0008               	return
  8778     0D83                     __end_of___fltol:
  8779                           
  8780                           	psect	text45
  8781     046D                     __ptext45:	
  8782 ;; *************** function ___fldiv *****************
  8783 ;; Defined at:
  8784 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  a               4   10[BANK0 ] long 
  8787 ;;  b               4   14[BANK0 ] long 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;  grs             4   30[BANK0 ] unsigned long 
  8790 ;;  rem             4   23[BANK0 ] unsigned long 
  8791 ;;  new_exp         2   28[BANK0 ] short 
  8792 ;;  aexp            1   35[BANK0 ] unsigned char 
  8793 ;;  bexp            1   34[BANK0 ] unsigned char 
  8794 ;;  sign            1   27[BANK0 ] unsigned char 
  8795 ;; Return value:  Size  Location     Type
  8796 ;;                  4   10[BANK0 ] unsigned char 
  8797 ;; Registers used:
  8798 ;;		wreg, status,2, status,0, btemp+1
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8804 ;;      Params:         0       8       0       0       0
  8805 ;;      Locals:         0      13       0       0       0
  8806 ;;      Temps:          0       5       0       0       0
  8807 ;;      Totals:         0      26       0       0       0
  8808 ;;Total ram usage:       26 bytes
  8809 ;; Hardware stack levels used: 1
  8810 ;; Hardware stack levels required when called: 1
  8811 ;; This function calls:
  8812 ;;		Nothing
  8813 ;; This function is called by:
  8814 ;;		_main
  8815 ;; This function uses a non-reentrant model
  8816 ;;
  8817                           
  8818     046D                     ___fldiv:	
  8819                           ;psect for function ___fldiv
  8820                           
  8821     046D                     l4256:	
  8822                           ;incstack = 0
  8823                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8824                           
  8825     046D  1283               	bcf	3,5	;RP0=0, select bank0
  8826     046E  1303               	bcf	3,6	;RP1=0, select bank0
  8827     046F  0831               	movf	___fldiv@b+3,w
  8828     0470  00BB               	movwf	___fldiv@sign
  8829     0471                     l4258:
  8830     0471  3080               	movlw	128
  8831     0472  05BB               	andwf	___fldiv@sign,f
  8832     0473                     l4260:
  8833     0473  0831               	movf	___fldiv@b+3,w
  8834     0474  00B2               	movwf	??___fldiv
  8835     0475  0732               	addwf	??___fldiv,w
  8836     0476  00C2               	movwf	___fldiv@bexp
  8837     0477                     l4262:
  8838     0477  1FB0               	btfss	___fldiv@b+2,7
  8839     0478  2C7A               	goto	u4661
  8840     0479  2C7B               	goto	u4660
  8841     047A                     u4661:
  8842     047A  2C7C               	goto	l4266
  8843     047B                     u4660:
  8844     047B                     l4264:
  8845     047B  1442               	bsf	___fldiv@bexp,0
  8846     047C                     l4266:
  8847     047C  0842               	movf	___fldiv@bexp,w
  8848     047D  1903               	btfsc	3,2
  8849     047E  2C80               	goto	u4671
  8850     047F  2C81               	goto	u4670
  8851     0480                     u4671:
  8852     0480  2C91               	goto	l4276
  8853     0481                     u4670:
  8854     0481                     l4268:
  8855     0481  0A42               	incf	___fldiv@bexp,w
  8856     0482  1D03               	btfss	3,2
  8857     0483  2C85               	goto	u4681
  8858     0484  2C86               	goto	u4680
  8859     0485                     u4681:
  8860     0485  2C8E               	goto	l4272
  8861     0486                     u4680:
  8862     0486                     l4270:
  8863     0486  3000               	movlw	0
  8864     0487  00B1               	movwf	___fldiv@b+3
  8865     0488  3000               	movlw	0
  8866     0489  00B0               	movwf	___fldiv@b+2
  8867     048A  3000               	movlw	0
  8868     048B  00AF               	movwf	___fldiv@b+1
  8869     048C  3000               	movlw	0
  8870     048D  00AE               	movwf	___fldiv@b
  8871     048E                     l4272:
  8872     048E  17B0               	bsf	___fldiv@b+2,7
  8873     048F                     l4274:
  8874     048F  01B1               	clrf	___fldiv@b+3
  8875     0490  2C99               	goto	l4278
  8876     0491                     l4276:
  8877     0491  3000               	movlw	0
  8878     0492  00B1               	movwf	___fldiv@b+3
  8879     0493  3000               	movlw	0
  8880     0494  00B0               	movwf	___fldiv@b+2
  8881     0495  3000               	movlw	0
  8882     0496  00AF               	movwf	___fldiv@b+1
  8883     0497  3000               	movlw	0
  8884     0498  00AE               	movwf	___fldiv@b
  8885     0499                     l4278:
  8886     0499  082D               	movf	___fldiv@a+3,w
  8887     049A  3980               	andlw	128
  8888     049B  06BB               	xorwf	___fldiv@sign,f
  8889     049C                     l4280:
  8890     049C  082D               	movf	___fldiv@a+3,w
  8891     049D  00B2               	movwf	??___fldiv
  8892     049E  0732               	addwf	??___fldiv,w
  8893     049F  00C3               	movwf	___fldiv@aexp
  8894     04A0                     l4282:
  8895     04A0  1FAC               	btfss	___fldiv@a+2,7
  8896     04A1  2CA3               	goto	u4691
  8897     04A2  2CA4               	goto	u4690
  8898     04A3                     u4691:
  8899     04A3  2CA5               	goto	l4286
  8900     04A4                     u4690:
  8901     04A4                     l4284:
  8902     04A4  1443               	bsf	___fldiv@aexp,0
  8903     04A5                     l4286:
  8904     04A5  0843               	movf	___fldiv@aexp,w
  8905     04A6  1903               	btfsc	3,2
  8906     04A7  2CA9               	goto	u4701
  8907     04A8  2CAA               	goto	u4700
  8908     04A9                     u4701:
  8909     04A9  2CBA               	goto	l4296
  8910     04AA                     u4700:
  8911     04AA                     l4288:
  8912     04AA  0A43               	incf	___fldiv@aexp,w
  8913     04AB  1D03               	btfss	3,2
  8914     04AC  2CAE               	goto	u4711
  8915     04AD  2CAF               	goto	u4710
  8916     04AE                     u4711:
  8917     04AE  2CB7               	goto	l4292
  8918     04AF                     u4710:
  8919     04AF                     l4290:
  8920     04AF  3000               	movlw	0
  8921     04B0  00AD               	movwf	___fldiv@a+3
  8922     04B1  3000               	movlw	0
  8923     04B2  00AC               	movwf	___fldiv@a+2
  8924     04B3  3000               	movlw	0
  8925     04B4  00AB               	movwf	___fldiv@a+1
  8926     04B5  3000               	movlw	0
  8927     04B6  00AA               	movwf	___fldiv@a
  8928     04B7                     l4292:
  8929     04B7  17AC               	bsf	___fldiv@a+2,7
  8930     04B8                     l4294:
  8931     04B8  01AD               	clrf	___fldiv@a+3
  8932     04B9  2CC2               	goto	l890
  8933     04BA                     l4296:
  8934     04BA  3000               	movlw	0
  8935     04BB  00AD               	movwf	___fldiv@a+3
  8936     04BC  3000               	movlw	0
  8937     04BD  00AC               	movwf	___fldiv@a+2
  8938     04BE  3000               	movlw	0
  8939     04BF  00AB               	movwf	___fldiv@a+1
  8940     04C0  3000               	movlw	0
  8941     04C1  00AA               	movwf	___fldiv@a
  8942     04C2                     l890:
  8943     04C2  082D               	movf	___fldiv@a+3,w
  8944     04C3  042C               	iorwf	___fldiv@a+2,w
  8945     04C4  042B               	iorwf	___fldiv@a+1,w
  8946     04C5  042A               	iorwf	___fldiv@a,w
  8947     04C6  1D03               	skipz
  8948     04C7  2CC9               	goto	u4721
  8949     04C8  2CCA               	goto	u4720
  8950     04C9                     u4721:
  8951     04C9  2CE1               	goto	l4306
  8952     04CA                     u4720:
  8953     04CA                     l4298:
  8954     04CA  3000               	movlw	0
  8955     04CB  00B1               	movwf	___fldiv@b+3
  8956     04CC  3000               	movlw	0
  8957     04CD  00B0               	movwf	___fldiv@b+2
  8958     04CE  3000               	movlw	0
  8959     04CF  00AF               	movwf	___fldiv@b+1
  8960     04D0  3000               	movlw	0
  8961     04D1  00AE               	movwf	___fldiv@b
  8962     04D2  3080               	movlw	128
  8963     04D3  04B0               	iorwf	___fldiv@b+2,f
  8964     04D4  307F               	movlw	127
  8965     04D5  04B1               	iorwf	___fldiv@b+3,f
  8966     04D6                     l4300:
  8967     04D6  083B               	movf	___fldiv@sign,w
  8968     04D7  04B1               	iorwf	___fldiv@b+3,f
  8969     04D8                     l4302:
  8970     04D8  0831               	movf	___fldiv@b+3,w
  8971     04D9  00AD               	movwf	?___fldiv+3
  8972     04DA  0830               	movf	___fldiv@b+2,w
  8973     04DB  00AC               	movwf	?___fldiv+2
  8974     04DC  082F               	movf	___fldiv@b+1,w
  8975     04DD  00AB               	movwf	?___fldiv+1
  8976     04DE  082E               	movf	___fldiv@b,w
  8977     04DF  00AA               	movwf	?___fldiv
  8978     04E0  2E36               	goto	l892
  8979     04E1                     l4306:
  8980     04E1  0842               	movf	___fldiv@bexp,w
  8981     04E2  1D03               	btfss	3,2
  8982     04E3  2CE5               	goto	u4731
  8983     04E4  2CE6               	goto	u4730
  8984     04E5                     u4731:
  8985     04E5  2CEF               	goto	l4312
  8986     04E6                     u4730:
  8987     04E6                     l4308:
  8988     04E6  3000               	movlw	0
  8989     04E7  00AD               	movwf	?___fldiv+3
  8990     04E8  3000               	movlw	0
  8991     04E9  00AC               	movwf	?___fldiv+2
  8992     04EA  3000               	movlw	0
  8993     04EB  00AB               	movwf	?___fldiv+1
  8994     04EC  3000               	movlw	0
  8995     04ED  00AA               	movwf	?___fldiv
  8996     04EE  2E36               	goto	l892
  8997     04EF                     l4312:
  8998     04EF  0842               	movf	___fldiv@bexp,w
  8999     04F0  00B2               	movwf	??___fldiv
  9000     04F1  01B3               	clrf	??___fldiv+1
  9001     04F2  0833               	movf	??___fldiv+1,w
  9002     04F3  00B5               	movwf	??___fldiv+3
  9003     04F4  0843               	movf	___fldiv@aexp,w
  9004     04F5  0232               	subwf	??___fldiv,w
  9005     04F6  00B4               	movwf	??___fldiv+2
  9006     04F7  1C03               	skipc
  9007     04F8  03B5               	decf	??___fldiv+3,f
  9008     04F9  0834               	movf	??___fldiv+2,w
  9009     04FA  3E7F               	addlw	127
  9010     04FB  00BC               	movwf	___fldiv@new_exp
  9011     04FC  0835               	movf	??___fldiv+3,w
  9012     04FD  1803               	skipnc
  9013     04FE  3E01               	addlw	1
  9014     04FF  3E00               	addlw	0
  9015     0500  00BD               	movwf	___fldiv@new_exp+1
  9016     0501                     l4314:
  9017     0501  0831               	movf	___fldiv@b+3,w
  9018     0502  00BA               	movwf	___fldiv@rem+3
  9019     0503  0830               	movf	___fldiv@b+2,w
  9020     0504  00B9               	movwf	___fldiv@rem+2
  9021     0505  082F               	movf	___fldiv@b+1,w
  9022     0506  00B8               	movwf	___fldiv@rem+1
  9023     0507  082E               	movf	___fldiv@b,w
  9024     0508  00B7               	movwf	___fldiv@rem
  9025     0509                     l4316:
  9026     0509  3000               	movlw	0
  9027     050A  00B1               	movwf	___fldiv@b+3
  9028     050B  3000               	movlw	0
  9029     050C  00B0               	movwf	___fldiv@b+2
  9030     050D  3000               	movlw	0
  9031     050E  00AF               	movwf	___fldiv@b+1
  9032     050F  3000               	movlw	0
  9033     0510  00AE               	movwf	___fldiv@b
  9034     0511                     l4318:
  9035     0511  3000               	movlw	0
  9036     0512  00C1               	movwf	___fldiv@grs+3
  9037     0513  3000               	movlw	0
  9038     0514  00C0               	movwf	___fldiv@grs+2
  9039     0515  3000               	movlw	0
  9040     0516  00BF               	movwf	___fldiv@grs+1
  9041     0517  3000               	movlw	0
  9042     0518  00BE               	movwf	___fldiv@grs
  9043     0519                     l4320:
  9044     0519  01C3               	clrf	___fldiv@aexp
  9045     051A  2D63               	goto	l4340
  9046     051B                     l4322:
  9047     051B  0843               	movf	___fldiv@aexp,w
  9048     051C  1903               	btfsc	3,2
  9049     051D  2D1F               	goto	u4741
  9050     051E  2D20               	goto	u4740
  9051     051F                     u4741:
  9052     051F  2D40               	goto	l4332
  9053     0520                     u4740:
  9054     0520                     l4324:
  9055     0520  3001               	movlw	1
  9056     0521  00B2               	movwf	??___fldiv
  9057     0522                     u4755:
  9058     0522  1003               	clrc
  9059     0523  0DB7               	rlf	___fldiv@rem,f
  9060     0524  0DB8               	rlf	___fldiv@rem+1,f
  9061     0525  0DB9               	rlf	___fldiv@rem+2,f
  9062     0526  0DBA               	rlf	___fldiv@rem+3,f
  9063     0527  0BB2               	decfsz	??___fldiv,f
  9064     0528  2D22               	goto	u4755
  9065     0529  3001               	movlw	1
  9066     052A  00B2               	movwf	??___fldiv
  9067     052B                     u4765:
  9068     052B  1003               	clrc
  9069     052C  0DAE               	rlf	___fldiv@b,f
  9070     052D  0DAF               	rlf	___fldiv@b+1,f
  9071     052E  0DB0               	rlf	___fldiv@b+2,f
  9072     052F  0DB1               	rlf	___fldiv@b+3,f
  9073     0530  0BB2               	decfsz	??___fldiv,f
  9074     0531  2D2B               	goto	u4765
  9075     0532                     l4326:
  9076     0532  1FC1               	btfss	___fldiv@grs+3,7
  9077     0533  2D35               	goto	u4771
  9078     0534  2D36               	goto	u4770
  9079     0535                     u4771:
  9080     0535  2D37               	goto	l4330
  9081     0536                     u4770:
  9082     0536                     l4328:
  9083     0536  142E               	bsf	___fldiv@b,0
  9084     0537                     l4330:
  9085     0537  3001               	movlw	1
  9086     0538  00B2               	movwf	??___fldiv
  9087     0539                     u4785:
  9088     0539  1003               	clrc
  9089     053A  0DBE               	rlf	___fldiv@grs,f
  9090     053B  0DBF               	rlf	___fldiv@grs+1,f
  9091     053C  0DC0               	rlf	___fldiv@grs+2,f
  9092     053D  0DC1               	rlf	___fldiv@grs+3,f
  9093     053E  0BB2               	decfsz	??___fldiv,f
  9094     053F  2D39               	goto	u4785
  9095     0540                     l4332:
  9096     0540  082D               	movf	___fldiv@a+3,w
  9097     0541  023A               	subwf	___fldiv@rem+3,w
  9098     0542  1D03               	skipz
  9099     0543  2D4E               	goto	u4795
  9100     0544  082C               	movf	___fldiv@a+2,w
  9101     0545  0239               	subwf	___fldiv@rem+2,w
  9102     0546  1D03               	skipz
  9103     0547  2D4E               	goto	u4795
  9104     0548  082B               	movf	___fldiv@a+1,w
  9105     0549  0238               	subwf	___fldiv@rem+1,w
  9106     054A  1D03               	skipz
  9107     054B  2D4E               	goto	u4795
  9108     054C  082A               	movf	___fldiv@a,w
  9109     054D  0237               	subwf	___fldiv@rem,w
  9110     054E                     u4795:
  9111     054E  1C03               	skipc
  9112     054F  2D51               	goto	u4791
  9113     0550  2D52               	goto	u4790
  9114     0551                     u4791:
  9115     0551  2D61               	goto	l4338
  9116     0552                     u4790:
  9117     0552                     l4334:
  9118     0552  1741               	bsf	___fldiv@grs+3,6
  9119     0553                     l4336:
  9120     0553  082A               	movf	___fldiv@a,w
  9121     0554  02B7               	subwf	___fldiv@rem,f
  9122     0555  082B               	movf	___fldiv@a+1,w
  9123     0556  1C03               	skipc
  9124     0557  0F2B               	incfsz	___fldiv@a+1,w
  9125     0558  02B8               	subwf	___fldiv@rem+1,f
  9126     0559  082C               	movf	___fldiv@a+2,w
  9127     055A  1C03               	skipc
  9128     055B  0F2C               	incfsz	___fldiv@a+2,w
  9129     055C  02B9               	subwf	___fldiv@rem+2,f
  9130     055D  082D               	movf	___fldiv@a+3,w
  9131     055E  1C03               	skipc
  9132     055F  0F2D               	incfsz	___fldiv@a+3,w
  9133     0560  02BA               	subwf	___fldiv@rem+3,f
  9134     0561                     l4338:
  9135     0561  3001               	movlw	1
  9136     0562  07C3               	addwf	___fldiv@aexp,f
  9137     0563                     l4340:
  9138     0563  301A               	movlw	26
  9139     0564  0243               	subwf	___fldiv@aexp,w
  9140     0565  1C03               	skipc
  9141     0566  2D68               	goto	u4801
  9142     0567  2D69               	goto	u4800
  9143     0568                     u4801:
  9144     0568  2D1B               	goto	l4322
  9145     0569                     u4800:
  9146     0569                     l4342:
  9147     0569  083A               	movf	___fldiv@rem+3,w
  9148     056A  0439               	iorwf	___fldiv@rem+2,w
  9149     056B  0438               	iorwf	___fldiv@rem+1,w
  9150     056C  0437               	iorwf	___fldiv@rem,w
  9151     056D  1903               	skipnz
  9152     056E  2D70               	goto	u4811
  9153     056F  2D71               	goto	u4810
  9154     0570                     u4811:
  9155     0570  2D90               	goto	l4356
  9156     0571                     u4810:
  9157     0571                     l4344:
  9158     0571  143E               	bsf	___fldiv@grs,0
  9159     0572  2D90               	goto	l4356
  9160     0573                     l4346:
  9161     0573  3001               	movlw	1
  9162     0574  00B2               	movwf	??___fldiv
  9163     0575                     u4825:
  9164     0575  1003               	clrc
  9165     0576  0DAE               	rlf	___fldiv@b,f
  9166     0577  0DAF               	rlf	___fldiv@b+1,f
  9167     0578  0DB0               	rlf	___fldiv@b+2,f
  9168     0579  0DB1               	rlf	___fldiv@b+3,f
  9169     057A  0BB2               	decfsz	??___fldiv,f
  9170     057B  2D75               	goto	u4825
  9171     057C                     l4348:
  9172     057C  1FC1               	btfss	___fldiv@grs+3,7
  9173     057D  2D7F               	goto	u4831
  9174     057E  2D80               	goto	u4830
  9175     057F                     u4831:
  9176     057F  2D81               	goto	l4352
  9177     0580                     u4830:
  9178     0580                     l4350:
  9179     0580  142E               	bsf	___fldiv@b,0
  9180     0581                     l4352:
  9181     0581  3001               	movlw	1
  9182     0582  00B2               	movwf	??___fldiv
  9183     0583                     u4845:
  9184     0583  1003               	clrc
  9185     0584  0DBE               	rlf	___fldiv@grs,f
  9186     0585  0DBF               	rlf	___fldiv@grs+1,f
  9187     0586  0DC0               	rlf	___fldiv@grs+2,f
  9188     0587  0DC1               	rlf	___fldiv@grs+3,f
  9189     0588  0BB2               	decfsz	??___fldiv,f
  9190     0589  2D83               	goto	u4845
  9191     058A                     l4354:
  9192     058A  30FF               	movlw	255
  9193     058B  07BC               	addwf	___fldiv@new_exp,f
  9194     058C  1803               	skipnc
  9195     058D  0ABD               	incf	___fldiv@new_exp+1,f
  9196     058E  30FF               	movlw	255
  9197     058F  07BD               	addwf	___fldiv@new_exp+1,f
  9198     0590                     l4356:
  9199     0590  1FB0               	btfss	___fldiv@b+2,7
  9200     0591  2D93               	goto	u4851
  9201     0592  2D94               	goto	u4850
  9202     0593                     u4851:
  9203     0593  2D73               	goto	l4346
  9204     0594                     u4850:
  9205     0594                     l4358:
  9206     0594  01C3               	clrf	___fldiv@aexp
  9207     0595                     l4360:
  9208     0595  1FC1               	btfss	___fldiv@grs+3,7
  9209     0596  2D98               	goto	u4861
  9210     0597  2D99               	goto	u4860
  9211     0598                     u4861:
  9212     0598  2DB5               	goto	l4368
  9213     0599                     u4860:
  9214     0599                     l4362:
  9215     0599  30FF               	movlw	255
  9216     059A  053E               	andwf	___fldiv@grs,w
  9217     059B  00B2               	movwf	??___fldiv
  9218     059C  30FF               	movlw	255
  9219     059D  053F               	andwf	___fldiv@grs+1,w
  9220     059E  00B3               	movwf	??___fldiv+1
  9221     059F  30FF               	movlw	255
  9222     05A0  0540               	andwf	___fldiv@grs+2,w
  9223     05A1  00B4               	movwf	??___fldiv+2
  9224     05A2  307F               	movlw	127
  9225     05A3  0541               	andwf	___fldiv@grs+3,w
  9226     05A4  00B5               	movwf	??___fldiv+3
  9227     05A5  0835               	movf	??___fldiv+3,w
  9228     05A6  0434               	iorwf	??___fldiv+2,w
  9229     05A7  0433               	iorwf	??___fldiv+1,w
  9230     05A8  0432               	iorwf	??___fldiv,w
  9231     05A9  1903               	skipnz
  9232     05AA  2DAC               	goto	u4871
  9233     05AB  2DAD               	goto	u4870
  9234     05AC                     u4871:
  9235     05AC  2DB0               	goto	l906
  9236     05AD                     u4870:
  9237     05AD                     l4364:
  9238     05AD  3001               	movlw	1
  9239     05AE  00C3               	movwf	___fldiv@aexp
  9240     05AF  2DB5               	goto	l4368
  9241     05B0                     l906:
  9242     05B0  1C2E               	btfss	___fldiv@b,0
  9243     05B1  2DB3               	goto	u4881
  9244     05B2  2DB4               	goto	u4880
  9245     05B3                     u4881:
  9246     05B3  2DB5               	goto	l4368
  9247     05B4                     u4880:
  9248     05B4  2DAD               	goto	l4364
  9249     05B5                     l4368:
  9250     05B5  0843               	movf	___fldiv@aexp,w
  9251     05B6  1903               	btfsc	3,2
  9252     05B7  2DB9               	goto	u4891
  9253     05B8  2DBA               	goto	u4890
  9254     05B9                     u4891:
  9255     05B9  2DEB               	goto	l4378
  9256     05BA                     u4890:
  9257     05BA                     l4370:
  9258     05BA  3001               	movlw	1
  9259     05BB  07AE               	addwf	___fldiv@b,f
  9260     05BC  3000               	movlw	0
  9261     05BD  1803               	skipnc
  9262     05BE  3001               	movlw	1
  9263     05BF  07AF               	addwf	___fldiv@b+1,f
  9264     05C0  3000               	movlw	0
  9265     05C1  1803               	skipnc
  9266     05C2  3001               	movlw	1
  9267     05C3  07B0               	addwf	___fldiv@b+2,f
  9268     05C4  3000               	movlw	0
  9269     05C5  1803               	skipnc
  9270     05C6  3001               	movlw	1
  9271     05C7  07B1               	addwf	___fldiv@b+3,f
  9272     05C8                     l4372:
  9273     05C8  1C31               	btfss	___fldiv@b+3,0
  9274     05C9  2DCB               	goto	u4901
  9275     05CA  2DCC               	goto	u4900
  9276     05CB                     u4901:
  9277     05CB  2DEB               	goto	l4378
  9278     05CC                     u4900:
  9279     05CC                     l4374:
  9280     05CC  082E               	movf	___fldiv@b,w
  9281     05CD  00B2               	movwf	??___fldiv
  9282     05CE  082F               	movf	___fldiv@b+1,w
  9283     05CF  00B3               	movwf	??___fldiv+1
  9284     05D0  0830               	movf	___fldiv@b+2,w
  9285     05D1  00B4               	movwf	??___fldiv+2
  9286     05D2  0831               	movf	___fldiv@b+3,w
  9287     05D3  00B5               	movwf	??___fldiv+3
  9288     05D4  3001               	movlw	1
  9289     05D5  00B6               	movwf	??___fldiv+4
  9290     05D6                     u4915:
  9291     05D6  0D35               	rlf	??___fldiv+3,w
  9292     05D7  0CB5               	rrf	??___fldiv+3,f
  9293     05D8  0CB4               	rrf	??___fldiv+2,f
  9294     05D9  0CB3               	rrf	??___fldiv+1,f
  9295     05DA  0CB2               	rrf	??___fldiv,f
  9296     05DB                     u4910:
  9297     05DB  0BB6               	decfsz	??___fldiv+4,f
  9298     05DC  2DD6               	goto	u4915
  9299     05DD  0835               	movf	??___fldiv+3,w
  9300     05DE  00B1               	movwf	___fldiv@b+3
  9301     05DF  0834               	movf	??___fldiv+2,w
  9302     05E0  00B0               	movwf	___fldiv@b+2
  9303     05E1  0833               	movf	??___fldiv+1,w
  9304     05E2  00AF               	movwf	___fldiv@b+1
  9305     05E3  0832               	movf	??___fldiv,w
  9306     05E4  00AE               	movwf	___fldiv@b
  9307     05E5                     l4376:
  9308     05E5  3001               	movlw	1
  9309     05E6  07BC               	addwf	___fldiv@new_exp,f
  9310     05E7  1803               	skipnc
  9311     05E8  0ABD               	incf	___fldiv@new_exp+1,f
  9312     05E9  3000               	movlw	0
  9313     05EA  07BD               	addwf	___fldiv@new_exp+1,f
  9314     05EB                     l4378:
  9315     05EB  083D               	movf	___fldiv@new_exp+1,w
  9316     05EC  3A80               	xorlw	128
  9317     05ED  00FF               	movwf	btemp+1
  9318     05EE  3080               	movlw	128
  9319     05EF  027F               	subwf	btemp+1,w
  9320     05F0  1D03               	skipz
  9321     05F1  2DF4               	goto	u4925
  9322     05F2  30FF               	movlw	255
  9323     05F3  023C               	subwf	___fldiv@new_exp,w
  9324     05F4                     u4925:
  9325     05F4  1C03               	skipc
  9326     05F5  2DF7               	goto	u4921
  9327     05F6  2DF8               	goto	u4920
  9328     05F7                     u4921:
  9329     05F7  2E06               	goto	l4382
  9330     05F8                     u4920:
  9331     05F8                     l4380:
  9332     05F8  30FF               	movlw	255
  9333     05F9  1283               	bcf	3,5	;RP0=0, select bank0
  9334     05FA  1303               	bcf	3,6	;RP1=0, select bank0
  9335     05FB  00BC               	movwf	___fldiv@new_exp
  9336     05FC  3000               	movlw	0
  9337     05FD  00BD               	movwf	___fldiv@new_exp+1
  9338     05FE  3000               	movlw	0
  9339     05FF  00B1               	movwf	___fldiv@b+3
  9340     0600  3000               	movlw	0
  9341     0601  00B0               	movwf	___fldiv@b+2
  9342     0602  3000               	movlw	0
  9343     0603  00AF               	movwf	___fldiv@b+1
  9344     0604  3000               	movlw	0
  9345     0605  00AE               	movwf	___fldiv@b
  9346     0606                     l4382:
  9347     0606  1283               	bcf	3,5	;RP0=0, select bank0
  9348     0607  1303               	bcf	3,6	;RP1=0, select bank0
  9349     0608  083D               	movf	___fldiv@new_exp+1,w
  9350     0609  3A80               	xorlw	128
  9351     060A  00FF               	movwf	btemp+1
  9352     060B  3080               	movlw	128
  9353     060C  027F               	subwf	btemp+1,w
  9354     060D  1D03               	skipz
  9355     060E  2E11               	goto	u4935
  9356     060F  3001               	movlw	1
  9357     0610  023C               	subwf	___fldiv@new_exp,w
  9358     0611                     u4935:
  9359     0611  1803               	skipnc
  9360     0612  2E14               	goto	u4931
  9361     0613  2E15               	goto	u4930
  9362     0614                     u4931:
  9363     0614  2E22               	goto	l912
  9364     0615                     u4930:
  9365     0615                     l4384:
  9366     0615  1283               	bcf	3,5	;RP0=0, select bank0
  9367     0616  1303               	bcf	3,6	;RP1=0, select bank0
  9368     0617  01BC               	clrf	___fldiv@new_exp
  9369     0618  01BD               	clrf	___fldiv@new_exp+1
  9370     0619                     l4386:
  9371     0619  3000               	movlw	0
  9372     061A  00B1               	movwf	___fldiv@b+3
  9373     061B  3000               	movlw	0
  9374     061C  00B0               	movwf	___fldiv@b+2
  9375     061D  3000               	movlw	0
  9376     061E  00AF               	movwf	___fldiv@b+1
  9377     061F  3000               	movlw	0
  9378     0620  00AE               	movwf	___fldiv@b
  9379     0621                     l4388:
  9380     0621  01BB               	clrf	___fldiv@sign
  9381     0622                     l912:
  9382     0622  1283               	bcf	3,5	;RP0=0, select bank0
  9383     0623  1303               	bcf	3,6	;RP1=0, select bank0
  9384     0624  083C               	movf	___fldiv@new_exp,w
  9385     0625  00C2               	movwf	___fldiv@bexp
  9386     0626                     l4390:
  9387     0626  1C42               	btfss	___fldiv@bexp,0
  9388     0627  2E29               	goto	u4941
  9389     0628  2E2A               	goto	u4940
  9390     0629                     u4941:
  9391     0629  2E2C               	goto	l4394
  9392     062A                     u4940:
  9393     062A                     l4392:
  9394     062A  17B0               	bsf	___fldiv@b+2,7
  9395     062B  2E2E               	goto	l914
  9396     062C                     l4394:
  9397     062C  307F               	movlw	127
  9398     062D  05B0               	andwf	___fldiv@b+2,f
  9399     062E                     l914:
  9400     062E  0842               	movf	___fldiv@bexp,w
  9401     062F  00B2               	movwf	??___fldiv
  9402     0630  1003               	clrc
  9403     0631  0C32               	rrf	??___fldiv,w
  9404     0632  00B1               	movwf	___fldiv@b+3
  9405     0633  083B               	movf	___fldiv@sign,w
  9406     0634  04B1               	iorwf	___fldiv@b+3,f
  9407     0635  2CD8               	goto	l4302
  9408     0636                     l892:
  9409     0636  0008               	return
  9410     0637                     __end_of___fldiv:
  9411                           
  9412                           	psect	text46
  9413     17CA                     __ptext46:	
  9414 ;; *************** function _isr *****************
  9415 ;; Defined at:
  9416 ;;		line 7 in file "isr.c"
  9417 ;; Parameters:    Size  Location     Type
  9418 ;;		None
  9419 ;; Auto vars:     Size  Location     Type
  9420 ;;		None
  9421 ;; Return value:  Size  Location     Type
  9422 ;;                  1    wreg      void 
  9423 ;; Registers used:
  9424 ;;		wreg, status,2, status,0
  9425 ;; Tracked objects:
  9426 ;;		On entry : 0/0
  9427 ;;		On exit  : 0/0
  9428 ;;		Unchanged: 0/0
  9429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9430 ;;      Params:         0       0       0       0       0
  9431 ;;      Locals:         0       0       0       0       0
  9432 ;;      Temps:          2       0       0       0       0
  9433 ;;      Totals:         2       0       0       0       0
  9434 ;;Total ram usage:        2 bytes
  9435 ;; Hardware stack levels used: 1
  9436 ;; This function calls:
  9437 ;;		Nothing
  9438 ;; This function is called by:
  9439 ;;		Interrupt level 1
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443     17CA                     _isr:	
  9444                           ;psect for function _isr
  9445                           
  9446     17CA                     i1l3382:
  9447                           
  9448                           ;isr.c: 9:     static unsigned int count = 0;;isr.c: 11:     if(TMR2IF)
  9449     17CA  1283               	bcf	3,5	;RP0=0, select bank0
  9450     17CB  1303               	bcf	3,6	;RP1=0, select bank0
  9451     17CC  1C8C               	btfss	12,1	;volatile
  9452     17CD  2FCF               	goto	u347_21
  9453     17CE  2FD0               	goto	u347_20
  9454     17CF                     u347_21:
  9455     17CF  2FF9               	goto	i1l434
  9456     17D0                     u347_20:
  9457     17D0                     i1l3384:
  9458                           
  9459                           ;isr.c: 12:     {;isr.c: 14:         if(++count == 1250)
  9460     17D0  3001               	movlw	1
  9461     17D1  1683               	bsf	3,5	;RP0=1, select bank1
  9462     17D2  1303               	bcf	3,6	;RP1=0, select bank1
  9463     17D3  07A3               	addwf	isr@count^(0+128),f
  9464     17D4  1803               	skipnc
  9465     17D5  0AA4               	incf	(isr@count+1)^(0+128),f
  9466     17D6  3000               	movlw	0
  9467     17D7  07A4               	addwf	(isr@count+1)^(0+128),f
  9468     17D8  30E2               	movlw	226
  9469     17D9  0623               	xorwf	isr@count^(0+128),w
  9470     17DA  3004               	movlw	4
  9471     17DB  1903               	skipnz
  9472     17DC  0624               	xorwf	(isr@count+1)^(0+128),w
  9473     17DD  1D03               	btfss	3,2
  9474     17DE  2FE0               	goto	u348_21
  9475     17DF  2FE1               	goto	u348_20
  9476     17E0                     u348_21:
  9477     17E0  2FF6               	goto	i1l3396
  9478     17E1                     u348_20:
  9479     17E1                     i1l3386:
  9480                           
  9481                           ;isr.c: 15:         {;isr.c: 16:             if(sec != 0)
  9482     17E1  1283               	bcf	3,5	;RP0=0, select bank0
  9483     17E2  1303               	bcf	3,6	;RP1=0, select bank0
  9484     17E3  0858               	movf	_sec,w
  9485     17E4  1903               	btfsc	3,2
  9486     17E5  2FE7               	goto	u349_21
  9487     17E6  2FE8               	goto	u349_20
  9488     17E7                     u349_21:
  9489     17E7  2FEB               	goto	i1l3390
  9490     17E8                     u349_20:
  9491     17E8                     i1l3388:
  9492                           
  9493                           ;isr.c: 17:                 sec--;
  9494     17E8  3001               	movlw	1
  9495     17E9  02D8               	subwf	_sec,f
  9496     17EA  2FF2               	goto	i1l3394
  9497     17EB                     i1l3390:
  9498     17EB  0859               	movf	_return_time,w
  9499     17EC  1903               	btfsc	3,2
  9500     17ED  2FEF               	goto	u350_21
  9501     17EE  2FF0               	goto	u350_20
  9502     17EF                     u350_21:
  9503     17EF  2FF2               	goto	i1l3394
  9504     17F0                     u350_20:
  9505     17F0                     i1l3392:
  9506                           
  9507                           ;isr.c: 19:                 return_time--;
  9508     17F0  3001               	movlw	1
  9509     17F1  02D9               	subwf	_return_time,f
  9510     17F2                     i1l3394:
  9511                           
  9512                           ;isr.c: 20:             count = 0;
  9513     17F2  1683               	bsf	3,5	;RP0=1, select bank1
  9514     17F3  1303               	bcf	3,6	;RP1=0, select bank1
  9515     17F4  01A3               	clrf	isr@count^(0+128)
  9516     17F5  01A4               	clrf	(isr@count+1)^(0+128)
  9517     17F6                     i1l3396:
  9518                           
  9519                           ;isr.c: 23:         TMR2IF = 0;
  9520     17F6  1283               	bcf	3,5	;RP0=0, select bank0
  9521     17F7  1303               	bcf	3,6	;RP1=0, select bank0
  9522     17F8  108C               	bcf	12,1	;volatile
  9523     17F9                     i1l434:
  9524     17F9  0871               	movf	??_isr+1,w
  9525     17FA  008A               	movwf	10
  9526     17FB  0E70               	swapf	??_isr,w
  9527     17FC  0083               	movwf	3
  9528     17FD  0EFE               	swapf	btemp,f
  9529     17FE  0E7E               	swapf	btemp,w
  9530     17FF  0009               	retfie
  9531     1800                     __end_of_isr:
  9532     0002                     ___latbits      equ	2
  9533     007E                     btemp           set	126	;btemp
  9534     007E                     wtemp0          set	126
  9535                           
  9536                           	psect	intentry
  9537     0004                     __pintentry:	
  9538                           ;incstack = 0
  9539                           ; Regs used in _isr: [wreg+status,2+status,0]
  9540                           
  9541     0004                     interrupt_function:
  9542     007E                     saved_w         set	btemp
  9543     0004  00FE               	movwf	btemp
  9544     0005  0E03               	swapf	3,w
  9545     0006  00F0               	movwf	??_isr
  9546     0007  080A               	movf	10,w
  9547     0008  00F1               	movwf	??_isr+1
  9548     0009  160A  118A  2FCA   	ljmp	_isr
  9549                           
  9550                           	psect	idloc
  9551                           
  9552                           ;Config register IDLOC0 @ 0x2000
  9553                           ;	unspecified, using default values
  9554     2000                     	org	8192
  9555     2000  3FFF               	dw	16383
  9556                           
  9557                           ;Config register IDLOC1 @ 0x2001
  9558                           ;	unspecified, using default values
  9559     2001                     	org	8193
  9560     2001  3FFF               	dw	16383
  9561                           
  9562                           ;Config register IDLOC2 @ 0x2002
  9563                           ;	unspecified, using default values
  9564     2002                     	org	8194
  9565     2002  3FFF               	dw	16383
  9566                           
  9567                           ;Config register IDLOC3 @ 0x2003
  9568                           ;	unspecified, using default values
  9569     2003                     	org	8195
  9570     2003  3FFF               	dw	16383
  9571                           
  9572                           	psect	config
  9573                           
  9574                           ;Config register CONFIG @ 0x2007
  9575                           ;	Oscillator Selection bits
  9576                           ;	FOSC = 0x3, unprogrammed default
  9577                           ;	Watchdog Timer Enable bit
  9578                           ;	WDTE = OFF, WDT disabled
  9579                           ;	Power-up Timer Enable bit
  9580                           ;	PWRTE = 0x1, unprogrammed default
  9581                           ;	Brown-out Reset Enable bit
  9582                           ;	BOREN = 0x1, unprogrammed default
  9583                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  9584                           ;	LVP = 0x1, unprogrammed default
  9585                           ;	Data EEPROM Memory Code Protection bit
  9586                           ;	CPD = 0x1, unprogrammed default
  9587                           ;	Flash Program Memory Write Enable bits
  9588                           ;	WRT = 0x3, unprogrammed default
  9589                           ;	In-Circuit Debugger Mode bit
  9590                           ;	DEBUG = 0x1, unprogrammed default
  9591                           ;	Flash Program Memory Code Protection bit
  9592                           ;	CP = 0x1, unprogrammed default
  9593     2007                     	org	8199
  9594     2007  3FFB               	dw	16379

Data Sizes:
    Strings     325
    Constant    0
    Data        25
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     50      60
    BANK1            80      0      63
    BANK3            96     22      22
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR unsigned char  size(2) Largest target is 18
		 -> main@event(BANK3[3]), STR_10(CODE[9]), STR_11(CODE[10]), STR_12(CODE[13]), 
		 -> STR_13(CODE[9]), STR_14(CODE[15]), STR_15(CODE[15]), STR_16(CODE[15]), 
		 -> STR_17(CODE[16]), STR_18(CODE[9]), STR_19(CODE[5]), STR_20(CODE[15]), 
		 -> STR_21(CODE[13]), STR_22(CODE[15]), STR_23(CODE[10]), STR_24(CODE[12]), 
		 -> STR_25(CODE[11]), STR_27(CODE[17]), STR_28(CODE[17]), STR_29(CODE[18]), 
		 -> STR_30(CODE[18]), STR_31(CODE[17]), STR_32(CODE[14]), STR_33(CODE[17]), 
		 -> STR_34(CODE[7]), STR_9(CODE[15]), 

    display_dashboard@event	PTR unsigned char  size(1) Largest target is 3
		 -> main@event(BANK3[3]), 

    log_car_event@event	PTR unsigned char  size(1) Largest target is 3
		 -> main@event(BANK3[3]), 

    main@F1244	PTR unsigned char [6] size(2) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), 

    main@gear	PTR unsigned char [6] size(2) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), 

    menu	PTR unsigned char [5] size(2) Largest target is 15
		 -> STR_10(CODE[9]), STR_11(CODE[10]), STR_12(CODE[13]), STR_13(CODE[9]), 
		 -> STR_14(CODE[15]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 3
		 -> main@event(BANK3[3]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 11
		 -> change_password@new_pwd(BANK1[9]), log(BANK1[11]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 3
		 -> main@event(BANK3[3]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 3
		 -> main@event(BANK3[3]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_8(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 9
		 -> change_password@new_pwd(BANK1[9]), login@stored_pwd(BANK0[4]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 9
		 -> change_password@new_pwd(BANK1[9]), login@user_password(BANK1[4]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 11
		 -> change_password@new_pwd(BANK1[9]), log(BANK1[11]), 

    strncpy@d	PTR unsigned char  size(1) Largest target is 11
		 -> change_password@new_pwd(BANK1[9]), log(BANK1[11]), 

    strncpy@s	PTR const unsigned char  size(2) Largest target is 7
		 -> main@event(BANK3[3]), STR_26(CODE[5]), time(BANK1[7]), 

    write_str_at24c04@data	PTR unsigned char  size(2) Largest target is 11
		 -> change_password@new_pwd(BANK1[9]), log(BANK1[11]), STR_7(CODE[5]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _main->_write_str_at24c04
    _login->___awdiv
    _read_at24c04->_i2c_read
    _log_car_event->___awdiv
    _log_car_event->_strncpy
    _record_log->_write_str_at24c04
    _init_i2c->___lldiv
    _init_ds1307->_read_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _display_dashboard->___awdiv
    _get_time->_read_ds1307
    _read_ds1307->_i2c_read
    _clear_log->_clcd_print
    _clear_clcd_screen->_clcd_write
    _change_password->_strncpy
    _change_password->_write_str_at24c04
    _write_str_at24c04->_write_at24c04
    _write_at24c04->_i2c_write
    _clcd_putch->___awdiv
    _clcd_print->_clcd_write
    ___xxtofl->_read_adc
    ___fltol->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _view_log->_clcd_putch
    _menu_screen->_clcd_putch
    _login->_clcd_putch
    _log_car_event->_record_log
    _init_config->_init_i2c
    _init_i2c->___lldiv
    _display_dashboard->_clcd_putch
    _display_time->_clcd_putch
    _change_password->_clcd_putch
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   18977
                                             46 BANK0      4     4      0
                                              0 BANK3     22    22      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                    _change_password
                         _clcd_print
                         _clcd_write
                  _clear_clcd_screen
                          _clear_log
                  _display_dashboard
                        _init_config
                      _log_car_event
                              _login
                        _menu_screen
                           _read_adc
                _read_digital_keypad
                             _strcpy
                           _view_log
                  _write_str_at24c04
 ---------------------------------------------------------------------------------
 (1) _view_log                                             6     5      1    1955
                                              2 BANK0      6     5      1
                            ___awmod
                             ___bmul
                         _clcd_print
                         _clcd_putch
                       _read_at24c04
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     3      3     121
                                              2 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  1     1      0     161
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             4     2      2      34
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _menu_screen                                          4     3      1    1142
                                              2 BANK0      4     3      1
                         _clcd_print
                         _clcd_putch
                  _clear_clcd_screen
 ---------------------------------------------------------------------------------
 (1) _login                                               10     9      1    2953
                                              2 BANK0     10     9      1
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                  _clear_clcd_screen
                       _read_at24c04
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _read_at24c04                                         2     2      0     209
                                              4 COMMON     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _log_car_event                                        4     2      2    1941
                                              1 BANK0      4     2      2
                            ___awdiv
                            ___awmod
                           _get_time
                         _record_log
                            _strncpy
 ---------------------------------------------------------------------------------
 (2) _record_log                                           1     1      0     466
                                              0 BANK0      1     1      0
                             ___bmul
                  _write_str_at24c04
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     177
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     849
                           _init_adc
                          _init_clcd
                _init_digital_keypad
                        _init_ds1307
                           _init_i2c
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             8     4      4     281
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     247
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     374
                                              6 COMMON     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     128
                                              3 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     194
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     194
                                              6 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_dashboard                                    4     2      2    2428
                                              2 BANK0      4     2      2
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                       _display_time
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0     589
                         _clcd_putch
                           _get_time
 ---------------------------------------------------------------------------------
 (2) _get_time                                             1     1      0     209
                                              6 COMMON     1     1      0
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0     209
                                              4 COMMON     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             2     2      0      81
                                              2 COMMON     2     2      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     457
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     463
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            3     3      0     634
                                              0 BANK0      3     3      0
                         _clcd_print
                  _clear_clcd_screen
 ---------------------------------------------------------------------------------
 (2) _clear_clcd_screen                                    2     2      0     194
                                              6 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _change_password                                      6     3      3    1841
                                              2 BANK0      6     3      3
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                            _strncmp
                            _strncpy
                  _write_str_at24c04
 ---------------------------------------------------------------------------------
 (1) _write_str_at24c04                                    3     1      2     255
                                              7 COMMON     3     1      2
                      _write_at24c04
 ---------------------------------------------------------------------------------
 (2) _write_at24c04                                        4     3      1     128
                                              3 COMMON     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      47
                                              2 COMMON     1     1      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_wait_for_idle                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     3      5     229
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              6     2      4     275
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1     380
                                              0 BANK0      2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3     440
                                              6 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           4     3      1     194
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     511
                                              6 COMMON     4     0      4
                                              0 BANK0     10    10      0
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     340
                                             36 BANK0     10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1692
                                             10 BANK0     26    18      8
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
       _read_adc (ARG)
     _read_adc (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
     _read_adc (ARG)
   ___xxtofl
   _change_password
     _clcd_print
       _clcd_write
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
       _clcd_write (ARG)
     _clcd_write
     _strncmp
     _strncpy
     _write_str_at24c04
       _write_at24c04
         _i2c_start
           _i2c_wait_for_idle
         _i2c_stop
           _i2c_wait_for_idle
         _i2c_write
           _i2c_wait_for_idle
   _clcd_print
   _clcd_write
   _clear_clcd_screen
     _clcd_write
   _clear_log
     _clcd_print
     _clear_clcd_screen
   _display_dashboard
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _display_time
       _clcd_putch
       _get_time
         _read_ds1307
           _i2c_read
             _i2c_wait_for_idle
           _i2c_rep_start
             _i2c_start
             _i2c_stop
           _i2c_start
           _i2c_stop
           _i2c_write
   _init_config
     _init_adc
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_digital_keypad
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
       ___lldiv
     _init_timer2
   _log_car_event
     ___awdiv
     ___awmod
     _get_time
     _record_log
       ___bmul
       _write_str_at24c04
     _strncpy
   _login
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _clear_clcd_screen
     _read_at24c04
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_write
     _strncmp
   _menu_screen
     _clcd_print
     _clcd_putch
     _clear_clcd_screen
   _read_adc
   _read_digital_keypad
   _strcpy
   _view_log
     ___awmod
     ___bmul
     _clcd_print
     _clcd_putch
     _read_at24c04
   _write_str_at24c04

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96     22      22     22.9%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      63     78.8%
BITBANK1            80      0       0      0.0%
BANK0               80     50      60     75.0%
BITBANK0            80      0       0      0.0%
COMMON              14     10      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     157      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Nov 19 22:14:14 2024

                   ___fldiv@aexp 0043                     ___fldiv@bexp 0042                                pc 0002  
                   ___fldiv@sign 003B                   ___bmul@product 0073                   clcd_print@addr 0078  
                             l20 0C41                               l23 1555                               l32 1797  
                             l17 0985                               l26 15D2                               l52 1710  
                             l55 1609                               l49 1585                               l90 1562  
                             l84 17C9                               l93 152B                               l87 1556  
                             l96 154A                               _GO 00FA                               l99 1534  
                   ___awdiv@sign 0077                               fsr 0004                              l102 1625  
                            l104 162A                              l107 153F                              l221 151A  
                            l302 0B19                              l224 1589                              l313 046C  
                            l410 16BA                              l234 1513                              l227 1597  
                            l180 014B                              l325 03FC                              l333 0EEE  
                            l173 0179                              l158 173B                              l182 0155  
                            l407 1693                              l247 0CA6                              l191 01D1  
                            l183 015D                              l416 16E5                              l184 0160  
                            l345 0FFF                              l193 01EC                              l185 0163  
                            l372 07AD                              l356 1768                              l292 0B7B  
                            l295 0A68                              l447 094F                              l392 1573  
                            l289 07FA                              l299 166D                              l734 0D6D  
                            l727 0D82                              l559 15AA                              l912 0622  
                            l737 0D82                              l569 0D0C                              l914 062E  
                            l906 05B0                              l686 0BDE                              l890 04C2  
                            l699 0ABF                              l892 0636                              l980 0DE6  
                            l974 0DA7                              l975 0DB8                              l976 0E38  
                            l987 0E02                              l995 164B                              _GIE 005F  
                            l988 0E0E                              l999 0A14                              _RE1 0049  
                            _RE2 004A                              _PR2 0092                              _PEN 048A  
                            _SEN 0488                    ?_display_time 0070                              _log 00A7  
                            _sec 0058                              _isr 17CA                   clcd_putch@addr 0020  
                            fsr0 0004                   clcd_putch@data 0021                              indf 0000  
                   ___awmod@sign 0077               view_log@reset_flag 0022               log_car_event@event 0021  
             log_car_event@speed 0022       change_password@pwd_changed 00A6                     ___fltol@exp1 004D  
                           l1014 09C9                             l4000 0E68            ??_read_digital_keypad 0072  
                           l4002 0E6B                             l4100 0653                             l4020 0EB9  
                           l4004 0E71                             l4012 0E80                             l4110 066F  
                           l4102 0662                             l4022 0EC1                             l4014 0E86  
                           l4006 0E76                             l4030 0EF2                             l4200 07A1  
                           l4120 067A                             l4104 0663                             l4024 0ED6  
                           l4016 0E8E                             l4008 0E7B                             l4040 0F0D  
                           l4032 0EFD                             l4122 0680                             l4130 06A6  
                           l4114 0671                             l4106 0666                             l4026 0EEB  
                           l4018 0EA3                             l4050 0F1F                             l4034 0F05  
                           l4300 04D6                             l4220 0D0D                             l4140 06CE  
                           l4132 06AC                             l4124 068B                             l4116 0678  
                           l4108 066A                             l3500 0BFE                             l4060 0F34  
                           l4052 0F25                             l4044 0F0F                             l4036 0F06  
                           l4302 04D8                             l4230 0D35                             l4222 0D18  
                           l3430 155C                             l4150 06ED                             l4142 06D8  
                           l4134 06B2                             l4126 0692                             l3510 0C20  
                           l3502 0C03                             l4070 0F43                             l4062 0F36  
                           l4046 0F15                             l4054 0F27                             l4038 0F08  
                           l4320 0519                             l4312 04EF                             l4232 0D3D  
                           l4400 0D86                             l3600 1787                             l3432 1523  
                           l3440 1536                             l4160 0710                             l4152 06F3  
                           l4144 06DE                             l4136 06BD                             l4128 069C  
                           l3512 0C25                             l3504 0C0A                             l3520 15ED  
                           l4072 0F4F                             l4064 0F42                             l4056 0F2D  
                           l4048 0F17                             l4330 0537                             l4322 051B  
                           l4314 0501                             l4306 04E1                             l4250 0D62  
                           l4242 0D4B                             l4234 0D3F                             l4226 0D21  
                           l4402 0D8B                             l3434 1528                             l3442 153B  
                           l3530 16D5                             l3522 16BC                             l4162 0714  
                           l4154 06FF                             l4170 0735                             l4146 06E7  
                           l4138 06C4                             l4090 175A                             l4082 173C  
                           l3450 160B                             l3514 0C35                             l3506 0C0D  
                           l3602 1574                             l3610 179B                             l4074 0F53  
                           l4058 0F32                             l4324 0520                             l4332 0540  
                           l4340 0563                             l4316 0509                             l4308 04E6  
                           l4260 0473                             l4252 0D72                             l4236 0D43  
                           l4244 0D5B                             l4228 0D34                             l4420 0DDD  
                           l4412 0DBB                             l4404 0D8F                             l3428 1556  
                           l3436 152C                             l3444 153F                             l3524 16BD  
                           l4180 075D                             l4172 073B                             l4164 071A  
                           l4156 0705                             l4148 06E9                             l4092 0637  
                           l3620 1563                             l4084 173F                             l3700 0B9E  
                           l3460 1629                             l3452 1610                             l3540 07E5  
                           l3532 07AE                             l3516 0C3C                             l3508 0C14  
                           l3604 157B                             l3612 17C6                             l4076 0F59  
                           l4500 0133                             l4350 0580                             l4342 0569  
                           l4334 0552                             l4326 0532                             l4318 0511  
                           l4270 0486                             l4262 0477                             l4254 0D77  
                           l4430 0E10                             l4422 0DED                             l4414 0DC6  
                           l4406 0D9F                             l3470 095F                             l3518 15C1  
                           l3438 1531                             l3526 16CD                             l4190 078D  
                           l4182 0764                             l4174 074E                             l4158 070E  
                           l4094 0641                             l3622 156A                             l4086 1744  
                           l3710 0BC2                             l3702 0BA5                             l3454 1618  
                           l3542 07E9                             l3534 07C9                             l3614 150E  
                           l3606 157D                             l3550 159A                             l3630 1655  
                           l4078 0FFE                             l4510 014F                             l4502 013A  
                           l4360 0595                             l4352 0581                             l4344 0571  
                           l4336 0553                             l4328 0536                             l4280 049C  
                           l4272 048E                             l4264 047B                             l4256 046D  
                           l4432 0E26                             l4424 0DF8                             l4416 0DCD  
                           l4408 0DAF                             l3480 0979                             l3472 0964  
                           l3464 0951                             l3640 098F                             l3528 16D3  
                           l4184 076F                             l4176 0751                             l4168 0726  
                           l4096 0642                             l4088 174F                             l3720 0BDA  
                           l3712 0BC3                             l3704 0BA7                             l3456 161C  
                           l3448 1540                             l3544 07F5                             l3536 07D5  
                           l3624 0B1A                             l3616 1514                             l3608 1798  
                           l3552 159E                             l3632 1661                             l3800 0C64  
                           l4504 013E                             l4370 05BA                             l4362 0599  
                           l4354 058A                             l4346 0573                             l4338 0561  
                           l4290 04AF                             l4282 04A0                             l4274 048F  
                           l4266 047C                             l4258 0471                             l4434 0E2B  
                           l4426 0DFC                             l4418 0DCF                             l3482 097C  
                           l3474 0967                             l3466 095B                             l3650 09BB  
                           l3490 1695                             l4186 077A                             l4178 075B  
                           l4098 064C                             l3714 0BCA                             l3706 0BAB  
                           l3730 0A73                             l3458 1621                             l3546 07F9  
                           l3538 07D9                             l3570 0CCB                             l3562 0CA7  
                           l3618 0945                             l3554 15A0                             l3634 1663  
                           l3626 164C                             l3810 0C72                             l3802 0C65  
                           l4530 01E1                             l4514 0157                             l4522 0168  
                           l4506 0144                             l4450 0063                             l4442 0033  
                           l4380 05F8                             l4372 05C8                             l4364 05AD  
                           l4348 057C                             l4356 0590                             l4292 04B7  
                           l4284 04A4                             l4268 0481                             l4276 0491  
                           l4436 0E2F                             l4428 0E06                             l3476 0973  
                           l3468 095E                             l3660 09D8                             l3644 09AE  
                           l3636 0986                             l3492 16B1                             l4188 077E  
                           l4196 078F                             l3708 0BBC                             l3716 0BD0  
                           l3740 0A87                             l3732 0A75                             l3724 0A69  
                           l3484 16E7                             l3580 0CFE                             l3572 0CD4  
                           l3564 0CB9                             l3556 15A2                             l3548 1599  
                           l3628 1654                             l3652 166F                             l3900 0311  
                           l3820 0C8C                             l3812 0C78                             l3804 0C6B  
                           l4540 0202                             l4532 01E8                             l4524 0179  
                           l4460 0087                             l4452 0066                             l4444 0037  
                           l4390 0626                             l4382 0606                             l4374 05CC  
                           l4358 0594                             l4294 04B8                             l4286 04A5  
                           l4278 0499                             l4438 0E30                             l3478 0974  
                           l3670 09ED                             l3646 09B5                             l3638 0989  
                           l4198 0796                             l3718 0BD5                             l3750 0AA4  
                           l3742 0A8E                             l3734 0A79                             l3726 0A6A  
                           l3486 170F                             l3494 0BDF                             l3590 154F  
                           l3574 0CE6                             l3566 0CBC                             l3582 0D04  
                           l3558 15A9                             l3654 1692                             l3910 0329  
                           l3902 0317                             l3830 0C95                             l3822 0C8E  
                           l3814 0C7B                             l4550 022E                             l4534 01F0  
                           l4526 01C1                             l4470 00C9                             l4462 008D  
                           l4454 006B                             l4446 0039                             l4392 062A  
                           l4384 0615                             l4376 05E5                             l4368 05B5  
                           l4288 04AA                             l4296 04BA                             l3672 09F4  
                           l3664 09DB                             l3648 09B9                             l4624 072D  
                           l3680 0B7C                             l3752 0AAB                             l3744 0A90  
                           l3736 0A7E                             l3728 0A6E                             l3496 0BE7  
                           l3592 1550                             l3576 0CF4                             l3568 0CC7  
                           l3920 035D                             l3912 0334                             l3904 0326  
                           l3832 0C9B                             l3816 0C80                             l3840 0CA5  
                           l3808 0C6D                             l4560 024D                             l4552 0233  
                           l4544 0206                             l4536 01F7                             l4528 01D5  
                           l4480 00EA                             l4472 00CD                             l4464 00A8  
                           l4456 0075                             l4448 004B                             l4394 062C  
                           l4386 0619                             l4378 05EB                             l4298 04CA  
                           l3594 1769                             l3674 09FA                             l3666 09DF  
                           l3658 09CA                             l3690 0B8C                             l3682 0B7D  
                           l3746 0A94                             l3738 0A84                             l3754 0AB1  
                           l3498 0BEE                             l3586 154B                             l3578 0CF5  
                           l3770 173A                             l3762 1711                             l3922 0364  
                           l3914 0338                             l3850 158D                             l3834 0CA1  
                           l3818 0C86                             l4546 0219                             l4538 01FE  
                           l4490 0111                             l4466 00AE                             l4474 00DD  
                           l4458 007F                             l4388 0621                             l3596 1771  
                           l3676 0A06                             l3668 09E5                             l3692 0B91  
                           l3684 0B81                             l3756 0AB6                             l3748 0A9E  
                           l3588 154E                             l3764 172F                             l3780 0B14  
                           l3772 0AC0                             l3940 03A6                             l3924 036F  
                           l3932 037F                             l3916 033E                             l3860 02A5  
                           l3836 0CA3                             l3828 0C90                             l3844 162B  
                           l4564 0253                             l4556 0238                             l4548 0228  
                           l4492 0115                             l4476 00E3                             l4484 0100  
                           l4468 00B4                             l3598 1781                             l3694 0B93  
                           l3686 0B86                             l3758 0ABB                             l3854 0A15  
                           l3766 1734                             l3774 0AC5                             l3942 03B1  
                           l3934 0388                             l3950 03FF                             l3926 037D  
                           l3918 0351                             l3870 02BF                             l3862 02AB  
                           l3790 0C53                             l3782 0C42                             l3846 162D  
                           l4566 0258                             l4558 0249                             l4590 0287  
                           l4494 011A                             l4486 0106                             l4478 00E8  
                           l3696 0B95                             l3688 0B88                             l3856 0A20  
                           l3768 1739                             l3776 0AD4                             l3952 040B  
                           l3960 0441                             l3944 03BC                             l3936 0394  
                           l3880 02DD                             l3864 02AF                             l3848 1586  
                           l3792 0C55                             l3784 0C46                             l4576 0262  
                           l4568 025D                             l4592 029B                             l4496 0125  
                           l4488 010C                             l3698 0B9B                             l3858 0A25  
                           l3778 0B13                             l3970 0466                             l3962 0446  
                           l3954 0412                             l3946 03C1                             l3938 039B  
                           l3890 02F9                             l3882 02E6                             l3874 02C1  
                           l3866 02B8                             l3794 0C57                             l3786 0C48  
                           l4586 026C                             l4578 0267                             l4498 012C  
                           l3972 0469                             l3964 0451                             l3956 041D  
                           l3948 03F5                             l3892 02FF                             l3884 02EE  
                           l3876 02CF                             l3868 02BA                             l3980 0E42  
                           l3788 0C4E                             l3796 0C59                             l3966 0458  
                           l3958 0428                             l3974 046B                             l3894 0308  
                           l3886 02F0                             l3878 02D7                             l3982 0E47  
                           l3798 0C5F                             l3968 045F                             l3888 02F3  
                           l3992 0E53                             l3984 0E4A                             _ADFM 04FF  
                           l3994 0E59                             l3986 0E4C                             l3978 0E3C  
                           l3996 0E5F                             l3988 0E51                             ?_isr 0070  
                           l3998 0E64                             _ADON 00F8                             STR_1 0942  
                           STR_2 093C                             STR_3 0930                             STR_4 0933  
                           STR_5 0936                             STR_6 0939                             STR_7 092B  
                           STR_8 093F                             STR_9 08A2                             u4000 0C4E  
                           u4001 0C4D                             u4010 0C53                             u4011 0C52  
                           u4100 0C95                             u4020 0C5F                             u4101 0C94  
                           u4021 0C5E                             u4110 0C9B                             u4030 0C64  
                           u4111 0C9A                             u4031 0C63                             u4200 02FF  
                           u4120 0CA1                             u4040 0C6B                             u4201 02FE  
                           u4121 0CA0                             u4041 0C6A                             u5010 0DEC  
                           u4210 0317                             u4050 0C72                             u4130 164B  
                           u5011 0DEB                             u4211 0316                             u4051 0C71  
                           u4131 164A                             u4220 033E                             u4300 0E71  
                           u4140 158D                             u4060 0C78                             u5100 008D  
                           u5005 0DDE                             u4221 033D                             u4301 0E70  
                           u4141 158C                             u4061 0C77                             u5101 008C  
                           u5030 0DFC                             u3510 155C                             u4230 0351  
                           u4150 02AB                             u4310 0E76                             u4070 0C80  
                           u5110 00AE                             u5031 0DFB                             u3511 155B  
                           u4231 0350                             u4151 02AA                             u4311 0E75  
                           u4071 0C7F                             u5111 00AD                             u5040 0E02  
                           u3520 1562                             u4240 0388                             u4160 02BF  
                           u4320 0E86                             u4080 0C86                             u4400 0F59  
                           u5200 022E                             u5120 00B4                             u5041 0E01  
                           u5025 0DF1                             u3521 1561                             u4241 0387  
                           u4161 02BE                             u4321 0E85                             u4081 0C85  
                           u4401 0F58                             u5201 022D                             u5121 00B3  
                           u5050 0E06                             u4410 0641                             u3530 1621  
                           u3610 159E                             u4250 03FC                             u4170 02D7  
                           u4090 0C8C                             u4330 0F05                             u5210 0249  
                           u5130 00E3                             u5051 0E05                             u4411 0640  
                           u3531 1620                             u3611 159D                             u4251 03FB  
                           u4171 02D6                             u4091 0C8B                             u4331 0F04  
                           u5211 0248                             u5131 00E2                             u5060 0E1B  
                           u3540 0958                             u3700 1797                             u4500 06B2  
                           u4420 064A                             u3620 15A9                             u4180 02DD  
                           u4260 0E42                             u4340 0F0D                             u5140 00E8  
                           u3541 0954                             u3701 1796                             u4501 06B1  
                           u4421 0648                             u3605 07EC                             u3621 15A8  
                           u4181 02DC                             u4261 0E41                             u4341 0F0C  
                           u5141 00E7                             u5070 0E2B                             u4510 06C4  
                           u4430 064B                             u3630 0CB9                             u3710 17A9  
                           u4190 02F9                             u4270 0E51                             u4350 0F15  
                           u5150 0106                             u5071 0E2A                             u4511 06C3  
                           u3631 0CB8                             u4191 02F8                             u4271 0E50  
                           u4351 0F14                             u5151 0105                             u5080 0E2F  
                           u3800 0A06                             u4520 06F3                             u4440 0653  
                           u3720 1654                             u4280 0E59                             u4360 0F1F  
                           u5160 010C                             u5081 0E2E                             u5065 0E16  
                           u3801 0A05                             u4521 06F2                             u4441 0652  
                           u3721 1653                             u4281 0E58                             u4361 0F1E  
                           u5161 010B                             u4610 0D5A                             u3554 095B  
                           u3730 09AD                             u3570 16E5                             u4530 071A  
                           u4450 066F                             u3810 0B81                             u3650 0CCB  
                           u4290 0E5F                             u4370 0F25                             u5170 0111  
                           u5090 0053                             u4611 0D59                             u3731 09AC  
                           u3571 16E4                             u4531 0719                             u4451 066E  
                           u3811 0B80                             u3651 0CCA                             u3715 17A4  
                           u5307 040F                             u4291 0E5E                             u4371 0F24  
                           u5227 0137                             u5171 0110                             _PEIE 005E  
                           u4700 04AA                             u4620 0D61                             u3740 09B4  
                           u4540 073B                             u4460 0678                             u3900 0BD5  
                           u3820 0B8C                             u4380 0F2D                             u5180 0144  
                           u4701 04A9                             u4621 0D60                             u4605 0D4C  
                           u3565 096B                             u3741 09B3                             u4541 073A  
                           u4461 0677                             u3901 0BD4                             u3821 0B8B  
                           u3645 0CBE                             u5317 043B                             u4381 0F2C  
                           u5237 01E5                             u5181 0143                             u4710 04AF  
                           u3750 09C9                             u4550 074E                             u4470 0680  
                           u3830 0B9B                             u3910 0A6E                             u3670 0CE6  
                           u4390 0F32                             u5190 014A                             u4711 04AE  
                           u3751 09C8                             u4551 074D                             u4471 067F  
                           u5407 1762                             u3831 0B9A                             u3911 0A6D  
                           u3671 0CE5                             u5327 0463                             u4391 0F31  
                           u5247 01FB                             u5191 0149                             u4800 0569  
                           u4720 04CA                             u4640 0D72                             u4560 0D18  
                           u3760 09D8                             u4480 0692                             u3920 0A79  
                           u4801 0568                             u4721 04C9                             u4641 0D71  
                           u4561 0D17                             u3761 09D7                             u4481 0691  
                           u5417 156E                             u3921 0A78                             u3585 07CC  
                           u5337 0BE3                             u3665 0CCD                             u5257 02C9  
                           u4810 0571                             u4730 04E6                             u4650 0D77  
                           u4570 0D2F                             u3770 09ED                             u4490 06AC  
                           u3850 0BAB                             u3930 0A84                             u3690 0D04  
                           u4811 0570                             u4731 04E5                             u4651 0D76  
                           u4635 0D64                             u3771 09EC                             u5427 0786  
                           u4491 06AB                             u3851 0BAA                             u3931 0A83  
                           u3595 07DC                             u5347 0BF2                             u3691 0D03  
                           u3675 0CE2                             u5267 031F                             u4900 05CC  
                           u4740 0520                             u4660 047B                             u4580 0D43  
                           u3780 09F4                             _RCEN 048B                             u4901 05CB  
                           u4741 051F                             u4661 047A                             u4581 0D42  
                           u3781 09F3                             u5437 16B5                             u3845 0B9F  
                           u5357 0C00                             u3685 0CF6                             u5277 0361  
                           u4910 05DB                             u4830 0580                             u4670 0481  
                           u4590 0D4A                             u3790 09FA                             u3870 0BBC  
                           u3950 0A94                             u4831 057F                             u4671 0480  
                           u4591 0D49                             u4575 0D2A                             u5447 0961  
                           u3791 09F9                             u3871 0BBB                             u3951 0A93  
                           u5367 0C16                             u5287 0377                             u4920 05F8  
                           u4680 0486                             u3960 0A9E                             u4921 05F7  
                           u4825 0575                             u4681 0485                             u5457 0976  
                           u3865 0BAC                             u3961 0A9D                             u3945 0A88  
                           u5377 0C22                             u5297 0398                             u4930 0615  
                           u4850 0594                             u4770 0536                             u4690 04A4  
                           u3890 0BD0                             u4931 0614                             u4915 05D6  
                           u4851 0593                             u4771 0535                             u4755 0522  
                           u4691 04A3                             u5467 0980                             u3891 0BCF  
                           u3875 0BB8                             u5387 0C30                             u4940 062A  
                           u4860 0599                             u3980 0AB1                             u4941 0629  
                           u4925 05F4                             u4861 0598                             u4845 0583  
                           u4765 052B                             u3885 0BC4                             u3981 0AB0  
                           u3965 0A9A                             u5397 0C3E                             u4870 05AD  
                           u4790 0552                             u4950 0D8B                             u3990 0AB6  
                           u4935 0611                             u4871 05AC                             u4791 0551  
                           u4951 0D8A                             u3991 0AB5                             u3975 0AA5  
                           u4880 05B4                             u4960 0D8F                             u4881 05B3  
                           u4785 0539                             u4961 0D8E                             u4890 05BA  
                           u4970 0DAF                             u4891 05B9                             u4795 054E  
                           u4971 0DAE                             u4990 0DCC                             u4991 0DCB  
                           u4985 0DBE                             _R_nW 04A2    read_digital_keypad@long_press 005A  
                           _main 0033                             _menu 00D2                             _time 00BB  
                           btemp 007E                             start 000C                  ___fldiv@new_exp 003C  
                 menu_screen@key 0025                ___bmul@multiplier 0074                   clcd_write@byte 0075  
                 clcd_write@mode 0072                    _i2c_rep_start 1540                            ??_isr 0070  
                   ?_init_ds1307 0070                    ___fltol@sign1 004C                            ?_main 0070  
                   ?_read_ds1307 0070                            _ACKEN 048C                            _ACKDT 048D  
                 ??_display_time 007A                  __end_of___fldiv 0637                  __end_of___awdiv 0BDF  
                          STR_10 090D                            STR_11 08F0                            STR_20 0884  
                          STR_12 08BF                            STR_21 08CC                            STR_13 0904  
                          STR_30 0800                            STR_22 08A2                            STR_14 0893  
                          STR_23 08FA                            STR_15 0875                            STR_31 0823  
                          STR_24 08D9                            STR_32 08B1                            STR_16 0866  
                          STR_25 08E5                            STR_17 0856                            STR_33 0845  
                          STR_26 080D                            STR_34 091F                            STR_18 0916  
                          STR_19 0926                            STR_27 0812                            STR_28 0834  
                __end_of___awmod 0AC0                            STR_29 0800                  __end_of___fltol 0D83  
                __end_of___lldiv 0D0D                      i2c_read@ack 0072                  ___awdiv@divisor 0072  
                          i1l434 17F9                     ?_init_config 0070                  ___awdiv@counter 0076  
                          _PORTB 0006                            _PORTD 0008                            _SSPM3 00A3  
                          _TRISB 0086                            _TRISD 0088                            _SSPEN 00A5  
                   ?_init_timer2 0070                     main@menu_pos 019D                            _nDONE 00FA  
                   view_log@addr 0025                            _login 02A2                  _change_password 0637  
                   ?_menu_screen 0022                            pclath 000A                            status 0003  
                          wtemp0 007E                  __end_of_strncmp 0A15                  __end_of_strncpy 09CA  
               init_ds1307@dummy 0076                  __initialization 000F                   ?_i2c_rep_start 0070  
                   __end_of_main 02A2                 __end_of_i2c_read 162B                 __end_of_i2c_stop 1535  
                         ??_main 004E                    ?_read_at24c04 0070                           _ADRESH 001E  
                         ?_login 0022                           _ADRESL 009E                 ___awdiv@dividend 0074  
                   i2c_read@data 0073                           i1l3390 17EB                           i1l3382 17CA  
                         i1l3392 17F0                           i1l3384 17D0                           i1l3394 17F2  
                         i1l3386 17E1                           i1l3388 17E8                           i1l3396 17F6  
                         u350_20 17F0                           u350_21 17EF                     _write_ds1307 15EC  
                         u347_20 17D0                           u347_21 17CF                           u348_20 17E1  
                         u348_21 17E0                           u349_20 17E8                           u349_21 17E7  
                         _TMR2IE 0461                           _TMR2IF 0061                           _TMR2ON 0092  
                         _SSPADD 0093                           _TRISE1 0449                           _TRISE2 044A  
                         _SSPBUF 0013                 __end_of___xxtofl 0E39      __end_of_init_digital_keypad 1514  
               __end_of_get_time 07FB                           ___bmul 1598          _init_display_controller 0BDF  
                      ??___fldiv 0032                        ??___awdiv 0076                        ??___awmod 0076  
                      ??___fltol 0048                        ??___lldiv 0020        change_password@reset_flag 0024  
               __end_of_init_i2c 17CA                 __end_of_init_adc 151B                 __end_of_read_adc 1598  
               ___awdiv@quotient 0078                  ___awmod@divisor 0072                  ___awmod@counter 0076  
                         main@gr 01A1                           _strcpy 162B                           login@i 0056  
                         login@j 002B          __end_of_change_password 07AE                           saved_w 007E  
               __end_of_view_log 1000                   ??_read_at24c04 0074                        ??_strncmp 0076  
                      ??_strncpy 0077                     ___xxtofl@arg 0026                     ___xxtofl@exp 0025  
                   ___xxtofl@val 0076          __end_of__initialization 002F             __end_of_display_time 0B7C  
                     ___fltol@f1 0044                  ??_i2c_rep_start 0072              ___bmul@multiplicand 0072  
                 __pcstackCOMMON 0070                     __pidataBANK1 15D3                    __end_of_login 046D  
                login@reset_flag 0022                __end_of_i2c_start 152C                __end_of_i2c_write 1540  
   change_password@toggle_cursor 0052                _i2c_wait_for_idle 1556                          ??_login 0023  
             ?_i2c_wait_for_idle 0070                       __pbssBANK0 0052                       __pbssBANK1 00A0  
                      ?_i2c_read 0070                        ?_i2c_stop 0070        ??_init_display_controller 0076  
                     _clcd_print 1769              ??_i2c_wait_for_idle 0072                       _clcd_putch 15BE  
                     _clcd_write 0950                       __pmaintext 0033                  read_ds1307@addr 0074  
                  _log_car_event 0AC0                  read_ds1307@data 0075                          ?___bmul 0072  
                     __pintentry 0004                          _ACKSTAT 048E                          ?_strcpy 0072  
                        _T2CKPS0 0090                          _T2CKPS1 0091                  login@stored_pwd 0026  
    __end_of_read_digital_keypad 0CA7                        ?___xxtofl 0076                 ?_change_password 0022  
      __end_of_i2c_wait_for_idle 1563                    _write_at24c04 1694                     init_i2c@baud 0026  
                        _SSPCON2 0091                        ?_get_time 0070                       __stringtab 1000  
                     ??_i2c_read 0072                       ??_i2c_stop 0072                        ?_init_i2c 0026  
                      ?_init_adc 0070                        ?_read_adc 0072                __end_of_clear_log 1769  
                 ?_log_car_event 0021               change_password@key 0022             __end_of_read_at24c04 1694  
                        ___fldiv 046D                          ___awdiv 0B7C                          ___awmod 0A69  
                      ?_view_log 0022                          ___fltol 0D0D                          ___lldiv 0CA7  
                 main@long_press 019C                 main@control_flag 01A4                          __ptext1 0EEF  
                        __ptext2 162B                          __ptext3 0C42                          __ptext4 1586  
                        __ptext5 0E39                          __ptext6 02A2                          __ptext7 166E  
                        __ptext8 0AC0                          __ptext9 164C  __end_of_init_display_controller 0C42  
              __end_of_init_clcd 1556           read_digital_keypad@key 0072                   ?_write_at24c04 0073  
                     ??___xxtofl 0020                 ___awmod@dividend 0074                   main@reset_flag 01A3  
         display_dashboard@event 0022           display_dashboard@speed 0023                          main@key 01A5  
                        clrloop0 151C                       _record_log 164C                       ??_get_time 0076  
                        _strncmp 09CA                          _strncpy 0986             end_of_initialization 002F  
         change_password@new_pwd 00B2                       ??_init_i2c 002A                       ??_init_adc 0072  
                     ??_read_adc 0074           change_password@pwd_pos 007A                _clear_clcd_screen 1563  
                    ?_clcd_print 0076                      ?_clcd_putch 0020                  ___lldiv@divisor 0072  
                    ?_clcd_write 0072                  ___lldiv@counter 0025               ?_clear_clcd_screen 0070  
                     ??_view_log 0023                     __pstringtext 0800              ??_clear_clcd_screen 0076  
                        strcpy@d 0077                     _display_time 0B1A                    i2c_write@data 0072  
                  ___xxtofl@sign 0024                      ___fldiv@grs 003E                      ___fldiv@rem 0037  
                  clcd_print@str 0076        __end_of_clear_clcd_screen 1574                _write_str_at24c04 16BB  
                ??_log_car_event 0023               ?_write_str_at24c04 0077                   __end_of___bmul 15AB  
            ??_write_str_at24c04 0079                  ??_write_at24c04 0074                      view_log@key 0026  
                 __end_of_strcpy 164C              start_initialization 000F                        _i2c_start 1523  
                    __end_of_isr 1800                        _i2c_write 1535                      ?_record_log 0070  
      __end_of_write_str_at24c04 16E6            __end_of_i2c_rep_start 154B                         ??___bmul 0073  
                     init_fetch0 15AB                    ??_init_ds1307 0076                      __pdataBANK1 00C6  
     read_digital_keypad@pre_key 005B                    ??_read_ds1307 0074                         ??_strcpy 0075  
                  ??_init_config 007A                        ___fldiv@a 002A                        ___fldiv@b 002E  
                  ??_init_timer2 0072                      __pbssCOMMON 007A                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK3 0190                       ?_i2c_start 0070  
                     ?_i2c_write 0070                   record_log@addr 0020                     _read_at24c04 166E  
                  ??_menu_screen 0023                        _clear_log 173C                         ?___fldiv 002A  
                       ?___awdiv 0072                         ?___awmod 0072                         ?___fltol 0044  
              _display_dashboard 0A15                         ?___lldiv 0072                        _clock_reg 00A0  
               read_at24c04@addr 0074                 read_at24c04@data 0075               ?_display_dashboard 0022  
                      __pstrings 1000              __end_of_init_ds1307 1586              read_adc@adc_reg_val 0074  
            ??_display_dashboard 0024              __end_of_read_ds1307 1711                        _init_clcd 154B  
            __end_of_init_config 173C                         ?_strncmp 0072                         ?_strncpy 0072  
                      _log_count 0057                    ?_write_ds1307 0073              __end_of_init_timer2 0950  
       ?_init_display_controller 0070                interrupt_function 0004                        clear_ram0 151B  
                   ??_clcd_print 0079                     ??_clcd_putch 007A              __end_of_menu_screen 0EEF  
                   ??_clcd_write 0073                       ?_clear_log 0070        __end_of_display_dashboard 0A69  
                      main@F1242 00DC                        main@F1244 00C6                      __stringbase 1012  
                      main@event 019E       change_password@blink_delay 00A5                        main@speed 01A2  
                    ??_i2c_start 0072               __end_of_clcd_print 1798                      ??_i2c_write 0072  
             __end_of_clcd_putch 15D3               __end_of_clcd_write 0986                       ?_init_clcd 0070  
                 ??_write_ds1307 0074              _init_digital_keypad 150E            write_str_at24c04@addr 0079  
                       _i2c_read 160A            write_str_at24c04@data 0077                         _i2c_stop 152C  
             login@user_password 00C2             ?_init_digital_keypad 0070                      _init_ds1307 1574  
             __end_of__stringtab 1012                      _read_ds1307 16E6                      _init_config 1711  
                       ___xxtofl 0D83                      _init_timer2 0945                         __ptext10 1598  
                       __ptext11 1711                         __ptext20 1514                         __ptext12 0945  
                       __ptext21 0A15                         __ptext13 1798                         __ptext30 1563  
                       __ptext22 0B1A                         __ptext14 0CA7                         __ptext31 0637  
                       __ptext23 07AE                         __ptext15 1574                         __ptext40 15BE  
                       __ptext32 16BB                         __ptext24 16E6                         __ptext16 15EC  
                       __ptext41 1769                         __ptext33 1694                         __ptext25 1540  
                       __ptext17 150E                         __ptext42 0950                         __ptext34 1535  
                       __ptext26 160A                         __ptext18 154B                         __ptext43 0D83  
                       __ptext35 152C                         __ptext27 0A69                         __ptext19 0BDF  
                       __ptext44 0D0D                         __ptext36 1523                         __ptext28 0B7C  
                       __ptext45 046D                         __ptext37 1556                         __ptext29 173C  
                       __ptext46 17CA                         __ptext38 0986                         __ptext39 09CA  
                   ??_record_log 007A                login@attempt_left 0055                         _get_time 07AE  
                    _menu_screen 0E39                       strcpy@dest 0072                         _init_i2c 1798  
                       _init_adc 1514                         _read_adc 1586          read_digital_keypad@once 007B  
          __end_of_log_car_event 0B1A                      ??_clear_log 0020                ??_change_password 0025  
                       _view_log 0EEF                  view_log@log_pos 0053            ??_init_digital_keypad 0072  
                       main@gear 0190               __end_of_record_log 166E                        view_log@i 0027  
          __end_of_write_at24c04 16BB                         isr@count 00A3                         init_ram0 15AF  
                    ??_init_clcd 0078                         login@key 002A                         intlevel1 0000  
               ___lldiv@dividend 0076                        strcpy@src 0073                        stringcode 100A  
                      strncpy@cp 0079             __end_of_write_ds1307 160A              _read_digital_keypad 0C42  
               ___lldiv@quotient 0021                         strncmp@l 0072                         strncmp@n 0074  
                       strncmp@r 0073                         stringtab 1000                         strncpy@d 0072  
                       strncpy@n 0075                         strncpy@s 0073                write_at24c04@addr 0076  
              write_at24c04@data 0073                      _return_time 0059             ?_read_digital_keypad 0070  
               write_ds1307@addr 0074                 write_ds1307@data 0073            menu_screen@reset_flag 0022  
            menu_screen@menu_pos 0054  
